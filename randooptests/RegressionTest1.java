package com.google.javascript.jscomp;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

  public static boolean debug = false;

  @Test
  public void test001() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test001"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str12 = composeWarningsGuard11.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);

  }

  @Test
  public void test002() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test002"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup23);
    com.google.javascript.jscomp.JSError jSError25 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel26 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test003() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test003"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = composeWarningsGuard3.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array12 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard13 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard13, warningsGuard_array12);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard15 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard13);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array16 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard11, composeWarningsGuard15 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard17 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard17, warningsGuard_array16);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard19 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard17);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array20 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard19 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array20);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array20);

  }

  @Test
  public void test004() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test004"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard13.level(jSError14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard13.level(jSError16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard13.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b21 = composeWarningsGuard13.disables(diagnosticGroup20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);

  }

  @Test
  public void test005() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test005"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)'#', (int)(short)-1, "");
    java.lang.String str4 = simpleRegion3.getSourceExcerpt();
    int i5 = simpleRegion3.getBeginningLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + ""+ "'", str4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 35);

  }

  @Test
  public void test006() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test006"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard3.level(jSError10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b15 = composeWarningsGuard3.disables(diagnosticGroup14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);

  }

  @Test
  public void test007() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test007"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard13.enables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard13.level(jSError16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b19 = composeWarningsGuard13.disables(diagnosticGroup18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);

  }

  @Test
  public void test008() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test008"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.JSError jSError25 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel26 = composeWarningsGuard24.level(jSError25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);

  }

  @Test
  public void test009() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test009"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(32, (int)'#', "null(OFF)(hi!)");
    java.lang.String str4 = simpleRegion3.getSourceExcerpt();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null(OFF)(hi!)"+ "'", str4.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test010() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test010"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard8 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard9 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard9.enables(diagnosticGroup10);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str12 = composeWarningsGuard9.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test011() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test011"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard12.level(jSError13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = composeWarningsGuard12.enables(diagnosticGroup25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = composeWarningsGuard12.enables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = composeWarningsGuard12.enables(diagnosticGroup29);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str31 = composeWarningsGuard12.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test012() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test012"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup16);
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str19 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard22 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup20, "hi!");
    java.lang.String str23 = diagnosticGroupPathSuppressingWarningsGuard22.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard22.enables(diagnosticGroup24);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard22.enables(diagnosticGroup26);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = diagnosticGroupPathSuppressingWarningsGuard22.disables(diagnosticGroup28);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = diagnosticGroupPathSuppressingWarningsGuard22.enables(diagnosticGroup30);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array32 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard33 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard33, warningsGuard_array32);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard35 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard33);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array36 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard37 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard37, warningsGuard_array36);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard39 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard37);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array40 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard35, composeWarningsGuard39 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard41 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard41, warningsGuard_array40);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard43 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard41);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard44 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard41);
    com.google.javascript.jscomp.JSError jSError45 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel46 = composeWarningsGuard44.level(jSError45);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup47 = null;
    boolean b48 = composeWarningsGuard44.enables(diagnosticGroup47);
    com.google.javascript.jscomp.JSError jSError49 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel50 = composeWarningsGuard44.level(jSError49);
    com.google.javascript.jscomp.JSError jSError51 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel52 = composeWarningsGuard44.level(jSError51);
    com.google.javascript.jscomp.JSError jSError53 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel54 = composeWarningsGuard44.level(jSError53);
    com.google.javascript.jscomp.JSError jSError55 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel56 = composeWarningsGuard44.level(jSError55);
    com.google.javascript.jscomp.JSError jSError57 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel58 = composeWarningsGuard44.level(jSError57);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup59 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard61 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup59, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup62 = null;
    boolean b63 = diagnosticGroupPathSuppressingWarningsGuard61.disables(diagnosticGroup62);
    java.lang.String str64 = diagnosticGroupPathSuppressingWarningsGuard61.toString();
    java.lang.String str65 = diagnosticGroupPathSuppressingWarningsGuard61.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup66 = null;
    boolean b67 = diagnosticGroupPathSuppressingWarningsGuard61.enables(diagnosticGroup66);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup68 = null;
    boolean b69 = diagnosticGroupPathSuppressingWarningsGuard61.enables(diagnosticGroup68);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup70 = null;
    boolean b71 = diagnosticGroupPathSuppressingWarningsGuard61.disables(diagnosticGroup70);
    java.lang.String str72 = diagnosticGroupPathSuppressingWarningsGuard61.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup73 = null;
    boolean b74 = diagnosticGroupPathSuppressingWarningsGuard61.disables(diagnosticGroup73);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup75 = null;
    boolean b76 = diagnosticGroupPathSuppressingWarningsGuard61.disables(diagnosticGroup75);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup77 = null;
    boolean b78 = diagnosticGroupPathSuppressingWarningsGuard61.disables(diagnosticGroup77);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup79 = null;
    boolean b80 = diagnosticGroupPathSuppressingWarningsGuard61.enables(diagnosticGroup79);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup81 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard83 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup81, "");
    java.lang.String str84 = diagnosticGroupPathSuppressingWarningsGuard83.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup85 = null;
    boolean b86 = diagnosticGroupPathSuppressingWarningsGuard83.enables(diagnosticGroup85);
    java.lang.String str87 = diagnosticGroupPathSuppressingWarningsGuard83.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup88 = null;
    boolean b89 = diagnosticGroupPathSuppressingWarningsGuard83.enables(diagnosticGroup88);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup90 = null;
    boolean b91 = diagnosticGroupPathSuppressingWarningsGuard83.enables(diagnosticGroup90);
    java.lang.String str92 = diagnosticGroupPathSuppressingWarningsGuard83.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array93 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard22, composeWarningsGuard44, diagnosticGroupPathSuppressingWarningsGuard61, diagnosticGroupPathSuppressingWarningsGuard83 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard94 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array93);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null(OFF)(hi!)"+ "'", str19.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "null(OFF)(hi!)"+ "'", str23.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "null(OFF)(hi!)"+ "'", str64.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "null(OFF)(hi!)"+ "'", str65.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str72 + "' != '" + "null(OFF)(hi!)"+ "'", str72.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str84 + "' != '" + "null(OFF)()"+ "'", str84.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b86 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str87 + "' != '" + "null(OFF)()"+ "'", str87.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str92 + "' != '" + "null(OFF)()"+ "'", str92.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array93);

  }

  @Test
  public void test013() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test013"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard3.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard3.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b19 = composeWarningsGuard3.disables(diagnosticGroup18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test014() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test014"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "null(OFF)(hi!)");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array6 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard7 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard7, warningsGuard_array6);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard9 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard9.enables(diagnosticGroup10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard9.level(jSError12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard9.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard9.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard9.enables(diagnosticGroup18);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array20 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, composeWarningsGuard9 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array20);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(null(OFF)(hi!))"+ "'", str5.equals("null(OFF)(null(OFF)(hi!))"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array20);

  }

  @Test
  public void test015() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test015"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard11 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup9, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = diagnosticGroupPathSuppressingWarningsGuard11.disables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard11.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard11.disables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard11.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard11.disables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard11.disables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard11.enables(diagnosticGroup24);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard11.enables(diagnosticGroup26);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = diagnosticGroupPathSuppressingWarningsGuard11.enables(diagnosticGroup28);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard32 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup30, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    boolean b34 = diagnosticGroupPathSuppressingWarningsGuard32.disables(diagnosticGroup33);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    boolean b36 = diagnosticGroupPathSuppressingWarningsGuard32.disables(diagnosticGroup35);
    java.lang.String str37 = diagnosticGroupPathSuppressingWarningsGuard32.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup38 = null;
    boolean b39 = diagnosticGroupPathSuppressingWarningsGuard32.disables(diagnosticGroup38);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup40 = null;
    boolean b41 = diagnosticGroupPathSuppressingWarningsGuard32.enables(diagnosticGroup40);
    java.lang.String str42 = diagnosticGroupPathSuppressingWarningsGuard32.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup43 = null;
    boolean b44 = diagnosticGroupPathSuppressingWarningsGuard32.disables(diagnosticGroup43);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup45 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard47 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup45, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup48 = null;
    boolean b49 = diagnosticGroupPathSuppressingWarningsGuard47.disables(diagnosticGroup48);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup50 = null;
    boolean b51 = diagnosticGroupPathSuppressingWarningsGuard47.disables(diagnosticGroup50);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup52 = null;
    boolean b53 = diagnosticGroupPathSuppressingWarningsGuard47.disables(diagnosticGroup52);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup54 = null;
    boolean b55 = diagnosticGroupPathSuppressingWarningsGuard47.disables(diagnosticGroup54);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup56 = null;
    boolean b57 = diagnosticGroupPathSuppressingWarningsGuard47.disables(diagnosticGroup56);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup58 = null;
    boolean b59 = diagnosticGroupPathSuppressingWarningsGuard47.enables(diagnosticGroup58);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup60 = null;
    boolean b61 = diagnosticGroupPathSuppressingWarningsGuard47.enables(diagnosticGroup60);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup62 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard64 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup62, "hi!");
    java.lang.String str65 = diagnosticGroupPathSuppressingWarningsGuard64.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup66 = null;
    boolean b67 = diagnosticGroupPathSuppressingWarningsGuard64.enables(diagnosticGroup66);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup68 = null;
    boolean b69 = diagnosticGroupPathSuppressingWarningsGuard64.enables(diagnosticGroup68);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup70 = null;
    boolean b71 = diagnosticGroupPathSuppressingWarningsGuard64.disables(diagnosticGroup70);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup72 = null;
    boolean b73 = diagnosticGroupPathSuppressingWarningsGuard64.disables(diagnosticGroup72);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup74 = null;
    boolean b75 = diagnosticGroupPathSuppressingWarningsGuard64.enables(diagnosticGroup74);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array76 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard11, diagnosticGroupPathSuppressingWarningsGuard32, diagnosticGroupPathSuppressingWarningsGuard47, diagnosticGroupPathSuppressingWarningsGuard64 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard77 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array76);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null(OFF)(hi!)"+ "'", str37.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "null(OFF)(hi!)"+ "'", str42.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "null(OFF)(hi!)"+ "'", str65.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array76);

  }

  @Test
  public void test016() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test016"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard7.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b11 = composeWarningsGuard7.disables(diagnosticGroup10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);

  }

  @Test
  public void test017() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test017"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.JSError jSError13 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel14 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test018() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test018"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard13.level(jSError14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard13.level(jSError16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard13.level(jSError18);
    com.google.javascript.jscomp.JSError jSError20 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel21 = composeWarningsGuard13.level(jSError20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel23 = composeWarningsGuard13.level(jSError22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = composeWarningsGuard13.enables(diagnosticGroup24);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str26 = composeWarningsGuard13.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);

  }

  @Test
  public void test019() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test019"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    java.lang.String str16 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard24 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup22, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = diagnosticGroupPathSuppressingWarningsGuard24.disables(diagnosticGroup25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = diagnosticGroupPathSuppressingWarningsGuard24.disables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = diagnosticGroupPathSuppressingWarningsGuard24.disables(diagnosticGroup29);
    java.lang.String str31 = diagnosticGroupPathSuppressingWarningsGuard24.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    boolean b33 = diagnosticGroupPathSuppressingWarningsGuard24.enables(diagnosticGroup32);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup34 = null;
    boolean b35 = diagnosticGroupPathSuppressingWarningsGuard24.disables(diagnosticGroup34);
    java.lang.String str36 = diagnosticGroupPathSuppressingWarningsGuard24.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup37 = null;
    boolean b38 = diagnosticGroupPathSuppressingWarningsGuard24.enables(diagnosticGroup37);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup39 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard41 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup39, "");
    java.lang.String str42 = diagnosticGroupPathSuppressingWarningsGuard41.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup43 = null;
    boolean b44 = diagnosticGroupPathSuppressingWarningsGuard41.disables(diagnosticGroup43);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup45 = null;
    boolean b46 = diagnosticGroupPathSuppressingWarningsGuard41.disables(diagnosticGroup45);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup47 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard49 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup47, "null(OFF)(hi!)");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup50 = null;
    boolean b51 = diagnosticGroupPathSuppressingWarningsGuard49.enables(diagnosticGroup50);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup52 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard54 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup52, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup55 = null;
    boolean b56 = diagnosticGroupPathSuppressingWarningsGuard54.disables(diagnosticGroup55);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup57 = null;
    boolean b58 = diagnosticGroupPathSuppressingWarningsGuard54.disables(diagnosticGroup57);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup59 = null;
    boolean b60 = diagnosticGroupPathSuppressingWarningsGuard54.disables(diagnosticGroup59);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup61 = null;
    boolean b62 = diagnosticGroupPathSuppressingWarningsGuard54.disables(diagnosticGroup61);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup63 = null;
    boolean b64 = diagnosticGroupPathSuppressingWarningsGuard54.disables(diagnosticGroup63);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup65 = null;
    boolean b66 = diagnosticGroupPathSuppressingWarningsGuard54.enables(diagnosticGroup65);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup67 = null;
    boolean b68 = diagnosticGroupPathSuppressingWarningsGuard54.enables(diagnosticGroup67);
    java.lang.String str69 = diagnosticGroupPathSuppressingWarningsGuard54.toString();
    java.lang.String str70 = diagnosticGroupPathSuppressingWarningsGuard54.toString();
    java.lang.String str71 = diagnosticGroupPathSuppressingWarningsGuard54.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup72 = null;
    boolean b73 = diagnosticGroupPathSuppressingWarningsGuard54.disables(diagnosticGroup72);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array74 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard24, diagnosticGroupPathSuppressingWarningsGuard41, diagnosticGroupPathSuppressingWarningsGuard49, diagnosticGroupPathSuppressingWarningsGuard54 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard75 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array74);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null(OFF)(hi!)"+ "'", str16.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null(OFF)(hi!)"+ "'", str31.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "null(OFF)(hi!)"+ "'", str36.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "null(OFF)()"+ "'", str42.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str69 + "' != '" + "null(OFF)(hi!)"+ "'", str69.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str70 + "' != '" + "null(OFF)(hi!)"+ "'", str70.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str71 + "' != '" + "null(OFF)(hi!)"+ "'", str71.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array74);

  }

  @Test
  public void test020() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test020"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b26 = composeWarningsGuard12.disables(diagnosticGroup25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);

  }

  @Test
  public void test021() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test021"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup16);
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array19 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array19);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array19);

  }

  @Test
  public void test022() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test022"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.JSError jSError6 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel7 = composeWarningsGuard3.level(jSError6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b11 = composeWarningsGuard3.disables(diagnosticGroup10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);

  }

  @Test
  public void test023() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test023"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard14 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard15 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard15.level(jSError16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard15.enables(diagnosticGroup18);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str20 = composeWarningsGuard15.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);

  }

  @Test
  public void test024() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test024"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = composeWarningsGuard3.enables(diagnosticGroup4);
    com.google.javascript.jscomp.JSError jSError6 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel7 = composeWarningsGuard3.level(jSError6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b13 = composeWarningsGuard3.disables(diagnosticGroup12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test025() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test025"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b26 = composeWarningsGuard24.disables(diagnosticGroup25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);

  }

  @Test
  public void test026() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test026"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(10, (int)'4', "");
    int i4 = simpleRegion3.getEndingLineNumber();
    int i5 = simpleRegion3.getBeginningLineNumber();
    int i6 = simpleRegion3.getEndingLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 52);

  }

  @Test
  public void test027() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test027"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = composeWarningsGuard24.enables(diagnosticGroup25);
    com.google.javascript.jscomp.JSError jSError27 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel28 = composeWarningsGuard24.level(jSError27);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test028() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test028"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = composeWarningsGuard26.enables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = composeWarningsGuard26.enables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = composeWarningsGuard26.enables(diagnosticGroup31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    boolean b34 = composeWarningsGuard26.enables(diagnosticGroup33);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str35 = composeWarningsGuard26.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test029() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test029"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(97, (int)(short)100, "null(OFF)(null(OFF)(hi!))");

  }

  @Test
  public void test030() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test030"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = composeWarningsGuard12.enables(diagnosticGroup25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = composeWarningsGuard12.enables(diagnosticGroup27);
    com.google.javascript.jscomp.JSError jSError29 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel30 = composeWarningsGuard12.level(jSError29);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str31 = composeWarningsGuard12.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel30);

  }

  @Test
  public void test031() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test031"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)' ', 32, "null(OFF)(null(OFF)(hi!))");

  }

  @Test
  public void test032() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test032"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = composeWarningsGuard3.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard3.level(jSError10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard3.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard3.enables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard3.level(jSError16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard20 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup18, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard20.disables(diagnosticGroup21);
    java.lang.String str23 = diagnosticGroupPathSuppressingWarningsGuard20.toString();
    java.lang.String str24 = diagnosticGroupPathSuppressingWarningsGuard20.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = diagnosticGroupPathSuppressingWarningsGuard20.enables(diagnosticGroup25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = diagnosticGroupPathSuppressingWarningsGuard20.enables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = diagnosticGroupPathSuppressingWarningsGuard20.disables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = diagnosticGroupPathSuppressingWarningsGuard20.disables(diagnosticGroup31);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array33 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard20 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard34 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array33);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "null(OFF)(hi!)"+ "'", str23.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "null(OFF)(hi!)"+ "'", str24.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array33);

  }

  @Test
  public void test033() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test033"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel22 = composeWarningsGuard12.level(jSError21);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str23 = composeWarningsGuard12.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel22);

  }

  @Test
  public void test034() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test034"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array14 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard15 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard15, warningsGuard_array14);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard17 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard15);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard17.level(jSError18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = composeWarningsGuard17.enables(diagnosticGroup20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel23 = composeWarningsGuard17.level(jSError22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = composeWarningsGuard17.enables(diagnosticGroup24);
    com.google.javascript.jscomp.JSError jSError26 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel27 = composeWarningsGuard17.level(jSError26);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = composeWarningsGuard17.enables(diagnosticGroup28);
    com.google.javascript.jscomp.JSError jSError30 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel31 = composeWarningsGuard17.level(jSError30);
    com.google.javascript.jscomp.JSError jSError32 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel33 = composeWarningsGuard17.level(jSError32);
    com.google.javascript.jscomp.JSError jSError34 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel35 = composeWarningsGuard17.level(jSError34);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = composeWarningsGuard17.enables(diagnosticGroup36);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array38 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, composeWarningsGuard17 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard39 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array38);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array38);

  }

  @Test
  public void test035() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test035"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str4 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError5 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel6 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)()"+ "'", str3.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null(OFF)()"+ "'", str4.equals("null(OFF)()"));

  }

  @Test
  public void test036() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test036"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel22 = composeWarningsGuard12.level(jSError21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b24 = composeWarningsGuard12.disables(diagnosticGroup23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel22);

  }

  @Test
  public void test037() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test037"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "null(OFF)(hi!)");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array9 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard10 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard10, warningsGuard_array9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard10);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard12, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard22.level(jSError23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = composeWarningsGuard22.enables(diagnosticGroup25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = composeWarningsGuard22.enables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = composeWarningsGuard22.enables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = composeWarningsGuard22.enables(diagnosticGroup31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard35 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup33, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = diagnosticGroupPathSuppressingWarningsGuard35.disables(diagnosticGroup36);
    java.lang.String str38 = diagnosticGroupPathSuppressingWarningsGuard35.toString();
    java.lang.String str39 = diagnosticGroupPathSuppressingWarningsGuard35.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup40 = null;
    boolean b41 = diagnosticGroupPathSuppressingWarningsGuard35.enables(diagnosticGroup40);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup42 = null;
    boolean b43 = diagnosticGroupPathSuppressingWarningsGuard35.disables(diagnosticGroup42);
    java.lang.String str44 = diagnosticGroupPathSuppressingWarningsGuard35.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup45 = null;
    boolean b46 = diagnosticGroupPathSuppressingWarningsGuard35.enables(diagnosticGroup45);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup47 = null;
    boolean b48 = diagnosticGroupPathSuppressingWarningsGuard35.enables(diagnosticGroup47);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array49 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard50 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard50, warningsGuard_array49);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard52 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard50);
    com.google.javascript.jscomp.JSError jSError53 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel54 = composeWarningsGuard52.level(jSError53);
    com.google.javascript.jscomp.JSError jSError55 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel56 = composeWarningsGuard52.level(jSError55);
    com.google.javascript.jscomp.JSError jSError57 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel58 = composeWarningsGuard52.level(jSError57);
    com.google.javascript.jscomp.JSError jSError59 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel60 = composeWarningsGuard52.level(jSError59);
    com.google.javascript.jscomp.JSError jSError61 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel62 = composeWarningsGuard52.level(jSError61);
    com.google.javascript.jscomp.JSError jSError63 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel64 = composeWarningsGuard52.level(jSError63);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup65 = null;
    boolean b66 = composeWarningsGuard52.enables(diagnosticGroup65);
    com.google.javascript.jscomp.JSError jSError67 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel68 = composeWarningsGuard52.level(jSError67);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array69 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard70 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard70, warningsGuard_array69);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard72 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard70);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array73 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard74 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b75 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard74, warningsGuard_array73);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard76 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard74);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array77 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard72, composeWarningsGuard76 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard78 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard78, warningsGuard_array77);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard80 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard78);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard81 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard78);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup82 = null;
    boolean b83 = composeWarningsGuard81.enables(diagnosticGroup82);
    com.google.javascript.jscomp.JSError jSError84 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel85 = composeWarningsGuard81.level(jSError84);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup86 = null;
    boolean b87 = composeWarningsGuard81.enables(diagnosticGroup86);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup88 = null;
    boolean b89 = composeWarningsGuard81.enables(diagnosticGroup88);
    com.google.javascript.jscomp.JSError jSError90 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel91 = composeWarningsGuard81.level(jSError90);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array92 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, composeWarningsGuard22, diagnosticGroupPathSuppressingWarningsGuard35, composeWarningsGuard52, composeWarningsGuard81 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard93 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array92);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "null(OFF)(hi!)"+ "'", str38.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "null(OFF)(hi!)"+ "'", str39.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "null(OFF)(hi!)"+ "'", str44.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b87 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel91);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array92);

  }

  @Test
  public void test038() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test038"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard12.level(jSError13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel22 = composeWarningsGuard12.level(jSError21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = composeWarningsGuard12.enables(diagnosticGroup25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = composeWarningsGuard12.enables(diagnosticGroup27);
    com.google.javascript.jscomp.JSError jSError29 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel30 = composeWarningsGuard12.level(jSError29);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str31 = composeWarningsGuard12.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel30);

  }

  @Test
  public void test039() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test039"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel16 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test040() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test040"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = composeWarningsGuard23.enables(diagnosticGroup24);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b27 = composeWarningsGuard23.disables(diagnosticGroup26);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);

  }

  @Test
  public void test041() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test041"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup20);
    java.lang.String str22 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup25);
    com.google.javascript.jscomp.JSError jSError27 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel28 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError27);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null(OFF)(hi!)"+ "'", str22.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test042() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test042"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)'#', 0, "hi!");
    int i4 = simpleRegion3.getBeginningLineNumber();
    int i5 = simpleRegion3.getBeginningLineNumber();
    int i6 = simpleRegion3.getBeginningLineNumber();
    int i7 = simpleRegion3.getEndingLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);

  }

  @Test
  public void test043() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test043"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel23 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError22);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);

  }

  @Test
  public void test044() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test044"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel16 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test045() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test045"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup10);
    java.lang.String str12 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel18 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "null(OFF)(hi!)"+ "'", str12.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);

  }

  @Test
  public void test046() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test046"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard13.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard13.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard13.enables(diagnosticGroup18);
    com.google.javascript.jscomp.JSError jSError20 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel21 = composeWarningsGuard13.level(jSError20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel23 = composeWarningsGuard13.level(jSError22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b25 = composeWarningsGuard13.disables(diagnosticGroup24);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel23);

  }

  @Test
  public void test047() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test047"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = composeWarningsGuard12.enables(diagnosticGroup23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard27 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup25, "");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = diagnosticGroupPathSuppressingWarningsGuard27.enables(diagnosticGroup28);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = diagnosticGroupPathSuppressingWarningsGuard27.disables(diagnosticGroup30);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard34 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup32, "hi!");
    java.lang.String str35 = diagnosticGroupPathSuppressingWarningsGuard34.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = diagnosticGroupPathSuppressingWarningsGuard34.enables(diagnosticGroup36);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup38 = null;
    boolean b39 = diagnosticGroupPathSuppressingWarningsGuard34.enables(diagnosticGroup38);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array40 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard41 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard41, warningsGuard_array40);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard43 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard41);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array44 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard45 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard45, warningsGuard_array44);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard47 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard45);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array48 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard43, composeWarningsGuard47 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard49 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard49, warningsGuard_array48);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard51 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard49);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard52 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard49);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup53 = null;
    boolean b54 = composeWarningsGuard52.enables(diagnosticGroup53);
    com.google.javascript.jscomp.JSError jSError55 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel56 = composeWarningsGuard52.level(jSError55);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup57 = null;
    boolean b58 = composeWarningsGuard52.enables(diagnosticGroup57);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array59 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard60 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b61 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard60, warningsGuard_array59);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard62 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard60);
    com.google.javascript.jscomp.JSError jSError63 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel64 = composeWarningsGuard62.level(jSError63);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array65 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard66 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard66, warningsGuard_array65);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard68 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard66);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array69 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard70 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard70, warningsGuard_array69);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard72 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard70);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array73 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard68, composeWarningsGuard72 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard74 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b75 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard74, warningsGuard_array73);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard76 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard74);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard77 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard74);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup78 = null;
    boolean b79 = composeWarningsGuard77.enables(diagnosticGroup78);
    com.google.javascript.jscomp.JSError jSError80 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel81 = composeWarningsGuard77.level(jSError80);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup82 = null;
    boolean b83 = composeWarningsGuard77.enables(diagnosticGroup82);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup84 = null;
    boolean b85 = composeWarningsGuard77.enables(diagnosticGroup84);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array86 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard12, diagnosticGroupPathSuppressingWarningsGuard27, diagnosticGroupPathSuppressingWarningsGuard34, composeWarningsGuard52, composeWarningsGuard62, composeWarningsGuard77 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard87 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array86);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null(OFF)(hi!)"+ "'", str35.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array86);

  }

  @Test
  public void test048() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test048"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard11.enables(diagnosticGroup12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard11.level(jSError14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard11.level(jSError16);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str18 = composeWarningsGuard11.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);

  }

  @Test
  public void test049() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test049"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str14 = composeWarningsGuard13.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);

  }

  @Test
  public void test050() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test050"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup12);
    java.lang.String str14 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard19 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup17, "");
    java.lang.String str20 = diagnosticGroupPathSuppressingWarningsGuard19.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard19.enables(diagnosticGroup21);
    java.lang.String str23 = diagnosticGroupPathSuppressingWarningsGuard19.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard19.enables(diagnosticGroup24);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard19.disables(diagnosticGroup26);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = diagnosticGroupPathSuppressingWarningsGuard19.enables(diagnosticGroup28);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard32 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup30, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    boolean b34 = diagnosticGroupPathSuppressingWarningsGuard32.disables(diagnosticGroup33);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    boolean b36 = diagnosticGroupPathSuppressingWarningsGuard32.disables(diagnosticGroup35);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup37 = null;
    boolean b38 = diagnosticGroupPathSuppressingWarningsGuard32.disables(diagnosticGroup37);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup39 = null;
    boolean b40 = diagnosticGroupPathSuppressingWarningsGuard32.disables(diagnosticGroup39);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup41 = null;
    boolean b42 = diagnosticGroupPathSuppressingWarningsGuard32.disables(diagnosticGroup41);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup43 = null;
    boolean b44 = diagnosticGroupPathSuppressingWarningsGuard32.enables(diagnosticGroup43);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup45 = null;
    boolean b46 = diagnosticGroupPathSuppressingWarningsGuard32.enables(diagnosticGroup45);
    java.lang.String str47 = diagnosticGroupPathSuppressingWarningsGuard32.toString();
    java.lang.String str48 = diagnosticGroupPathSuppressingWarningsGuard32.toString();
    java.lang.String str49 = diagnosticGroupPathSuppressingWarningsGuard32.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup50 = null;
    boolean b51 = diagnosticGroupPathSuppressingWarningsGuard32.disables(diagnosticGroup50);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup52 = null;
    boolean b53 = diagnosticGroupPathSuppressingWarningsGuard32.enables(diagnosticGroup52);
    java.lang.String str54 = diagnosticGroupPathSuppressingWarningsGuard32.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array55 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard19, diagnosticGroupPathSuppressingWarningsGuard32 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard56 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array55);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null(OFF)(hi!)"+ "'", str14.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "null(OFF)()"+ "'", str20.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "null(OFF)()"+ "'", str23.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "null(OFF)(hi!)"+ "'", str47.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str48 + "' != '" + "null(OFF)(hi!)"+ "'", str48.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null(OFF)(hi!)"+ "'", str49.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "null(OFF)(hi!)"+ "'", str54.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array55);

  }

  @Test
  public void test051() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test051"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    java.lang.String str7 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel13 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null(OFF)(hi!)"+ "'", str7.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test052() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test052"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    java.lang.String str16 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard23 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup21, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard23.disables(diagnosticGroup24);
    java.lang.String str26 = diagnosticGroupPathSuppressingWarningsGuard23.toString();
    java.lang.String str27 = diagnosticGroupPathSuppressingWarningsGuard23.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = diagnosticGroupPathSuppressingWarningsGuard23.disables(diagnosticGroup28);
    java.lang.String str30 = diagnosticGroupPathSuppressingWarningsGuard23.toString();
    java.lang.String str31 = diagnosticGroupPathSuppressingWarningsGuard23.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard34 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup32, "");
    java.lang.String str35 = diagnosticGroupPathSuppressingWarningsGuard34.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = diagnosticGroupPathSuppressingWarningsGuard34.disables(diagnosticGroup36);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup38 = null;
    boolean b39 = diagnosticGroupPathSuppressingWarningsGuard34.disables(diagnosticGroup38);
    java.lang.String str40 = diagnosticGroupPathSuppressingWarningsGuard34.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup41 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard43 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup41, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup44 = null;
    boolean b45 = diagnosticGroupPathSuppressingWarningsGuard43.disables(diagnosticGroup44);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup46 = null;
    boolean b47 = diagnosticGroupPathSuppressingWarningsGuard43.disables(diagnosticGroup46);
    java.lang.String str48 = diagnosticGroupPathSuppressingWarningsGuard43.toString();
    java.lang.String str49 = diagnosticGroupPathSuppressingWarningsGuard43.toString();
    java.lang.String str50 = diagnosticGroupPathSuppressingWarningsGuard43.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup51 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard53 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup51, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup54 = null;
    boolean b55 = diagnosticGroupPathSuppressingWarningsGuard53.disables(diagnosticGroup54);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup56 = null;
    boolean b57 = diagnosticGroupPathSuppressingWarningsGuard53.disables(diagnosticGroup56);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup58 = null;
    boolean b59 = diagnosticGroupPathSuppressingWarningsGuard53.disables(diagnosticGroup58);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup60 = null;
    boolean b61 = diagnosticGroupPathSuppressingWarningsGuard53.enables(diagnosticGroup60);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup62 = null;
    boolean b63 = diagnosticGroupPathSuppressingWarningsGuard53.disables(diagnosticGroup62);
    java.lang.String str64 = diagnosticGroupPathSuppressingWarningsGuard53.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup65 = null;
    boolean b66 = diagnosticGroupPathSuppressingWarningsGuard53.disables(diagnosticGroup65);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup67 = null;
    boolean b68 = diagnosticGroupPathSuppressingWarningsGuard53.disables(diagnosticGroup67);
    java.lang.String str69 = diagnosticGroupPathSuppressingWarningsGuard53.toString();
    java.lang.String str70 = diagnosticGroupPathSuppressingWarningsGuard53.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array71 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard72 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b73 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard72, warningsGuard_array71);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard74 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard72);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard75 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard72);
    com.google.javascript.jscomp.JSError jSError76 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel77 = composeWarningsGuard75.level(jSError76);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array78 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard23, diagnosticGroupPathSuppressingWarningsGuard34, diagnosticGroupPathSuppressingWarningsGuard43, diagnosticGroupPathSuppressingWarningsGuard53, composeWarningsGuard75 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard79 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array78);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null(OFF)(hi!)"+ "'", str16.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null(OFF)(hi!)"+ "'", str26.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null(OFF)(hi!)"+ "'", str27.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null(OFF)(hi!)"+ "'", str30.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null(OFF)(hi!)"+ "'", str31.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null(OFF)()"+ "'", str35.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "null(OFF)()"+ "'", str40.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str48 + "' != '" + "null(OFF)(hi!)"+ "'", str48.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null(OFF)(hi!)"+ "'", str49.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "null(OFF)(hi!)"+ "'", str50.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "null(OFF)(hi!)"+ "'", str64.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str69 + "' != '" + "null(OFF)(hi!)"+ "'", str69.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str70 + "' != '" + "null(OFF)(hi!)"+ "'", str70.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array78);

  }

  @Test
  public void test053() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test053"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard14 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard15 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard15.level(jSError16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard15.level(jSError18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard22 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup20, "null(OFF)(null(OFF)(null(OFF)()))");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard25 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup23, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard25.disables(diagnosticGroup26);
    java.lang.String str28 = diagnosticGroupPathSuppressingWarningsGuard25.toString();
    java.lang.String str29 = diagnosticGroupPathSuppressingWarningsGuard25.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = diagnosticGroupPathSuppressingWarningsGuard25.enables(diagnosticGroup30);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    boolean b33 = diagnosticGroupPathSuppressingWarningsGuard25.enables(diagnosticGroup32);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup34 = null;
    boolean b35 = diagnosticGroupPathSuppressingWarningsGuard25.disables(diagnosticGroup34);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard38 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup36, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup39 = null;
    boolean b40 = diagnosticGroupPathSuppressingWarningsGuard38.disables(diagnosticGroup39);
    java.lang.String str41 = diagnosticGroupPathSuppressingWarningsGuard38.toString();
    java.lang.String str42 = diagnosticGroupPathSuppressingWarningsGuard38.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup43 = null;
    boolean b44 = diagnosticGroupPathSuppressingWarningsGuard38.enables(diagnosticGroup43);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup45 = null;
    boolean b46 = diagnosticGroupPathSuppressingWarningsGuard38.enables(diagnosticGroup45);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup47 = null;
    boolean b48 = diagnosticGroupPathSuppressingWarningsGuard38.disables(diagnosticGroup47);
    java.lang.String str49 = diagnosticGroupPathSuppressingWarningsGuard38.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup50 = null;
    boolean b51 = diagnosticGroupPathSuppressingWarningsGuard38.enables(diagnosticGroup50);
    java.lang.String str52 = diagnosticGroupPathSuppressingWarningsGuard38.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array53 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard15, diagnosticGroupPathSuppressingWarningsGuard22, diagnosticGroupPathSuppressingWarningsGuard25, diagnosticGroupPathSuppressingWarningsGuard38 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard54 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array53);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "null(OFF)(hi!)"+ "'", str28.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null(OFF)(hi!)"+ "'", str29.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "null(OFF)(hi!)"+ "'", str41.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "null(OFF)(hi!)"+ "'", str42.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null(OFF)(hi!)"+ "'", str49.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "null(OFF)(hi!)"+ "'", str52.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array53);

  }

  @Test
  public void test054() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test054"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.JSError jSError25 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel26 = composeWarningsGuard12.level(jSError25);
    com.google.javascript.jscomp.JSError jSError27 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel28 = composeWarningsGuard12.level(jSError27);
    com.google.javascript.jscomp.JSError jSError29 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel30 = composeWarningsGuard12.level(jSError29);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str31 = composeWarningsGuard12.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel30);

  }

  @Test
  public void test055() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test055"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard12.level(jSError13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel22 = composeWarningsGuard12.level(jSError21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = composeWarningsGuard12.enables(diagnosticGroup25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = composeWarningsGuard12.enables(diagnosticGroup27);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str29 = composeWarningsGuard12.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test056() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test056"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = composeWarningsGuard12.enables(diagnosticGroup23);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str25 = composeWarningsGuard12.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test057() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test057"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = composeWarningsGuard3.enables(diagnosticGroup4);
    com.google.javascript.jscomp.JSError jSError6 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel7 = composeWarningsGuard3.level(jSError6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard3.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard3.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard3.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b19 = composeWarningsGuard3.disables(diagnosticGroup18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test058() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test058"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str7 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard14 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup12, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard14.disables(diagnosticGroup15);
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard14.toString();
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard14.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard14.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard14.enables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = diagnosticGroupPathSuppressingWarningsGuard14.disables(diagnosticGroup23);
    java.lang.String str25 = diagnosticGroupPathSuppressingWarningsGuard14.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard14.enables(diagnosticGroup26);
    java.lang.String str28 = diagnosticGroupPathSuppressingWarningsGuard14.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = diagnosticGroupPathSuppressingWarningsGuard14.disables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = diagnosticGroupPathSuppressingWarningsGuard14.enables(diagnosticGroup31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard35 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup33, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = diagnosticGroupPathSuppressingWarningsGuard35.disables(diagnosticGroup36);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup38 = null;
    boolean b39 = diagnosticGroupPathSuppressingWarningsGuard35.disables(diagnosticGroup38);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup40 = null;
    boolean b41 = diagnosticGroupPathSuppressingWarningsGuard35.disables(diagnosticGroup40);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup42 = null;
    boolean b43 = diagnosticGroupPathSuppressingWarningsGuard35.enables(diagnosticGroup42);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup44 = null;
    boolean b45 = diagnosticGroupPathSuppressingWarningsGuard35.disables(diagnosticGroup44);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup46 = null;
    boolean b47 = diagnosticGroupPathSuppressingWarningsGuard35.disables(diagnosticGroup46);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup48 = null;
    boolean b49 = diagnosticGroupPathSuppressingWarningsGuard35.enables(diagnosticGroup48);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array50 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard51 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard51, warningsGuard_array50);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard53 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard51);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array54 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard55 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard55, warningsGuard_array54);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard57 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard55);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array58 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard53, composeWarningsGuard57 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard59 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard59, warningsGuard_array58);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard61 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard59);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup62 = null;
    boolean b63 = composeWarningsGuard61.enables(diagnosticGroup62);
    com.google.javascript.jscomp.JSError jSError64 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel65 = composeWarningsGuard61.level(jSError64);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array66 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard67 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard67, warningsGuard_array66);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard69 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard67);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard70 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard67);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard71 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard67);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard72 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard67);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard73 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard67);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard74 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard67);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard75 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard67);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup76 = null;
    boolean b77 = composeWarningsGuard75.enables(diagnosticGroup76);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup78 = null;
    boolean b79 = composeWarningsGuard75.enables(diagnosticGroup78);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array80 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard14, diagnosticGroupPathSuppressingWarningsGuard35, composeWarningsGuard61, composeWarningsGuard75 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard81 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array80);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null(OFF)(hi!)"+ "'", str7.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null(OFF)(hi!)"+ "'", str25.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "null(OFF)(hi!)"+ "'", str28.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array80);

  }

  @Test
  public void test059() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test059"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = composeWarningsGuard3.enables(diagnosticGroup4);
    com.google.javascript.jscomp.JSError jSError6 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel7 = composeWarningsGuard3.level(jSError6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard3.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard3.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard18 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup16, "hi!");
    java.lang.String str19 = diagnosticGroupPathSuppressingWarningsGuard18.toString();
    java.lang.String str20 = diagnosticGroupPathSuppressingWarningsGuard18.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array21 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard22 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard22, warningsGuard_array21);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard22);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array25 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard26 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard26, warningsGuard_array25);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard28 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard26);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array29 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard24, composeWarningsGuard28 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard30 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard30, warningsGuard_array29);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard32 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard30);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard33 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard30);
    com.google.javascript.jscomp.JSError jSError34 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel35 = composeWarningsGuard33.level(jSError34);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = composeWarningsGuard33.enables(diagnosticGroup36);
    com.google.javascript.jscomp.JSError jSError38 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel39 = composeWarningsGuard33.level(jSError38);
    com.google.javascript.jscomp.JSError jSError40 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel41 = composeWarningsGuard33.level(jSError40);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup42 = null;
    boolean b43 = composeWarningsGuard33.enables(diagnosticGroup42);
    com.google.javascript.jscomp.JSError jSError44 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel45 = composeWarningsGuard33.level(jSError44);
    com.google.javascript.jscomp.JSError jSError46 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel47 = composeWarningsGuard33.level(jSError46);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup48 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard50 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup48, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup51 = null;
    boolean b52 = diagnosticGroupPathSuppressingWarningsGuard50.disables(diagnosticGroup51);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup53 = null;
    boolean b54 = diagnosticGroupPathSuppressingWarningsGuard50.disables(diagnosticGroup53);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup55 = null;
    boolean b56 = diagnosticGroupPathSuppressingWarningsGuard50.disables(diagnosticGroup55);
    java.lang.String str57 = diagnosticGroupPathSuppressingWarningsGuard50.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup58 = null;
    boolean b59 = diagnosticGroupPathSuppressingWarningsGuard50.enables(diagnosticGroup58);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup60 = null;
    boolean b61 = diagnosticGroupPathSuppressingWarningsGuard50.disables(diagnosticGroup60);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup62 = null;
    boolean b63 = diagnosticGroupPathSuppressingWarningsGuard50.enables(diagnosticGroup62);
    java.lang.String str64 = diagnosticGroupPathSuppressingWarningsGuard50.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup65 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard67 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup65, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup68 = null;
    boolean b69 = diagnosticGroupPathSuppressingWarningsGuard67.disables(diagnosticGroup68);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup70 = null;
    boolean b71 = diagnosticGroupPathSuppressingWarningsGuard67.disables(diagnosticGroup70);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup72 = null;
    boolean b73 = diagnosticGroupPathSuppressingWarningsGuard67.disables(diagnosticGroup72);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup74 = null;
    boolean b75 = diagnosticGroupPathSuppressingWarningsGuard67.disables(diagnosticGroup74);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup76 = null;
    boolean b77 = diagnosticGroupPathSuppressingWarningsGuard67.disables(diagnosticGroup76);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup78 = null;
    boolean b79 = diagnosticGroupPathSuppressingWarningsGuard67.enables(diagnosticGroup78);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup80 = null;
    boolean b81 = diagnosticGroupPathSuppressingWarningsGuard67.enables(diagnosticGroup80);
    java.lang.String str82 = diagnosticGroupPathSuppressingWarningsGuard67.toString();
    java.lang.String str83 = diagnosticGroupPathSuppressingWarningsGuard67.toString();
    java.lang.String str84 = diagnosticGroupPathSuppressingWarningsGuard67.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup85 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard87 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup85, "null(OFF)()");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup88 = null;
    boolean b89 = diagnosticGroupPathSuppressingWarningsGuard87.disables(diagnosticGroup88);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup90 = null;
    boolean b91 = diagnosticGroupPathSuppressingWarningsGuard87.disables(diagnosticGroup90);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array92 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard18, composeWarningsGuard33, diagnosticGroupPathSuppressingWarningsGuard50, diagnosticGroupPathSuppressingWarningsGuard67, diagnosticGroupPathSuppressingWarningsGuard87 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard93 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array92);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null(OFF)(hi!)"+ "'", str19.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "null(OFF)(hi!)"+ "'", str20.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str57 + "' != '" + "null(OFF)(hi!)"+ "'", str57.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "null(OFF)(hi!)"+ "'", str64.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str82 + "' != '" + "null(OFF)(hi!)"+ "'", str82.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str83 + "' != '" + "null(OFF)(hi!)"+ "'", str83.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str84 + "' != '" + "null(OFF)(hi!)"+ "'", str84.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array92);

  }

  @Test
  public void test060() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test060"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = composeWarningsGuard12.enables(diagnosticGroup25);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array27 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard28 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28, warningsGuard_array27);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard30 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array31 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard32 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard32, warningsGuard_array31);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard34 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard32);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array35 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard30, composeWarningsGuard34 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard36 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard36, warningsGuard_array35);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard38 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard36);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard39 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard36);
    com.google.javascript.jscomp.JSError jSError40 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel41 = composeWarningsGuard39.level(jSError40);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup42 = null;
    boolean b43 = composeWarningsGuard39.enables(diagnosticGroup42);
    com.google.javascript.jscomp.JSError jSError44 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel45 = composeWarningsGuard39.level(jSError44);
    com.google.javascript.jscomp.JSError jSError46 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel47 = composeWarningsGuard39.level(jSError46);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup48 = null;
    boolean b49 = composeWarningsGuard39.enables(diagnosticGroup48);
    com.google.javascript.jscomp.JSError jSError50 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel51 = composeWarningsGuard39.level(jSError50);
    com.google.javascript.jscomp.JSError jSError52 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel53 = composeWarningsGuard39.level(jSError52);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array54 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard12, composeWarningsGuard39 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard55 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array54);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array54);

  }

  @Test
  public void test061() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test061"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.JSError jSError6 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel7 = composeWarningsGuard3.level(jSError6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard3.level(jSError10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard3.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard3.enables(diagnosticGroup16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard3.level(jSError18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b21 = composeWarningsGuard3.disables(diagnosticGroup20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);

  }

  @Test
  public void test062() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test062"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)(short)100, 35, "null(OFF)()");
    java.lang.String str4 = simpleRegion3.getSourceExcerpt();
    int i5 = simpleRegion3.getEndingLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null(OFF)()"+ "'", str4.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 35);

  }

  @Test
  public void test063() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test063"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard3.level(jSError10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard3.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b17 = composeWarningsGuard3.disables(diagnosticGroup16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);

  }

  @Test
  public void test064() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test064"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array9 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard10 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard10, warningsGuard_array9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard10);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard12, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.JSError jSError22 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel23 = composeWarningsGuard21.level(jSError22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = composeWarningsGuard21.enables(diagnosticGroup24);
    com.google.javascript.jscomp.JSError jSError26 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel27 = composeWarningsGuard21.level(jSError26);
    com.google.javascript.jscomp.JSError jSError28 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel29 = composeWarningsGuard21.level(jSError28);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = composeWarningsGuard21.enables(diagnosticGroup30);
    com.google.javascript.jscomp.JSError jSError32 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel33 = composeWarningsGuard21.level(jSError32);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup34 = null;
    boolean b35 = composeWarningsGuard21.enables(diagnosticGroup34);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array36 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard37 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard37, warningsGuard_array36);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard39 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard37);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array40 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard41 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard41, warningsGuard_array40);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard43 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard41);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array44 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard39, composeWarningsGuard43 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard45 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard45, warningsGuard_array44);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard47 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard45);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard48 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard45);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup49 = null;
    boolean b50 = composeWarningsGuard48.enables(diagnosticGroup49);
    com.google.javascript.jscomp.JSError jSError51 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel52 = composeWarningsGuard48.level(jSError51);
    com.google.javascript.jscomp.JSError jSError53 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel54 = composeWarningsGuard48.level(jSError53);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup55 = null;
    boolean b56 = composeWarningsGuard48.enables(diagnosticGroup55);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup57 = null;
    boolean b58 = composeWarningsGuard48.enables(diagnosticGroup57);
    com.google.javascript.jscomp.JSError jSError59 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel60 = composeWarningsGuard48.level(jSError59);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup61 = null;
    boolean b62 = composeWarningsGuard48.enables(diagnosticGroup61);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array63 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, composeWarningsGuard21, composeWarningsGuard48 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard64 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array63);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array63);

  }

  @Test
  public void test065() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test065"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    java.lang.String str15 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup18);
    com.google.javascript.jscomp.JSError jSError20 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel21 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "null(OFF)(hi!)"+ "'", str15.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);

  }

  @Test
  public void test066() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test066"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard28 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup26, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = diagnosticGroupPathSuppressingWarningsGuard28.disables(diagnosticGroup29);
    java.lang.String str31 = diagnosticGroupPathSuppressingWarningsGuard28.toString();
    java.lang.String str32 = diagnosticGroupPathSuppressingWarningsGuard28.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    boolean b34 = diagnosticGroupPathSuppressingWarningsGuard28.enables(diagnosticGroup33);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    boolean b36 = diagnosticGroupPathSuppressingWarningsGuard28.enables(diagnosticGroup35);
    java.lang.String str37 = diagnosticGroupPathSuppressingWarningsGuard28.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array38 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard25, diagnosticGroupPathSuppressingWarningsGuard28 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard39 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array38);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null(OFF)(hi!)"+ "'", str31.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null(OFF)(hi!)"+ "'", str32.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null(OFF)(hi!)"+ "'", str37.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array38);

  }

  @Test
  public void test067() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test067"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.JSError jSError26 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel27 = composeWarningsGuard25.level(jSError26);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);

  }

  @Test
  public void test068() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test068"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup15);
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup18);
    java.lang.String str20 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError21 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel22 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError21);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "null(OFF)(hi!)"+ "'", str20.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test069() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test069"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = composeWarningsGuard26.enables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = composeWarningsGuard26.enables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = composeWarningsGuard26.enables(diagnosticGroup31);
    com.google.javascript.jscomp.JSError jSError33 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel34 = composeWarningsGuard26.level(jSError33);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test070() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test070"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard12.level(jSError13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str25 = composeWarningsGuard12.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);

  }

  @Test
  public void test071() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test071"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard20.enables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = composeWarningsGuard20.enables(diagnosticGroup23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = composeWarningsGuard20.enables(diagnosticGroup25);
    com.google.javascript.jscomp.JSError jSError27 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel28 = composeWarningsGuard20.level(jSError27);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test072() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test072"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError18 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel19 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test073() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test073"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard3.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard3.enables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard3.level(jSError16);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str18 = composeWarningsGuard3.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);

  }

  @Test
  public void test074() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test074"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)(short)1, 0, "null(OFF)(hi!)");
    int i4 = simpleRegion3.getBeginningLineNumber();
    int i5 = simpleRegion3.getEndingLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);

  }

  @Test
  public void test075() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test075"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "null(OFF)()");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.JSError jSError13 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel14 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test076() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test076"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = composeWarningsGuard6.enables(diagnosticGroup7);
    com.google.javascript.jscomp.JSError jSError9 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel10 = composeWarningsGuard6.level(jSError9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b12 = composeWarningsGuard6.disables(diagnosticGroup11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel10);

  }

  @Test
  public void test077() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test077"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup23);
    com.google.javascript.jscomp.JSError jSError25 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel26 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test078() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test078"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard11.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard11.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard11.enables(diagnosticGroup16);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str18 = composeWarningsGuard11.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test079() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test079"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard13.enables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard13.level(jSError16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard13.enables(diagnosticGroup18);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str20 = composeWarningsGuard13.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);

  }

  @Test
  public void test080() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test080"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup17);
    java.lang.String str19 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel23 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError22);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null(OFF)(hi!)"+ "'", str19.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);

  }

  @Test
  public void test081() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test081"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str23 = composeWarningsGuard12.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test082() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test082"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = composeWarningsGuard26.enables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = composeWarningsGuard26.enables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = composeWarningsGuard26.enables(diagnosticGroup31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    boolean b34 = composeWarningsGuard26.enables(diagnosticGroup33);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b36 = composeWarningsGuard26.disables(diagnosticGroup35);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test083() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test083"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = composeWarningsGuard4.enables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = composeWarningsGuard4.enables(diagnosticGroup7);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str9 = composeWarningsGuard4.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test084() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test084"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    java.lang.String str16 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError18 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel19 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null(OFF)(hi!)"+ "'", str16.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test085() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test085"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = composeWarningsGuard12.enables(diagnosticGroup25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = composeWarningsGuard12.enables(diagnosticGroup27);
    com.google.javascript.jscomp.JSError jSError29 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel30 = composeWarningsGuard12.level(jSError29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = composeWarningsGuard12.enables(diagnosticGroup31);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str33 = composeWarningsGuard12.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test086() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test086"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard14 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard15 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard15.level(jSError16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard15.level(jSError18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b21 = composeWarningsGuard15.disables(diagnosticGroup20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);

  }

  @Test
  public void test087() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test087"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    java.lang.String str11 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError12 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel13 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null(OFF)(hi!)"+ "'", str11.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test088() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test088"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard12.level(jSError13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel22 = composeWarningsGuard12.level(jSError21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b24 = composeWarningsGuard12.disables(diagnosticGroup23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel22);

  }

  @Test
  public void test089() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test089"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel17 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test090() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test090"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard14 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard15 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard15.enables(diagnosticGroup16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard15.level(jSError18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b21 = composeWarningsGuard15.disables(diagnosticGroup20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);

  }

  @Test
  public void test091() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test091"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str25 = composeWarningsGuard12.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);

  }

  @Test
  public void test092() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test092"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)(short)1, (int)(byte)10, "null(OFF)(null(OFF)())");
    int i4 = simpleRegion3.getEndingLineNumber();
    int i5 = simpleRegion3.getBeginningLineNumber();
    int i6 = simpleRegion3.getBeginningLineNumber();
    int i7 = simpleRegion3.getBeginningLineNumber();
    java.lang.String str8 = simpleRegion3.getSourceExcerpt();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null(OFF)(null(OFF)())"+ "'", str8.equals("null(OFF)(null(OFF)())"));

  }

  @Test
  public void test093() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test093"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel23 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError22);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);

  }

  @Test
  public void test094() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test094"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.JSError jSError25 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel26 = composeWarningsGuard12.level(jSError25);
    com.google.javascript.jscomp.JSError jSError27 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel28 = composeWarningsGuard12.level(jSError27);
    com.google.javascript.jscomp.JSError jSError29 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel30 = composeWarningsGuard12.level(jSError29);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str31 = composeWarningsGuard12.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel30);

  }

  @Test
  public void test095() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test095"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.JSError jSError13 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel14 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test096() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test096"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.JSError jSError6 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel7 = composeWarningsGuard3.level(jSError6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard3.level(jSError10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard3.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard3.enables(diagnosticGroup16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard3.level(jSError18);
    com.google.javascript.jscomp.JSError jSError20 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel21 = composeWarningsGuard3.level(jSError20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b23 = composeWarningsGuard3.disables(diagnosticGroup22);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel21);

  }

  @Test
  public void test097() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test097"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard19 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup17, "");
    java.lang.String str20 = diagnosticGroupPathSuppressingWarningsGuard19.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard19.enables(diagnosticGroup21);
    java.lang.String str23 = diagnosticGroupPathSuppressingWarningsGuard19.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard19.enables(diagnosticGroup24);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard19.disables(diagnosticGroup26);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = diagnosticGroupPathSuppressingWarningsGuard19.disables(diagnosticGroup28);
    java.lang.String str30 = diagnosticGroupPathSuppressingWarningsGuard19.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = diagnosticGroupPathSuppressingWarningsGuard19.enables(diagnosticGroup31);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array33 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard12, diagnosticGroupPathSuppressingWarningsGuard19 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard34 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array33);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "null(OFF)()"+ "'", str20.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "null(OFF)()"+ "'", str23.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null(OFF)()"+ "'", str30.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array33);

  }

  @Test
  public void test098() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test098"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard13.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard13.enables(diagnosticGroup16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard13.level(jSError18);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str20 = composeWarningsGuard13.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);

  }

  @Test
  public void test099() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test099"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(0, (int)(short)100, "null(OFF)()");
    java.lang.String str4 = simpleRegion3.getSourceExcerpt();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null(OFF)()"+ "'", str4.equals("null(OFF)()"));

  }

  @Test
  public void test100() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test100"); }

    com.google.javascript.jscomp.AbstractCompiler abstractCompiler0 = null;
    com.google.javascript.jscomp.FieldCleanupPass fieldCleanupPass1 = new com.google.javascript.jscomp.FieldCleanupPass(abstractCompiler0);
    com.google.javascript.rhino.Node node2 = null;
    com.google.javascript.rhino.Node node3 = null;
    fieldCleanupPass1.process(node2, node3);
    com.google.javascript.rhino.Node node5 = null;
    com.google.javascript.rhino.Node node6 = null;
    fieldCleanupPass1.process(node5, node6);
    com.google.javascript.rhino.Node node8 = null;
    com.google.javascript.rhino.Node node9 = null;
    fieldCleanupPass1.process(node8, node9);
    com.google.javascript.rhino.Node node11 = null;
    com.google.javascript.rhino.Node node12 = null;
    fieldCleanupPass1.process(node11, node12);
    com.google.javascript.rhino.Node node14 = null;
    com.google.javascript.rhino.Node node15 = null;
    fieldCleanupPass1.process(node14, node15);
    com.google.javascript.rhino.Node node17 = null;
    com.google.javascript.rhino.Node node18 = null;
    fieldCleanupPass1.process(node17, node18);
    com.google.javascript.rhino.Node node20 = null;
    com.google.javascript.rhino.Node node21 = null;
    fieldCleanupPass1.process(node20, node21);
    com.google.javascript.rhino.Node node23 = null;
    com.google.javascript.rhino.Node node24 = null;
    fieldCleanupPass1.process(node23, node24);
    com.google.javascript.rhino.Node node26 = null;
    com.google.javascript.rhino.Node node27 = null;
    fieldCleanupPass1.process(node26, node27);
    com.google.javascript.rhino.Node node29 = null;
    com.google.javascript.rhino.Node node30 = null;
    fieldCleanupPass1.process(node29, node30);
    com.google.javascript.rhino.Node node32 = null;
    com.google.javascript.rhino.Node node33 = null;
    fieldCleanupPass1.process(node32, node33);
    com.google.javascript.rhino.Node node35 = null;
    com.google.javascript.rhino.Node node36 = null;
    fieldCleanupPass1.process(node35, node36);
    com.google.javascript.rhino.Node node38 = null;
    com.google.javascript.rhino.Node node39 = null;
    fieldCleanupPass1.process(node38, node39);
    com.google.javascript.rhino.Node node41 = null;
    com.google.javascript.rhino.Node node42 = null;
    fieldCleanupPass1.process(node41, node42);
    com.google.javascript.rhino.Node node44 = null;
    com.google.javascript.rhino.Node node45 = null;
    fieldCleanupPass1.process(node44, node45);
    com.google.javascript.rhino.Node node47 = null;
    com.google.javascript.rhino.Node node48 = null;
    fieldCleanupPass1.process(node47, node48);
    com.google.javascript.rhino.Node node50 = null;
    com.google.javascript.rhino.Node node51 = null;
    fieldCleanupPass1.process(node50, node51);
    com.google.javascript.rhino.Node node53 = null;
    com.google.javascript.rhino.Node node54 = null;
    fieldCleanupPass1.process(node53, node54);
    com.google.javascript.rhino.Node node56 = null;
    com.google.javascript.rhino.Node node57 = null;
    fieldCleanupPass1.process(node56, node57);
    com.google.javascript.rhino.Node node59 = null;
    com.google.javascript.rhino.Node node60 = null;
    fieldCleanupPass1.process(node59, node60);
    com.google.javascript.rhino.Node node62 = null;
    com.google.javascript.rhino.Node node63 = null;
    // The following exception was thrown during execution in test generation
    try {
    fieldCleanupPass1.hotSwapScript(node62, node63);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test101() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test101"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = composeWarningsGuard24.enables(diagnosticGroup25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b28 = composeWarningsGuard24.disables(diagnosticGroup27);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test102() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test102"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "null(OFF)(hi!)");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup5);
    java.lang.String str7 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError8 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel9 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null(OFF)(null(OFF)(hi!))"+ "'", str7.equals("null(OFF)(null(OFF)(hi!))"));

  }

  @Test
  public void test103() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test103"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard3.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard3.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard3.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard3.enables(diagnosticGroup18);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str20 = composeWarningsGuard3.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);

  }

  @Test
  public void test104() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test104"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(0, (int)(short)-1, "null(OFF)(null(OFF)(null(OFF)(hi!)))");

  }

  @Test
  public void test105() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test105"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup12);
    java.lang.String str14 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard19 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup17, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard19.disables(diagnosticGroup20);
    java.lang.String str22 = diagnosticGroupPathSuppressingWarningsGuard19.toString();
    java.lang.String str23 = diagnosticGroupPathSuppressingWarningsGuard19.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard19.enables(diagnosticGroup24);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard19.enables(diagnosticGroup26);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = diagnosticGroupPathSuppressingWarningsGuard19.disables(diagnosticGroup28);
    java.lang.String str30 = diagnosticGroupPathSuppressingWarningsGuard19.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = diagnosticGroupPathSuppressingWarningsGuard19.enables(diagnosticGroup31);
    java.lang.String str33 = diagnosticGroupPathSuppressingWarningsGuard19.toString();
    java.lang.String str34 = diagnosticGroupPathSuppressingWarningsGuard19.toString();
    java.lang.String str35 = diagnosticGroupPathSuppressingWarningsGuard19.toString();
    java.lang.String str36 = diagnosticGroupPathSuppressingWarningsGuard19.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array37 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard38 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard38, warningsGuard_array37);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard40 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard38);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array41 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard42 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard42, warningsGuard_array41);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard44 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard42);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array45 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard40, composeWarningsGuard44 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard46 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard46, warningsGuard_array45);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard48 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard46);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard49 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard46);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup50 = null;
    boolean b51 = composeWarningsGuard49.enables(diagnosticGroup50);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup52 = null;
    boolean b53 = composeWarningsGuard49.enables(diagnosticGroup52);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup54 = null;
    boolean b55 = composeWarningsGuard49.enables(diagnosticGroup54);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array56 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard19, composeWarningsGuard49 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard57 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array56);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null(OFF)(hi!)"+ "'", str14.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null(OFF)(hi!)"+ "'", str22.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "null(OFF)(hi!)"+ "'", str23.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null(OFF)(hi!)"+ "'", str30.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null(OFF)(hi!)"+ "'", str33.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null(OFF)(hi!)"+ "'", str34.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null(OFF)(hi!)"+ "'", str35.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "null(OFF)(hi!)"+ "'", str36.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array56);

  }

  @Test
  public void test106() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test106"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array21 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard22 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard22, warningsGuard_array21);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard22);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array25 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard20, composeWarningsGuard24 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard26 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard26, warningsGuard_array25);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard28 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard26);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard29 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard26);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard30 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard26);
    com.google.javascript.jscomp.JSError jSError31 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel32 = composeWarningsGuard30.level(jSError31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    boolean b34 = composeWarningsGuard30.enables(diagnosticGroup33);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    boolean b36 = composeWarningsGuard30.enables(diagnosticGroup35);
    com.google.javascript.jscomp.JSError jSError37 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel38 = composeWarningsGuard30.level(jSError37);
    com.google.javascript.jscomp.JSError jSError39 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel40 = composeWarningsGuard30.level(jSError39);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup41 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard43 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup41, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup44 = null;
    boolean b45 = diagnosticGroupPathSuppressingWarningsGuard43.disables(diagnosticGroup44);
    java.lang.String str46 = diagnosticGroupPathSuppressingWarningsGuard43.toString();
    java.lang.String str47 = diagnosticGroupPathSuppressingWarningsGuard43.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup48 = null;
    boolean b49 = diagnosticGroupPathSuppressingWarningsGuard43.disables(diagnosticGroup48);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup50 = null;
    boolean b51 = diagnosticGroupPathSuppressingWarningsGuard43.disables(diagnosticGroup50);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup52 = null;
    boolean b53 = diagnosticGroupPathSuppressingWarningsGuard43.enables(diagnosticGroup52);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup54 = null;
    boolean b55 = diagnosticGroupPathSuppressingWarningsGuard43.disables(diagnosticGroup54);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup56 = null;
    boolean b57 = diagnosticGroupPathSuppressingWarningsGuard43.enables(diagnosticGroup56);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup58 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard60 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup58, "");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup61 = null;
    boolean b62 = diagnosticGroupPathSuppressingWarningsGuard60.enables(diagnosticGroup61);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup63 = null;
    boolean b64 = diagnosticGroupPathSuppressingWarningsGuard60.enables(diagnosticGroup63);
    java.lang.String str65 = diagnosticGroupPathSuppressingWarningsGuard60.toString();
    java.lang.String str66 = diagnosticGroupPathSuppressingWarningsGuard60.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup67 = null;
    boolean b68 = diagnosticGroupPathSuppressingWarningsGuard60.enables(diagnosticGroup67);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array69 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard70 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard70, warningsGuard_array69);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard72 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard70);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array73 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard74 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b75 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard74, warningsGuard_array73);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard76 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard74);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array77 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard72, composeWarningsGuard76 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard78 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard78, warningsGuard_array77);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard80 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard78);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard81 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard78);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard82 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard78);
    com.google.javascript.jscomp.JSError jSError83 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel84 = composeWarningsGuard82.level(jSError83);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup85 = null;
    boolean b86 = composeWarningsGuard82.enables(diagnosticGroup85);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array87 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, composeWarningsGuard30, diagnosticGroupPathSuppressingWarningsGuard43, diagnosticGroupPathSuppressingWarningsGuard60, composeWarningsGuard82 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard88 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array87);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "null(OFF)(hi!)"+ "'", str46.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "null(OFF)(hi!)"+ "'", str47.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "null(OFF)()"+ "'", str65.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str66 + "' != '" + "null(OFF)()"+ "'", str66.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b86 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array87);

  }

  @Test
  public void test107() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test107"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel18 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);

  }

  @Test
  public void test108() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test108"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array15 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array15);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array15);

  }

  @Test
  public void test109() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test109"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard3.enables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard3.level(jSError16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard3.level(jSError18);
    com.google.javascript.jscomp.JSError jSError20 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel21 = composeWarningsGuard3.level(jSError20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = composeWarningsGuard3.enables(diagnosticGroup22);
    com.google.javascript.jscomp.JSError jSError24 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel25 = composeWarningsGuard3.level(jSError24);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str26 = composeWarningsGuard3.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel25);

  }

  @Test
  public void test110() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test110"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    java.lang.String str15 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup16);
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array19 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard20 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard20, warningsGuard_array19);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard25 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup23, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array26 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard27 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard27, warningsGuard_array26);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard29 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard27);
    com.google.javascript.jscomp.JSError jSError30 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel31 = composeWarningsGuard29.level(jSError30);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array32 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard33 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard33, warningsGuard_array32);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard35 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard33);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array36 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard22, diagnosticGroupPathSuppressingWarningsGuard25, composeWarningsGuard29, composeWarningsGuard35 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard37 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard37, warningsGuard_array36);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard39 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard37);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard40 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard37);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard41 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard37);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard42 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard37);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard43 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard37);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard44 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard37);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard45 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard37);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard46 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard37);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup47 = null;
    boolean b48 = composeWarningsGuard46.enables(diagnosticGroup47);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup49 = null;
    boolean b50 = composeWarningsGuard46.enables(diagnosticGroup49);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup51 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard53 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup51, "null(OFF)()");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup54 = null;
    boolean b55 = diagnosticGroupPathSuppressingWarningsGuard53.disables(diagnosticGroup54);
    java.lang.String str56 = diagnosticGroupPathSuppressingWarningsGuard53.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup57 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard59 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup57, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup60 = null;
    boolean b61 = diagnosticGroupPathSuppressingWarningsGuard59.disables(diagnosticGroup60);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup62 = null;
    boolean b63 = diagnosticGroupPathSuppressingWarningsGuard59.disables(diagnosticGroup62);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup64 = null;
    boolean b65 = diagnosticGroupPathSuppressingWarningsGuard59.disables(diagnosticGroup64);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup66 = null;
    boolean b67 = diagnosticGroupPathSuppressingWarningsGuard59.enables(diagnosticGroup66);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup68 = null;
    boolean b69 = diagnosticGroupPathSuppressingWarningsGuard59.disables(diagnosticGroup68);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup70 = null;
    boolean b71 = diagnosticGroupPathSuppressingWarningsGuard59.disables(diagnosticGroup70);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup72 = null;
    boolean b73 = diagnosticGroupPathSuppressingWarningsGuard59.enables(diagnosticGroup72);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup74 = null;
    boolean b75 = diagnosticGroupPathSuppressingWarningsGuard59.enables(diagnosticGroup74);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup76 = null;
    boolean b77 = diagnosticGroupPathSuppressingWarningsGuard59.enables(diagnosticGroup76);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup78 = null;
    boolean b79 = diagnosticGroupPathSuppressingWarningsGuard59.disables(diagnosticGroup78);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup80 = null;
    boolean b81 = diagnosticGroupPathSuppressingWarningsGuard59.disables(diagnosticGroup80);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array82 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, composeWarningsGuard46, diagnosticGroupPathSuppressingWarningsGuard53, diagnosticGroupPathSuppressingWarningsGuard59 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard83 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array82);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "null(OFF)(hi!)"+ "'", str15.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str56 + "' != '" + "null(OFF)(null(OFF)())"+ "'", str56.equals("null(OFF)(null(OFF)())"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array82);

  }

  @Test
  public void test111() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test111"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)(short)0, (int)'#', "null(OFF)(null(OFF)())");
    int i4 = simpleRegion3.getEndingLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 35);

  }

  @Test
  public void test112() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test112"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = composeWarningsGuard7.enables(diagnosticGroup8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard7.level(jSError10);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str12 = composeWarningsGuard7.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);

  }

  @Test
  public void test113() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test113"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel22 = composeWarningsGuard12.level(jSError21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b24 = composeWarningsGuard12.disables(diagnosticGroup23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel22);

  }

  @Test
  public void test114() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test114"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup16);
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str19 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard22 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup20, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = diagnosticGroupPathSuppressingWarningsGuard22.disables(diagnosticGroup23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = diagnosticGroupPathSuppressingWarningsGuard22.disables(diagnosticGroup25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = diagnosticGroupPathSuppressingWarningsGuard22.disables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = diagnosticGroupPathSuppressingWarningsGuard22.disables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = diagnosticGroupPathSuppressingWarningsGuard22.disables(diagnosticGroup31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard35 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup33, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = diagnosticGroupPathSuppressingWarningsGuard35.disables(diagnosticGroup36);
    java.lang.String str38 = diagnosticGroupPathSuppressingWarningsGuard35.toString();
    java.lang.String str39 = diagnosticGroupPathSuppressingWarningsGuard35.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup40 = null;
    boolean b41 = diagnosticGroupPathSuppressingWarningsGuard35.enables(diagnosticGroup40);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup42 = null;
    boolean b43 = diagnosticGroupPathSuppressingWarningsGuard35.enables(diagnosticGroup42);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup44 = null;
    boolean b45 = diagnosticGroupPathSuppressingWarningsGuard35.enables(diagnosticGroup44);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup46 = null;
    boolean b47 = diagnosticGroupPathSuppressingWarningsGuard35.enables(diagnosticGroup46);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup48 = null;
    boolean b49 = diagnosticGroupPathSuppressingWarningsGuard35.enables(diagnosticGroup48);
    java.lang.String str50 = diagnosticGroupPathSuppressingWarningsGuard35.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array51 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard52 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard52, warningsGuard_array51);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard54 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard52);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array55 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard56 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard56, warningsGuard_array55);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard58 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard56);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array59 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard54, composeWarningsGuard58 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard60 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b61 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard60, warningsGuard_array59);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard62 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard60);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard63 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard60);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard64 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard60);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard65 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard60);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup66 = null;
    boolean b67 = composeWarningsGuard65.enables(diagnosticGroup66);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup68 = null;
    boolean b69 = composeWarningsGuard65.enables(diagnosticGroup68);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup70 = null;
    boolean b71 = composeWarningsGuard65.enables(diagnosticGroup70);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array72 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard73 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b74 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard73, warningsGuard_array72);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard75 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard73);
    com.google.javascript.jscomp.JSError jSError76 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel77 = composeWarningsGuard75.level(jSError76);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup78 = null;
    boolean b79 = composeWarningsGuard75.enables(diagnosticGroup78);
    com.google.javascript.jscomp.JSError jSError80 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel81 = composeWarningsGuard75.level(jSError80);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup82 = null;
    boolean b83 = composeWarningsGuard75.enables(diagnosticGroup82);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup84 = null;
    boolean b85 = composeWarningsGuard75.enables(diagnosticGroup84);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup86 = null;
    boolean b87 = composeWarningsGuard75.enables(diagnosticGroup86);
    com.google.javascript.jscomp.JSError jSError88 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel89 = composeWarningsGuard75.level(jSError88);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array90 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard22, diagnosticGroupPathSuppressingWarningsGuard35, composeWarningsGuard65, composeWarningsGuard75 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard91 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array90);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null(OFF)(hi!)"+ "'", str19.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "null(OFF)(hi!)"+ "'", str38.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "null(OFF)(hi!)"+ "'", str39.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "null(OFF)(hi!)"+ "'", str50.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b87 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel89);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array90);

  }

  @Test
  public void test115() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test115"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = composeWarningsGuard3.enables(diagnosticGroup8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array12 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard13 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard13, warningsGuard_array12);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard15 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard13);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array16 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard17 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard17, warningsGuard_array16);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard19 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard17);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array20 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard15, composeWarningsGuard19 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard21 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard21, warningsGuard_array20);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard21);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard27 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup25, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard30 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup28, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = diagnosticGroupPathSuppressingWarningsGuard30.disables(diagnosticGroup31);
    java.lang.String str33 = diagnosticGroupPathSuppressingWarningsGuard30.toString();
    java.lang.String str34 = diagnosticGroupPathSuppressingWarningsGuard30.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    boolean b36 = diagnosticGroupPathSuppressingWarningsGuard30.enables(diagnosticGroup35);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup37 = null;
    boolean b38 = diagnosticGroupPathSuppressingWarningsGuard30.enables(diagnosticGroup37);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup39 = null;
    boolean b40 = diagnosticGroupPathSuppressingWarningsGuard30.disables(diagnosticGroup39);
    java.lang.String str41 = diagnosticGroupPathSuppressingWarningsGuard30.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup42 = null;
    boolean b43 = diagnosticGroupPathSuppressingWarningsGuard30.enables(diagnosticGroup42);
    java.lang.String str44 = diagnosticGroupPathSuppressingWarningsGuard30.toString();
    java.lang.String str45 = diagnosticGroupPathSuppressingWarningsGuard30.toString();
    java.lang.String str46 = diagnosticGroupPathSuppressingWarningsGuard30.toString();
    java.lang.String str47 = diagnosticGroupPathSuppressingWarningsGuard30.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup48 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard50 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup48, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup51 = null;
    boolean b52 = diagnosticGroupPathSuppressingWarningsGuard50.disables(diagnosticGroup51);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup53 = null;
    boolean b54 = diagnosticGroupPathSuppressingWarningsGuard50.enables(diagnosticGroup53);
    java.lang.String str55 = diagnosticGroupPathSuppressingWarningsGuard50.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup56 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard58 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup56, "null(OFF)()");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup59 = null;
    boolean b60 = diagnosticGroupPathSuppressingWarningsGuard58.disables(diagnosticGroup59);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array61 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard24, diagnosticGroupPathSuppressingWarningsGuard27, diagnosticGroupPathSuppressingWarningsGuard30, diagnosticGroupPathSuppressingWarningsGuard50, diagnosticGroupPathSuppressingWarningsGuard58 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard62 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array61);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null(OFF)(hi!)"+ "'", str33.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null(OFF)(hi!)"+ "'", str34.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "null(OFF)(hi!)"+ "'", str41.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "null(OFF)(hi!)"+ "'", str44.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "null(OFF)(hi!)"+ "'", str45.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "null(OFF)(hi!)"+ "'", str46.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "null(OFF)(hi!)"+ "'", str47.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "null(OFF)(hi!)"+ "'", str55.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array61);

  }

  @Test
  public void test116() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test116"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard8 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard9 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = composeWarningsGuard10.enables(diagnosticGroup11);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard10.level(jSError13);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str15 = composeWarningsGuard10.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);

  }

  @Test
  public void test117() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test117"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = composeWarningsGuard23.enables(diagnosticGroup24);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str26 = composeWarningsGuard23.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);

  }

  @Test
  public void test118() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test118"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard12.level(jSError13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel22 = composeWarningsGuard12.level(jSError21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.JSError jSError25 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel26 = composeWarningsGuard12.level(jSError25);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str27 = composeWarningsGuard12.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel26);

  }

  @Test
  public void test119() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test119"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    java.lang.String str7 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str8 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    com.google.javascript.jscomp.JSError jSError13 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel14 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null(OFF)(hi!)"+ "'", str7.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null(OFF)(hi!)"+ "'", str8.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test120() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test120"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup8);
    java.lang.String str10 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard15 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup13, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard15.disables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard15.disables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard15.disables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard15.disables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard15.disables(diagnosticGroup24);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard15.enables(diagnosticGroup26);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = diagnosticGroupPathSuppressingWarningsGuard15.enables(diagnosticGroup28);
    java.lang.String str30 = diagnosticGroupPathSuppressingWarningsGuard15.toString();
    java.lang.String str31 = diagnosticGroupPathSuppressingWarningsGuard15.toString();
    java.lang.String str32 = diagnosticGroupPathSuppressingWarningsGuard15.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    boolean b34 = diagnosticGroupPathSuppressingWarningsGuard15.disables(diagnosticGroup33);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    boolean b36 = diagnosticGroupPathSuppressingWarningsGuard15.disables(diagnosticGroup35);
    java.lang.String str37 = diagnosticGroupPathSuppressingWarningsGuard15.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array38 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard15 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard39 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array38);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)(hi!)"+ "'", str3.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null(OFF)(hi!)"+ "'", str10.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null(OFF)(hi!)"+ "'", str30.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null(OFF)(hi!)"+ "'", str31.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null(OFF)(hi!)"+ "'", str32.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null(OFF)(hi!)"+ "'", str37.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array38);

  }

  @Test
  public void test121() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test121"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(10, (int)(short)-1, "hi!");
    java.lang.String str4 = simpleRegion3.getSourceExcerpt();
    int i5 = simpleRegion3.getBeginningLineNumber();
    int i6 = simpleRegion3.getBeginningLineNumber();
    int i7 = simpleRegion3.getBeginningLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "hi!"+ "'", str4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 10);

  }

  @Test
  public void test122() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test122"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard8 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard9 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = composeWarningsGuard10.enables(diagnosticGroup11);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str13 = composeWarningsGuard10.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test123() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test123"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array14 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard15 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array14);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array14);

  }

  @Test
  public void test124() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test124"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup12);
    java.lang.String str14 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel18 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null(OFF)(hi!)"+ "'", str14.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);

  }

  @Test
  public void test125() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test125"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup10);
    java.lang.String str12 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError14 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel15 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)(hi!)"+ "'", str3.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "null(OFF)(hi!)"+ "'", str12.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test126() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test126"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(0, 32, "null(OFF)(hi!)");
    java.lang.String str4 = simpleRegion3.getSourceExcerpt();
    int i5 = simpleRegion3.getEndingLineNumber();
    int i6 = simpleRegion3.getEndingLineNumber();
    int i7 = simpleRegion3.getBeginningLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null(OFF)(hi!)"+ "'", str4.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);

  }

  @Test
  public void test127() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test127"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    java.lang.String str16 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array18 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard19 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard19, warningsGuard_array18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard19);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array22 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard23 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard23, warningsGuard_array22);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard23);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array26 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard21, composeWarningsGuard25 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard27 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard27, warningsGuard_array26);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard29 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = composeWarningsGuard29.enables(diagnosticGroup30);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    boolean b33 = composeWarningsGuard29.enables(diagnosticGroup32);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup34 = null;
    boolean b35 = composeWarningsGuard29.enables(diagnosticGroup34);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = composeWarningsGuard29.enables(diagnosticGroup36);
    com.google.javascript.jscomp.JSError jSError38 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel39 = composeWarningsGuard29.level(jSError38);
    com.google.javascript.jscomp.JSError jSError40 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel41 = composeWarningsGuard29.level(jSError40);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array42 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard43 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard43, warningsGuard_array42);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard45 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard43);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup46 = null;
    boolean b47 = composeWarningsGuard45.enables(diagnosticGroup46);
    com.google.javascript.jscomp.JSError jSError48 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel49 = composeWarningsGuard45.level(jSError48);
    com.google.javascript.jscomp.JSError jSError50 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel51 = composeWarningsGuard45.level(jSError50);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup52 = null;
    boolean b53 = composeWarningsGuard45.enables(diagnosticGroup52);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup54 = null;
    boolean b55 = composeWarningsGuard45.enables(diagnosticGroup54);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array56 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, composeWarningsGuard29, composeWarningsGuard45 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard57 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array56);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null(OFF)(hi!)"+ "'", str16.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array56);

  }

  @Test
  public void test128() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test128"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b22 = composeWarningsGuard12.disables(diagnosticGroup21);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test129() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test129"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup6);
    java.lang.String str8 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError9 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel10 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)()"+ "'", str3.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null(OFF)()"+ "'", str8.equals("null(OFF)()"));

  }

  @Test
  public void test130() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test130"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = composeWarningsGuard6.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b10 = composeWarningsGuard6.disables(diagnosticGroup9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test131() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test131"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array9 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard10 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard10, warningsGuard_array9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = composeWarningsGuard12.enables(diagnosticGroup23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = composeWarningsGuard12.enables(diagnosticGroup25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard29 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup27, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = diagnosticGroupPathSuppressingWarningsGuard29.disables(diagnosticGroup30);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    boolean b33 = diagnosticGroupPathSuppressingWarningsGuard29.disables(diagnosticGroup32);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup34 = null;
    boolean b35 = diagnosticGroupPathSuppressingWarningsGuard29.disables(diagnosticGroup34);
    java.lang.String str36 = diagnosticGroupPathSuppressingWarningsGuard29.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup37 = null;
    boolean b38 = diagnosticGroupPathSuppressingWarningsGuard29.enables(diagnosticGroup37);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array39 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, composeWarningsGuard12, diagnosticGroupPathSuppressingWarningsGuard29 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard40 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array39);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "null(OFF)(hi!)"+ "'", str36.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array39);

  }

  @Test
  public void test132() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test132"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    java.lang.String str16 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup19);
    java.lang.String str21 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError22 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel23 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError22);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null(OFF)(hi!)"+ "'", str16.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "null(OFF)(hi!)"+ "'", str21.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test133() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test133"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.JSError jSError6 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel7 = composeWarningsGuard3.level(jSError6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str14 = composeWarningsGuard3.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);

  }

  @Test
  public void test134() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test134"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard14 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard15 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard15.level(jSError16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard15.level(jSError18);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str20 = composeWarningsGuard15.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);

  }

  @Test
  public void test135() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test135"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel22 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError21);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test136() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test136"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "null(OFF)()");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.JSError jSError7 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel8 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError7);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);

  }

  @Test
  public void test137() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test137"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    java.lang.String str11 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup12);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array14 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard15 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array14);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null(OFF)(hi!)"+ "'", str11.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array14);

  }

  @Test
  public void test138() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test138"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = composeWarningsGuard3.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard3.level(jSError10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard3.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard3.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard3.enables(diagnosticGroup18);
    com.google.javascript.jscomp.JSError jSError20 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel21 = composeWarningsGuard3.level(jSError20);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str22 = composeWarningsGuard3.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel21);

  }

  @Test
  public void test139() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test139"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard12.level(jSError13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b18 = composeWarningsGuard12.disables(diagnosticGroup17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);

  }

  @Test
  public void test140() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test140"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard27 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard28 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard29 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str30 = composeWarningsGuard29.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);

  }

  @Test
  public void test141() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test141"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard3.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard3.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard3.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard3.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = composeWarningsGuard3.enables(diagnosticGroup20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel23 = composeWarningsGuard3.level(jSError22);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str24 = composeWarningsGuard3.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel23);

  }

  @Test
  public void test142() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test142"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup10);
    java.lang.String str12 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str14 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError15 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel16 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)(hi!)"+ "'", str3.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "null(OFF)(hi!)"+ "'", str12.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null(OFF)(hi!)"+ "'", str14.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test143() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test143"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard14 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard15 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str16 = composeWarningsGuard15.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);

  }

  @Test
  public void test144() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test144"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str25 = composeWarningsGuard12.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);

  }

  @Test
  public void test145() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test145"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard8 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError9 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel10 = composeWarningsGuard8.level(jSError9);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard8.level(jSError11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard8.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard8.level(jSError15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard19 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup17, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard19.disables(diagnosticGroup20);
    java.lang.String str22 = diagnosticGroupPathSuppressingWarningsGuard19.toString();
    java.lang.String str23 = diagnosticGroupPathSuppressingWarningsGuard19.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard19.enables(diagnosticGroup24);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard19.enables(diagnosticGroup26);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = diagnosticGroupPathSuppressingWarningsGuard19.disables(diagnosticGroup28);
    java.lang.String str30 = diagnosticGroupPathSuppressingWarningsGuard19.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = diagnosticGroupPathSuppressingWarningsGuard19.disables(diagnosticGroup31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard35 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup33, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = diagnosticGroupPathSuppressingWarningsGuard35.disables(diagnosticGroup36);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup38 = null;
    boolean b39 = diagnosticGroupPathSuppressingWarningsGuard35.enables(diagnosticGroup38);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup40 = null;
    boolean b41 = diagnosticGroupPathSuppressingWarningsGuard35.disables(diagnosticGroup40);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup42 = null;
    boolean b43 = diagnosticGroupPathSuppressingWarningsGuard35.disables(diagnosticGroup42);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup44 = null;
    boolean b45 = diagnosticGroupPathSuppressingWarningsGuard35.enables(diagnosticGroup44);
    java.lang.String str46 = diagnosticGroupPathSuppressingWarningsGuard35.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup47 = null;
    boolean b48 = diagnosticGroupPathSuppressingWarningsGuard35.disables(diagnosticGroup47);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array49 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard8, diagnosticGroupPathSuppressingWarningsGuard19, diagnosticGroupPathSuppressingWarningsGuard35 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard50 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array49);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null(OFF)(hi!)"+ "'", str22.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "null(OFF)(hi!)"+ "'", str23.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null(OFF)(hi!)"+ "'", str30.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "null(OFF)(hi!)"+ "'", str46.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array49);

  }

  @Test
  public void test146() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test146"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard12.level(jSError13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel22 = composeWarningsGuard12.level(jSError21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = composeWarningsGuard12.enables(diagnosticGroup25);
    com.google.javascript.jscomp.JSError jSError27 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel28 = composeWarningsGuard12.level(jSError27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = composeWarningsGuard12.enables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b32 = composeWarningsGuard12.disables(diagnosticGroup31);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test147() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test147"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    java.lang.String str7 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard12 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup10, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard12.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard12.disables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard12.disables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard12.disables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard12.disables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = diagnosticGroupPathSuppressingWarningsGuard12.enables(diagnosticGroup23);
    java.lang.String str25 = diagnosticGroupPathSuppressingWarningsGuard12.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard12.disables(diagnosticGroup26);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = diagnosticGroupPathSuppressingWarningsGuard12.enables(diagnosticGroup28);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array30 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard12 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard31 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array30);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null(OFF)(hi!)"+ "'", str7.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null(OFF)(hi!)"+ "'", str25.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array30);

  }

  @Test
  public void test148() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test148"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "null(OFF)()");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup3);
    com.google.javascript.jscomp.JSError jSError5 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel6 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);

  }

  @Test
  public void test149() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test149"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard3.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b17 = composeWarningsGuard3.disables(diagnosticGroup16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);

  }

  @Test
  public void test150() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test150"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard29 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup27, "");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = diagnosticGroupPathSuppressingWarningsGuard29.enables(diagnosticGroup30);
    java.lang.String str32 = diagnosticGroupPathSuppressingWarningsGuard29.toString();
    java.lang.String str33 = diagnosticGroupPathSuppressingWarningsGuard29.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup34 = null;
    boolean b35 = diagnosticGroupPathSuppressingWarningsGuard29.enables(diagnosticGroup34);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = diagnosticGroupPathSuppressingWarningsGuard29.enables(diagnosticGroup36);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array38 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard39 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard39, warningsGuard_array38);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard41 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard39);
    com.google.javascript.jscomp.JSError jSError42 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel43 = composeWarningsGuard41.level(jSError42);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup44 = null;
    boolean b45 = composeWarningsGuard41.enables(diagnosticGroup44);
    com.google.javascript.jscomp.JSError jSError46 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel47 = composeWarningsGuard41.level(jSError46);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup48 = null;
    boolean b49 = composeWarningsGuard41.enables(diagnosticGroup48);
    com.google.javascript.jscomp.JSError jSError50 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel51 = composeWarningsGuard41.level(jSError50);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup52 = null;
    boolean b53 = composeWarningsGuard41.enables(diagnosticGroup52);
    com.google.javascript.jscomp.JSError jSError54 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel55 = composeWarningsGuard41.level(jSError54);
    com.google.javascript.jscomp.JSError jSError56 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel57 = composeWarningsGuard41.level(jSError56);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array58 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard26, diagnosticGroupPathSuppressingWarningsGuard29, composeWarningsGuard41 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard59 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array58);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null(OFF)()"+ "'", str32.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null(OFF)()"+ "'", str33.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array58);

  }

  @Test
  public void test151() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test151"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(0, (int)(byte)10, "");
    java.lang.String str4 = simpleRegion3.getSourceExcerpt();
    java.lang.String str5 = simpleRegion3.getSourceExcerpt();
    java.lang.String str6 = simpleRegion3.getSourceExcerpt();
    int i7 = simpleRegion3.getBeginningLineNumber();
    java.lang.String str8 = simpleRegion3.getSourceExcerpt();
    int i9 = simpleRegion3.getBeginningLineNumber();
    int i10 = simpleRegion3.getEndingLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + ""+ "'", str4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + ""+ "'", str5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + ""+ "'", str6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + ""+ "'", str8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 10);

  }

  @Test
  public void test152() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test152"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.JSError jSError6 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel7 = composeWarningsGuard3.level(jSError6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b15 = composeWarningsGuard3.disables(diagnosticGroup14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);

  }

  @Test
  public void test153() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test153"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard17 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup15, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup18);
    java.lang.String str20 = diagnosticGroupPathSuppressingWarningsGuard17.toString();
    java.lang.String str21 = diagnosticGroupPathSuppressingWarningsGuard17.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard17.enables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard17.enables(diagnosticGroup24);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup26);
    java.lang.String str28 = diagnosticGroupPathSuppressingWarningsGuard17.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = diagnosticGroupPathSuppressingWarningsGuard17.enables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = diagnosticGroupPathSuppressingWarningsGuard17.enables(diagnosticGroup31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    boolean b34 = diagnosticGroupPathSuppressingWarningsGuard17.enables(diagnosticGroup33);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    boolean b36 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup35);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup37 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard39 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup37, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup40 = null;
    boolean b41 = diagnosticGroupPathSuppressingWarningsGuard39.disables(diagnosticGroup40);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup42 = null;
    boolean b43 = diagnosticGroupPathSuppressingWarningsGuard39.enables(diagnosticGroup42);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup44 = null;
    boolean b45 = diagnosticGroupPathSuppressingWarningsGuard39.enables(diagnosticGroup44);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup46 = null;
    boolean b47 = diagnosticGroupPathSuppressingWarningsGuard39.enables(diagnosticGroup46);
    java.lang.String str48 = diagnosticGroupPathSuppressingWarningsGuard39.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup49 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard51 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup49, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup52 = null;
    boolean b53 = diagnosticGroupPathSuppressingWarningsGuard51.disables(diagnosticGroup52);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup54 = null;
    boolean b55 = diagnosticGroupPathSuppressingWarningsGuard51.disables(diagnosticGroup54);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup56 = null;
    boolean b57 = diagnosticGroupPathSuppressingWarningsGuard51.disables(diagnosticGroup56);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup58 = null;
    boolean b59 = diagnosticGroupPathSuppressingWarningsGuard51.disables(diagnosticGroup58);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup60 = null;
    boolean b61 = diagnosticGroupPathSuppressingWarningsGuard51.disables(diagnosticGroup60);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup62 = null;
    boolean b63 = diagnosticGroupPathSuppressingWarningsGuard51.enables(diagnosticGroup62);
    java.lang.String str64 = diagnosticGroupPathSuppressingWarningsGuard51.toString();
    java.lang.String str65 = diagnosticGroupPathSuppressingWarningsGuard51.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup66 = null;
    boolean b67 = diagnosticGroupPathSuppressingWarningsGuard51.enables(diagnosticGroup66);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array68 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard17, diagnosticGroupPathSuppressingWarningsGuard39, diagnosticGroupPathSuppressingWarningsGuard51 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard69 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array68);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "null(OFF)(hi!)"+ "'", str20.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "null(OFF)(hi!)"+ "'", str21.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "null(OFF)(hi!)"+ "'", str28.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str48 + "' != '" + "null(OFF)(hi!)"+ "'", str48.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "null(OFF)(hi!)"+ "'", str64.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "null(OFF)(hi!)"+ "'", str65.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array68);

  }

  @Test
  public void test154() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test154"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard27 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b29 = composeWarningsGuard27.disables(diagnosticGroup28);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);

  }

  @Test
  public void test155() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test155"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str7 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str8 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard11 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup9, "null(OFF)(hi!)");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = diagnosticGroupPathSuppressingWarningsGuard11.disables(diagnosticGroup12);
    java.lang.String str14 = diagnosticGroupPathSuppressingWarningsGuard11.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard17 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup15, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup24);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup26);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = diagnosticGroupPathSuppressingWarningsGuard17.enables(diagnosticGroup28);
    java.lang.String str30 = diagnosticGroupPathSuppressingWarningsGuard17.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    boolean b34 = diagnosticGroupPathSuppressingWarningsGuard17.enables(diagnosticGroup33);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard37 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup35, "");
    java.lang.String str38 = diagnosticGroupPathSuppressingWarningsGuard37.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup39 = null;
    boolean b40 = diagnosticGroupPathSuppressingWarningsGuard37.enables(diagnosticGroup39);
    java.lang.String str41 = diagnosticGroupPathSuppressingWarningsGuard37.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup42 = null;
    boolean b43 = diagnosticGroupPathSuppressingWarningsGuard37.enables(diagnosticGroup42);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup44 = null;
    boolean b45 = diagnosticGroupPathSuppressingWarningsGuard37.disables(diagnosticGroup44);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup46 = null;
    boolean b47 = diagnosticGroupPathSuppressingWarningsGuard37.enables(diagnosticGroup46);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup48 = null;
    boolean b49 = diagnosticGroupPathSuppressingWarningsGuard37.disables(diagnosticGroup48);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup50 = null;
    boolean b51 = diagnosticGroupPathSuppressingWarningsGuard37.disables(diagnosticGroup50);
    java.lang.String str52 = diagnosticGroupPathSuppressingWarningsGuard37.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array53 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard11, diagnosticGroupPathSuppressingWarningsGuard17, diagnosticGroupPathSuppressingWarningsGuard37 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard54 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array53);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null(OFF)(hi!)"+ "'", str7.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null(OFF)(hi!)"+ "'", str8.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null(OFF)(null(OFF)(hi!))"+ "'", str14.equals("null(OFF)(null(OFF)(hi!))"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null(OFF)(hi!)"+ "'", str30.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "null(OFF)()"+ "'", str38.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "null(OFF)()"+ "'", str41.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "null(OFF)()"+ "'", str52.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array53);

  }

  @Test
  public void test156() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test156"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard12.level(jSError13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel22 = composeWarningsGuard12.level(jSError21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.JSError jSError25 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel26 = composeWarningsGuard12.level(jSError25);
    com.google.javascript.jscomp.JSError jSError27 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel28 = composeWarningsGuard12.level(jSError27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b30 = composeWarningsGuard12.disables(diagnosticGroup29);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel28);

  }

  @Test
  public void test157() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test157"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.JSError jSError25 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel26 = composeWarningsGuard12.level(jSError25);
    com.google.javascript.jscomp.JSError jSError27 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel28 = composeWarningsGuard12.level(jSError27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b30 = composeWarningsGuard12.disables(diagnosticGroup29);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel28);

  }

  @Test
  public void test158() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test158"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard13.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard13.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard13.enables(diagnosticGroup18);
    com.google.javascript.jscomp.JSError jSError20 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel21 = composeWarningsGuard13.level(jSError20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = composeWarningsGuard13.enables(diagnosticGroup22);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str24 = composeWarningsGuard13.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);

  }

  @Test
  public void test159() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test159"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b20 = composeWarningsGuard12.disables(diagnosticGroup19);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);

  }

  @Test
  public void test160() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test160"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.JSError jSError9 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel10 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test161() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test161"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)(short)0, 10, "null(OFF)(null(OFF)())");
    int i4 = simpleRegion3.getEndingLineNumber();
    java.lang.String str5 = simpleRegion3.getSourceExcerpt();
    int i6 = simpleRegion3.getEndingLineNumber();
    int i7 = simpleRegion3.getEndingLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(null(OFF)())"+ "'", str5.equals("null(OFF)(null(OFF)())"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 10);

  }

  @Test
  public void test162() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test162"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.JSError jSError25 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel26 = composeWarningsGuard12.level(jSError25);
    com.google.javascript.jscomp.JSError jSError27 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel28 = composeWarningsGuard12.level(jSError27);
    com.google.javascript.jscomp.JSError jSError29 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel30 = composeWarningsGuard12.level(jSError29);
    com.google.javascript.jscomp.JSError jSError31 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel32 = composeWarningsGuard12.level(jSError31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b34 = composeWarningsGuard12.disables(diagnosticGroup33);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel32);

  }

  @Test
  public void test163() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test163"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup23);
    com.google.javascript.jscomp.JSError jSError25 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel26 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test164() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test164"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError5 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel6 = composeWarningsGuard4.level(jSError5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = composeWarningsGuard4.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard11 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup9, "null(OFF)(null(OFF)(null(OFF)(hi!)))");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = diagnosticGroupPathSuppressingWarningsGuard11.disables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard11.enables(diagnosticGroup14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array16 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard4, diagnosticGroupPathSuppressingWarningsGuard11 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard17 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array16);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array16);

  }

  @Test
  public void test165() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test165"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard11.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard11.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard11.enables(diagnosticGroup16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard11.level(jSError18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = composeWarningsGuard11.enables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = composeWarningsGuard11.enables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b25 = composeWarningsGuard11.disables(diagnosticGroup24);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);

  }

  @Test
  public void test166() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test166"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = composeWarningsGuard26.enables(diagnosticGroup27);
    com.google.javascript.jscomp.JSError jSError29 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel30 = composeWarningsGuard26.level(jSError29);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test167() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test167"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)'#', (int)'a', "null(OFF)(null(OFF)())");
    int i4 = simpleRegion3.getBeginningLineNumber();
    int i5 = simpleRegion3.getEndingLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 97);

  }

  @Test
  public void test168() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test168"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "null(OFF)(hi!)");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array5 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array5);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array5);

  }

  @Test
  public void test169() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test169"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str25 = composeWarningsGuard24.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);

  }

  @Test
  public void test170() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test170"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    java.lang.String str16 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup20);
    java.lang.String str22 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError23 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel24 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null(OFF)(hi!)"+ "'", str16.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null(OFF)(hi!)"+ "'", str22.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test171() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test171"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup4);
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    java.lang.String str11 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array16 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard17 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array16);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)()"+ "'", str3.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)()"+ "'", str6.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null(OFF)()"+ "'", str11.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array16);

  }

  @Test
  public void test172() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test172"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard27 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard28 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard29 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard30 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard31 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard32 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b34 = composeWarningsGuard32.disables(diagnosticGroup33);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);

  }

  @Test
  public void test173() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test173"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    java.lang.String str7 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup10);
    java.lang.String str12 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array14 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard15 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard15, warningsGuard_array14);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard17 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard15);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array18 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard19 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard19, warningsGuard_array18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard19);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array22 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard17, composeWarningsGuard21 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard23 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard23, warningsGuard_array22);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard23);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard23);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard27 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard23);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard28 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = composeWarningsGuard28.enables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = composeWarningsGuard28.enables(diagnosticGroup31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard35 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup33, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = diagnosticGroupPathSuppressingWarningsGuard35.disables(diagnosticGroup36);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup38 = null;
    boolean b39 = diagnosticGroupPathSuppressingWarningsGuard35.disables(diagnosticGroup38);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup40 = null;
    boolean b41 = diagnosticGroupPathSuppressingWarningsGuard35.disables(diagnosticGroup40);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup42 = null;
    boolean b43 = diagnosticGroupPathSuppressingWarningsGuard35.disables(diagnosticGroup42);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup44 = null;
    boolean b45 = diagnosticGroupPathSuppressingWarningsGuard35.disables(diagnosticGroup44);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup46 = null;
    boolean b47 = diagnosticGroupPathSuppressingWarningsGuard35.enables(diagnosticGroup46);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup48 = null;
    boolean b49 = diagnosticGroupPathSuppressingWarningsGuard35.enables(diagnosticGroup48);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array50 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, composeWarningsGuard28, diagnosticGroupPathSuppressingWarningsGuard35 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard51 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array50);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null(OFF)(hi!)"+ "'", str7.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "null(OFF)(hi!)"+ "'", str12.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array50);

  }

  @Test
  public void test174() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test174"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard22 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup20, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = diagnosticGroupPathSuppressingWarningsGuard22.disables(diagnosticGroup23);
    java.lang.String str25 = diagnosticGroupPathSuppressingWarningsGuard22.toString();
    java.lang.String str26 = diagnosticGroupPathSuppressingWarningsGuard22.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = diagnosticGroupPathSuppressingWarningsGuard22.enables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = diagnosticGroupPathSuppressingWarningsGuard22.enables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = diagnosticGroupPathSuppressingWarningsGuard22.disables(diagnosticGroup31);
    java.lang.String str33 = diagnosticGroupPathSuppressingWarningsGuard22.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup34 = null;
    boolean b35 = diagnosticGroupPathSuppressingWarningsGuard22.enables(diagnosticGroup34);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = diagnosticGroupPathSuppressingWarningsGuard22.enables(diagnosticGroup36);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup38 = null;
    boolean b39 = diagnosticGroupPathSuppressingWarningsGuard22.enables(diagnosticGroup38);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup40 = null;
    boolean b41 = diagnosticGroupPathSuppressingWarningsGuard22.enables(diagnosticGroup40);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup42 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard44 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup42, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup45 = null;
    boolean b46 = diagnosticGroupPathSuppressingWarningsGuard44.disables(diagnosticGroup45);
    java.lang.String str47 = diagnosticGroupPathSuppressingWarningsGuard44.toString();
    java.lang.String str48 = diagnosticGroupPathSuppressingWarningsGuard44.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup49 = null;
    boolean b50 = diagnosticGroupPathSuppressingWarningsGuard44.enables(diagnosticGroup49);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup51 = null;
    boolean b52 = diagnosticGroupPathSuppressingWarningsGuard44.enables(diagnosticGroup51);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup53 = null;
    boolean b54 = diagnosticGroupPathSuppressingWarningsGuard44.disables(diagnosticGroup53);
    java.lang.String str55 = diagnosticGroupPathSuppressingWarningsGuard44.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup56 = null;
    boolean b57 = diagnosticGroupPathSuppressingWarningsGuard44.enables(diagnosticGroup56);
    java.lang.String str58 = diagnosticGroupPathSuppressingWarningsGuard44.toString();
    java.lang.String str59 = diagnosticGroupPathSuppressingWarningsGuard44.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup60 = null;
    boolean b61 = diagnosticGroupPathSuppressingWarningsGuard44.disables(diagnosticGroup60);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup62 = null;
    boolean b63 = diagnosticGroupPathSuppressingWarningsGuard44.disables(diagnosticGroup62);
    java.lang.String str64 = diagnosticGroupPathSuppressingWarningsGuard44.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup65 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard67 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup65, "null(OFF)(null(OFF)(hi!))");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup68 = null;
    boolean b69 = diagnosticGroupPathSuppressingWarningsGuard67.enables(diagnosticGroup68);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array70 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard71 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b72 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard71, warningsGuard_array70);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard73 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard71);
    com.google.javascript.jscomp.JSError jSError74 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel75 = composeWarningsGuard73.level(jSError74);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup76 = null;
    boolean b77 = composeWarningsGuard73.enables(diagnosticGroup76);
    com.google.javascript.jscomp.JSError jSError78 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel79 = composeWarningsGuard73.level(jSError78);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup80 = null;
    boolean b81 = composeWarningsGuard73.enables(diagnosticGroup80);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup82 = null;
    boolean b83 = composeWarningsGuard73.enables(diagnosticGroup82);
    com.google.javascript.jscomp.JSError jSError84 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel85 = composeWarningsGuard73.level(jSError84);
    com.google.javascript.jscomp.JSError jSError86 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel87 = composeWarningsGuard73.level(jSError86);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup88 = null;
    boolean b89 = composeWarningsGuard73.enables(diagnosticGroup88);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array90 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard22, diagnosticGroupPathSuppressingWarningsGuard44, diagnosticGroupPathSuppressingWarningsGuard67, composeWarningsGuard73 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard91 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array90);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null(OFF)(hi!)"+ "'", str25.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null(OFF)(hi!)"+ "'", str26.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null(OFF)(hi!)"+ "'", str33.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "null(OFF)(hi!)"+ "'", str47.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str48 + "' != '" + "null(OFF)(hi!)"+ "'", str48.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "null(OFF)(hi!)"+ "'", str55.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str58 + "' != '" + "null(OFF)(hi!)"+ "'", str58.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "null(OFF)(hi!)"+ "'", str59.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "null(OFF)(hi!)"+ "'", str64.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel87);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array90);

  }

  @Test
  public void test175() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test175"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup12);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array14 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard15 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard15, warningsGuard_array14);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard17 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard15);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array18 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard19 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard19, warningsGuard_array18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard19);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array22 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard17, composeWarningsGuard21 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard23 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard23, warningsGuard_array22);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard23);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard23);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard27 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard23);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard28 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = composeWarningsGuard28.enables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = composeWarningsGuard28.enables(diagnosticGroup31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard35 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup33, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = diagnosticGroupPathSuppressingWarningsGuard35.disables(diagnosticGroup36);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup38 = null;
    boolean b39 = diagnosticGroupPathSuppressingWarningsGuard35.disables(diagnosticGroup38);
    java.lang.String str40 = diagnosticGroupPathSuppressingWarningsGuard35.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup41 = null;
    boolean b42 = diagnosticGroupPathSuppressingWarningsGuard35.disables(diagnosticGroup41);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup43 = null;
    boolean b44 = diagnosticGroupPathSuppressingWarningsGuard35.enables(diagnosticGroup43);
    java.lang.String str45 = diagnosticGroupPathSuppressingWarningsGuard35.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup46 = null;
    boolean b47 = diagnosticGroupPathSuppressingWarningsGuard35.disables(diagnosticGroup46);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup48 = null;
    boolean b49 = diagnosticGroupPathSuppressingWarningsGuard35.enables(diagnosticGroup48);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array50 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, composeWarningsGuard28, diagnosticGroupPathSuppressingWarningsGuard35 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard51 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array50);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "null(OFF)(hi!)"+ "'", str40.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "null(OFF)(hi!)"+ "'", str45.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array50);

  }

  @Test
  public void test176() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test176"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)' ', (int)(byte)0, "");

  }

  @Test
  public void test177() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test177"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.JSError jSError25 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel26 = composeWarningsGuard12.level(jSError25);
    com.google.javascript.jscomp.JSError jSError27 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel28 = composeWarningsGuard12.level(jSError27);
    com.google.javascript.jscomp.JSError jSError29 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel30 = composeWarningsGuard12.level(jSError29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b32 = composeWarningsGuard12.disables(diagnosticGroup31);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel30);

  }

  @Test
  public void test178() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test178"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard19 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup17, "null(OFF)()");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard19.disables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard19.disables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard19.disables(diagnosticGroup24);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard19.enables(diagnosticGroup26);
    java.lang.String str28 = diagnosticGroupPathSuppressingWarningsGuard19.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard31 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup29, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    boolean b33 = diagnosticGroupPathSuppressingWarningsGuard31.disables(diagnosticGroup32);
    java.lang.String str34 = diagnosticGroupPathSuppressingWarningsGuard31.toString();
    java.lang.String str35 = diagnosticGroupPathSuppressingWarningsGuard31.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = diagnosticGroupPathSuppressingWarningsGuard31.enables(diagnosticGroup36);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup38 = null;
    boolean b39 = diagnosticGroupPathSuppressingWarningsGuard31.enables(diagnosticGroup38);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup40 = null;
    boolean b41 = diagnosticGroupPathSuppressingWarningsGuard31.disables(diagnosticGroup40);
    java.lang.String str42 = diagnosticGroupPathSuppressingWarningsGuard31.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup43 = null;
    boolean b44 = diagnosticGroupPathSuppressingWarningsGuard31.disables(diagnosticGroup43);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup45 = null;
    boolean b46 = diagnosticGroupPathSuppressingWarningsGuard31.disables(diagnosticGroup45);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup47 = null;
    boolean b48 = diagnosticGroupPathSuppressingWarningsGuard31.disables(diagnosticGroup47);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup49 = null;
    boolean b50 = diagnosticGroupPathSuppressingWarningsGuard31.enables(diagnosticGroup49);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup51 = null;
    boolean b52 = diagnosticGroupPathSuppressingWarningsGuard31.enables(diagnosticGroup51);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup53 = null;
    boolean b54 = diagnosticGroupPathSuppressingWarningsGuard31.disables(diagnosticGroup53);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array55 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard19, diagnosticGroupPathSuppressingWarningsGuard31 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard56 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array55);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "null(OFF)(null(OFF)())"+ "'", str28.equals("null(OFF)(null(OFF)())"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null(OFF)(hi!)"+ "'", str34.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null(OFF)(hi!)"+ "'", str35.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "null(OFF)(hi!)"+ "'", str42.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array55);

  }

  @Test
  public void test179() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test179"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard11.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard11.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard11.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard11.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = composeWarningsGuard11.enables(diagnosticGroup20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel23 = composeWarningsGuard11.level(jSError22);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str24 = composeWarningsGuard11.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel23);

  }

  @Test
  public void test180() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test180"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel19 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test181() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test181"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)'a', 35, "null(OFF)(null(OFF)(hi!))");
    java.lang.String str4 = simpleRegion3.getSourceExcerpt();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null(OFF)(null(OFF)(hi!))"+ "'", str4.equals("null(OFF)(null(OFF)(hi!))"));

  }

  @Test
  public void test182() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test182"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = composeWarningsGuard12.enables(diagnosticGroup25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = composeWarningsGuard12.enables(diagnosticGroup27);
    com.google.javascript.jscomp.JSError jSError29 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel30 = composeWarningsGuard12.level(jSError29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = composeWarningsGuard12.enables(diagnosticGroup31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b34 = composeWarningsGuard12.disables(diagnosticGroup33);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test183() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test183"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    java.lang.String str16 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel22 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError21);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null(OFF)(hi!)"+ "'", str16.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test184() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test184"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "null(OFF)(hi!)");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.JSError jSError9 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel10 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test185() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test185"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard8 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard9 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard9.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard9.enables(diagnosticGroup12);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str14 = composeWarningsGuard9.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);

  }

  @Test
  public void test186() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test186"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard11.enables(diagnosticGroup12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard11.level(jSError14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array16 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard17 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard17, warningsGuard_array16);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard19 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard17);
    com.google.javascript.jscomp.JSError jSError25 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel26 = composeWarningsGuard24.level(jSError25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = composeWarningsGuard24.enables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard31 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup29, "");
    java.lang.String str32 = diagnosticGroupPathSuppressingWarningsGuard31.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    boolean b34 = diagnosticGroupPathSuppressingWarningsGuard31.enables(diagnosticGroup33);
    java.lang.String str35 = diagnosticGroupPathSuppressingWarningsGuard31.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = diagnosticGroupPathSuppressingWarningsGuard31.enables(diagnosticGroup36);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup38 = null;
    boolean b39 = diagnosticGroupPathSuppressingWarningsGuard31.enables(diagnosticGroup38);
    java.lang.String str40 = diagnosticGroupPathSuppressingWarningsGuard31.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup41 = null;
    boolean b42 = diagnosticGroupPathSuppressingWarningsGuard31.enables(diagnosticGroup41);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup43 = null;
    boolean b44 = diagnosticGroupPathSuppressingWarningsGuard31.disables(diagnosticGroup43);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array45 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard46 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard46, warningsGuard_array45);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard48 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard46);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array49 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard50 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard50, warningsGuard_array49);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard52 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard50);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array53 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard48, composeWarningsGuard52 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard54 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard54, warningsGuard_array53);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard56 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard54);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup57 = null;
    boolean b58 = composeWarningsGuard56.enables(diagnosticGroup57);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup59 = null;
    boolean b60 = composeWarningsGuard56.enables(diagnosticGroup59);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup61 = null;
    boolean b62 = composeWarningsGuard56.enables(diagnosticGroup61);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup63 = null;
    boolean b64 = composeWarningsGuard56.enables(diagnosticGroup63);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup65 = null;
    boolean b66 = composeWarningsGuard56.enables(diagnosticGroup65);
    com.google.javascript.jscomp.JSError jSError67 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel68 = composeWarningsGuard56.level(jSError67);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup69 = null;
    boolean b70 = composeWarningsGuard56.enables(diagnosticGroup69);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array71 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard72 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b73 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard72, warningsGuard_array71);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard74 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard72);
    com.google.javascript.jscomp.JSError jSError75 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel76 = composeWarningsGuard74.level(jSError75);
    com.google.javascript.jscomp.JSError jSError77 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel78 = composeWarningsGuard74.level(jSError77);
    com.google.javascript.jscomp.JSError jSError79 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel80 = composeWarningsGuard74.level(jSError79);
    com.google.javascript.jscomp.JSError jSError81 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel82 = composeWarningsGuard74.level(jSError81);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array83 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard11, composeWarningsGuard24, diagnosticGroupPathSuppressingWarningsGuard31, composeWarningsGuard56, composeWarningsGuard74 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard84 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array83);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null(OFF)()"+ "'", str32.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null(OFF)()"+ "'", str35.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "null(OFF)()"+ "'", str40.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array83);

  }

  @Test
  public void test187() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test187"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup8);
    java.lang.String str10 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard13 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup11, "null(OFF)(null(OFF)())");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard13.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard13.disables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard13.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard13.enables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard24 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup22, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = diagnosticGroupPathSuppressingWarningsGuard24.disables(diagnosticGroup25);
    java.lang.String str27 = diagnosticGroupPathSuppressingWarningsGuard24.toString();
    java.lang.String str28 = diagnosticGroupPathSuppressingWarningsGuard24.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = diagnosticGroupPathSuppressingWarningsGuard24.enables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = diagnosticGroupPathSuppressingWarningsGuard24.disables(diagnosticGroup31);
    java.lang.String str33 = diagnosticGroupPathSuppressingWarningsGuard24.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup34 = null;
    boolean b35 = diagnosticGroupPathSuppressingWarningsGuard24.enables(diagnosticGroup34);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = diagnosticGroupPathSuppressingWarningsGuard24.enables(diagnosticGroup36);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array38 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard39 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard39, warningsGuard_array38);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard41 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard39);
    com.google.javascript.jscomp.JSError jSError42 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel43 = composeWarningsGuard41.level(jSError42);
    com.google.javascript.jscomp.JSError jSError44 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel45 = composeWarningsGuard41.level(jSError44);
    com.google.javascript.jscomp.JSError jSError46 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel47 = composeWarningsGuard41.level(jSError46);
    com.google.javascript.jscomp.JSError jSError48 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel49 = composeWarningsGuard41.level(jSError48);
    com.google.javascript.jscomp.JSError jSError50 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel51 = composeWarningsGuard41.level(jSError50);
    com.google.javascript.jscomp.JSError jSError52 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel53 = composeWarningsGuard41.level(jSError52);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup54 = null;
    boolean b55 = composeWarningsGuard41.enables(diagnosticGroup54);
    com.google.javascript.jscomp.JSError jSError56 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel57 = composeWarningsGuard41.level(jSError56);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array58 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard13, diagnosticGroupPathSuppressingWarningsGuard24, composeWarningsGuard41 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard59 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array58);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null(OFF)(hi!)"+ "'", str10.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null(OFF)(hi!)"+ "'", str27.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "null(OFF)(hi!)"+ "'", str28.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null(OFF)(hi!)"+ "'", str33.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array58);

  }

  @Test
  public void test188() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test188"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.JSError jSError6 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel7 = composeWarningsGuard3.level(jSError6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard3.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b17 = composeWarningsGuard3.disables(diagnosticGroup16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);

  }

  @Test
  public void test189() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test189"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard13.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b17 = composeWarningsGuard13.disables(diagnosticGroup16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test190() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test190"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "null(OFF)()");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError14 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel15 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(null(OFF)())"+ "'", str13.equals("null(OFF)(null(OFF)())"));

  }

  @Test
  public void test191() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test191"); }

    com.google.javascript.jscomp.AbstractCompiler abstractCompiler0 = null;
    com.google.javascript.jscomp.FieldCleanupPass fieldCleanupPass1 = new com.google.javascript.jscomp.FieldCleanupPass(abstractCompiler0);
    com.google.javascript.rhino.Node node2 = null;
    com.google.javascript.rhino.Node node3 = null;
    fieldCleanupPass1.process(node2, node3);
    com.google.javascript.rhino.Node node5 = null;
    com.google.javascript.rhino.Node node6 = null;
    fieldCleanupPass1.process(node5, node6);
    com.google.javascript.rhino.Node node8 = null;
    com.google.javascript.rhino.Node node9 = null;
    fieldCleanupPass1.process(node8, node9);
    com.google.javascript.rhino.Node node11 = null;
    com.google.javascript.rhino.Node node12 = null;
    fieldCleanupPass1.process(node11, node12);
    com.google.javascript.rhino.Node node14 = null;
    com.google.javascript.rhino.Node node15 = null;
    fieldCleanupPass1.process(node14, node15);
    com.google.javascript.rhino.Node node17 = null;
    com.google.javascript.rhino.Node node18 = null;
    fieldCleanupPass1.process(node17, node18);
    com.google.javascript.rhino.Node node20 = null;
    com.google.javascript.rhino.Node node21 = null;
    fieldCleanupPass1.process(node20, node21);
    com.google.javascript.rhino.Node node23 = null;
    com.google.javascript.rhino.Node node24 = null;
    fieldCleanupPass1.process(node23, node24);
    com.google.javascript.rhino.Node node26 = null;
    com.google.javascript.rhino.Node node27 = null;
    fieldCleanupPass1.process(node26, node27);
    com.google.javascript.rhino.Node node29 = null;
    com.google.javascript.rhino.Node node30 = null;
    fieldCleanupPass1.process(node29, node30);
    com.google.javascript.rhino.Node node32 = null;
    com.google.javascript.rhino.Node node33 = null;
    fieldCleanupPass1.process(node32, node33);
    com.google.javascript.rhino.Node node35 = null;
    com.google.javascript.rhino.Node node36 = null;
    fieldCleanupPass1.process(node35, node36);
    com.google.javascript.rhino.Node node38 = null;
    com.google.javascript.rhino.Node node39 = null;
    fieldCleanupPass1.process(node38, node39);
    com.google.javascript.rhino.Node node41 = null;
    com.google.javascript.rhino.Node node42 = null;
    fieldCleanupPass1.process(node41, node42);
    com.google.javascript.rhino.Node node44 = null;
    com.google.javascript.rhino.Node node45 = null;
    fieldCleanupPass1.process(node44, node45);
    com.google.javascript.rhino.Node node47 = null;
    com.google.javascript.rhino.Node node48 = null;
    fieldCleanupPass1.process(node47, node48);
    com.google.javascript.rhino.Node node50 = null;
    com.google.javascript.rhino.Node node51 = null;
    fieldCleanupPass1.process(node50, node51);
    com.google.javascript.rhino.Node node53 = null;
    com.google.javascript.rhino.Node node54 = null;
    fieldCleanupPass1.process(node53, node54);
    com.google.javascript.rhino.Node node56 = null;
    com.google.javascript.rhino.Node node57 = null;
    fieldCleanupPass1.process(node56, node57);
    com.google.javascript.rhino.Node node59 = null;
    com.google.javascript.rhino.Node node60 = null;
    fieldCleanupPass1.process(node59, node60);
    com.google.javascript.rhino.Node node62 = null;
    com.google.javascript.rhino.Node node63 = null;
    fieldCleanupPass1.process(node62, node63);
    com.google.javascript.rhino.Node node65 = null;
    com.google.javascript.rhino.Node node66 = null;
    fieldCleanupPass1.process(node65, node66);
    com.google.javascript.rhino.Node node68 = null;
    com.google.javascript.rhino.Node node69 = null;
    fieldCleanupPass1.process(node68, node69);
    com.google.javascript.rhino.Node node71 = null;
    com.google.javascript.rhino.Node node72 = null;
    // The following exception was thrown during execution in test generation
    try {
    fieldCleanupPass1.hotSwapScript(node71, node72);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test192() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test192"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard3.enables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard3.level(jSError16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard3.level(jSError18);
    com.google.javascript.jscomp.JSError jSError20 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel21 = composeWarningsGuard3.level(jSError20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b23 = composeWarningsGuard3.disables(diagnosticGroup22);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel21);

  }

  @Test
  public void test193() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test193"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.JSError jSError25 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel26 = composeWarningsGuard12.level(jSError25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b28 = composeWarningsGuard12.disables(diagnosticGroup27);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel26);

  }

  @Test
  public void test194() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test194"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard8 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError9 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel10 = composeWarningsGuard8.level(jSError9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = composeWarningsGuard8.enables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard15 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup13, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard15.disables(diagnosticGroup16);
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard15.toString();
    java.lang.String str19 = diagnosticGroupPathSuppressingWarningsGuard15.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard15.enables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard15.enables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard15.disables(diagnosticGroup24);
    java.lang.String str26 = diagnosticGroupPathSuppressingWarningsGuard15.toString();
    java.lang.String str27 = diagnosticGroupPathSuppressingWarningsGuard15.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = diagnosticGroupPathSuppressingWarningsGuard15.enables(diagnosticGroup28);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = diagnosticGroupPathSuppressingWarningsGuard15.enables(diagnosticGroup30);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array32 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard33 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard33, warningsGuard_array32);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard35 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard33);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array36 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard37 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard37, warningsGuard_array36);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard39 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard37);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array40 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard35, composeWarningsGuard39 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard41 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard41, warningsGuard_array40);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard43 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard41);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard44 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard41);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup45 = null;
    boolean b46 = composeWarningsGuard44.enables(diagnosticGroup45);
    com.google.javascript.jscomp.JSError jSError47 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel48 = composeWarningsGuard44.level(jSError47);
    com.google.javascript.jscomp.JSError jSError49 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel50 = composeWarningsGuard44.level(jSError49);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup51 = null;
    boolean b52 = composeWarningsGuard44.enables(diagnosticGroup51);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup53 = null;
    boolean b54 = composeWarningsGuard44.enables(diagnosticGroup53);
    com.google.javascript.jscomp.JSError jSError55 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel56 = composeWarningsGuard44.level(jSError55);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup57 = null;
    boolean b58 = composeWarningsGuard44.enables(diagnosticGroup57);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup59 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard61 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup59, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup62 = null;
    boolean b63 = diagnosticGroupPathSuppressingWarningsGuard61.disables(diagnosticGroup62);
    java.lang.String str64 = diagnosticGroupPathSuppressingWarningsGuard61.toString();
    java.lang.String str65 = diagnosticGroupPathSuppressingWarningsGuard61.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup66 = null;
    boolean b67 = diagnosticGroupPathSuppressingWarningsGuard61.enables(diagnosticGroup66);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup68 = null;
    boolean b69 = diagnosticGroupPathSuppressingWarningsGuard61.enables(diagnosticGroup68);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup70 = null;
    boolean b71 = diagnosticGroupPathSuppressingWarningsGuard61.enables(diagnosticGroup70);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup72 = null;
    boolean b73 = diagnosticGroupPathSuppressingWarningsGuard61.enables(diagnosticGroup72);
    java.lang.String str74 = diagnosticGroupPathSuppressingWarningsGuard61.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array75 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard76 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b77 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard76, warningsGuard_array75);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard78 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard76);
    com.google.javascript.jscomp.JSError jSError79 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel80 = composeWarningsGuard78.level(jSError79);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array81 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard8, diagnosticGroupPathSuppressingWarningsGuard15, composeWarningsGuard44, diagnosticGroupPathSuppressingWarningsGuard61, composeWarningsGuard78 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard82 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array81);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null(OFF)(hi!)"+ "'", str19.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null(OFF)(hi!)"+ "'", str26.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null(OFF)(hi!)"+ "'", str27.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "null(OFF)(hi!)"+ "'", str64.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "null(OFF)(hi!)"+ "'", str65.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str74 + "' != '" + "null(OFF)(hi!)"+ "'", str74.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array81);

  }

  @Test
  public void test195() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test195"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard13.enables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard13.level(jSError16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard13.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = composeWarningsGuard13.enables(diagnosticGroup20);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str22 = composeWarningsGuard13.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);

  }

  @Test
  public void test196() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test196"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = composeWarningsGuard3.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard3.level(jSError10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard3.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard3.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard20 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup18, "");
    java.lang.String str21 = diagnosticGroupPathSuppressingWarningsGuard20.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard20.enables(diagnosticGroup22);
    java.lang.String str24 = diagnosticGroupPathSuppressingWarningsGuard20.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = diagnosticGroupPathSuppressingWarningsGuard20.enables(diagnosticGroup25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = diagnosticGroupPathSuppressingWarningsGuard20.enables(diagnosticGroup27);
    java.lang.String str29 = diagnosticGroupPathSuppressingWarningsGuard20.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard32 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup30, "");
    java.lang.String str33 = diagnosticGroupPathSuppressingWarningsGuard32.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup34 = null;
    boolean b35 = diagnosticGroupPathSuppressingWarningsGuard32.enables(diagnosticGroup34);
    java.lang.String str36 = diagnosticGroupPathSuppressingWarningsGuard32.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup37 = null;
    boolean b38 = diagnosticGroupPathSuppressingWarningsGuard32.enables(diagnosticGroup37);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup39 = null;
    boolean b40 = diagnosticGroupPathSuppressingWarningsGuard32.disables(diagnosticGroup39);
    java.lang.String str41 = diagnosticGroupPathSuppressingWarningsGuard32.toString();
    java.lang.String str42 = diagnosticGroupPathSuppressingWarningsGuard32.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup43 = null;
    boolean b44 = diagnosticGroupPathSuppressingWarningsGuard32.disables(diagnosticGroup43);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup45 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard47 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup45, "null(OFF)(hi!)");
    java.lang.String str48 = diagnosticGroupPathSuppressingWarningsGuard47.toString();
    java.lang.String str49 = diagnosticGroupPathSuppressingWarningsGuard47.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup50 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard52 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup50, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup53 = null;
    boolean b54 = diagnosticGroupPathSuppressingWarningsGuard52.disables(diagnosticGroup53);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup55 = null;
    boolean b56 = diagnosticGroupPathSuppressingWarningsGuard52.enables(diagnosticGroup55);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup57 = null;
    boolean b58 = diagnosticGroupPathSuppressingWarningsGuard52.disables(diagnosticGroup57);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array59 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard20, diagnosticGroupPathSuppressingWarningsGuard32, diagnosticGroupPathSuppressingWarningsGuard47, diagnosticGroupPathSuppressingWarningsGuard52 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard60 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array59);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "null(OFF)()"+ "'", str21.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "null(OFF)()"+ "'", str24.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null(OFF)()"+ "'", str29.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null(OFF)()"+ "'", str33.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "null(OFF)()"+ "'", str36.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "null(OFF)()"+ "'", str41.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "null(OFF)()"+ "'", str42.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str48 + "' != '" + "null(OFF)(null(OFF)(hi!))"+ "'", str48.equals("null(OFF)(null(OFF)(hi!))"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null(OFF)(null(OFF)(hi!))"+ "'", str49.equals("null(OFF)(null(OFF)(hi!))"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array59);

  }

  @Test
  public void test197() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test197"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard3.enables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard3.level(jSError16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard3.level(jSError18);
    com.google.javascript.jscomp.JSError jSError20 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel21 = composeWarningsGuard3.level(jSError20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = composeWarningsGuard3.enables(diagnosticGroup22);
    com.google.javascript.jscomp.JSError jSError24 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel25 = composeWarningsGuard3.level(jSError24);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b27 = composeWarningsGuard3.disables(diagnosticGroup26);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel25);

  }

  @Test
  public void test198() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test198"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard12.level(jSError13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str23 = composeWarningsGuard12.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test199() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test199"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str25 = composeWarningsGuard12.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);

  }

  @Test
  public void test200() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test200"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard23 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup21, "null(OFF)(null(OFF)(null(OFF)()))");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array24 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard12, diagnosticGroupPathSuppressingWarningsGuard23 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array24);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array24);

  }

  @Test
  public void test201() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test201"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    java.lang.String str15 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str16 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel20 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError19);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "null(OFF)(hi!)"+ "'", str15.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null(OFF)(hi!)"+ "'", str16.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test202() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test202"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard20 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup18, "null(OFF)(null(OFF)())");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard20.disables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = diagnosticGroupPathSuppressingWarningsGuard20.disables(diagnosticGroup23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = diagnosticGroupPathSuppressingWarningsGuard20.enables(diagnosticGroup25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = diagnosticGroupPathSuppressingWarningsGuard20.enables(diagnosticGroup27);
    java.lang.String str29 = diagnosticGroupPathSuppressingWarningsGuard20.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array30 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard20 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard31 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array30);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null(OFF)(null(OFF)(null(OFF)()))"+ "'", str29.equals("null(OFF)(null(OFF)(null(OFF)()))"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array30);

  }

  @Test
  public void test203() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test203"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)'4', (int)(byte)10, "hi!");
    int i4 = simpleRegion3.getEndingLineNumber();
    int i5 = simpleRegion3.getEndingLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 10);

  }

  @Test
  public void test204() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test204"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError6 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel7 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError6);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)()"+ "'", str5.equals("null(OFF)()"));

  }

  @Test
  public void test205() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test205"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array12 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard13 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard13, warningsGuard_array12);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard15 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard13);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array16 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard17 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard17, warningsGuard_array16);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard19 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard17);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array20 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard15, composeWarningsGuard19 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard21 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard21, warningsGuard_array20);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard21);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard21);
    com.google.javascript.jscomp.JSError jSError25 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel26 = composeWarningsGuard24.level(jSError25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = composeWarningsGuard24.enables(diagnosticGroup27);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array29 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard11, composeWarningsGuard24 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard30 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array29);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array29);

  }

  @Test
  public void test206() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test206"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)(byte)0, (int)(byte)10, "hi!");
    int i4 = simpleRegion3.getBeginningLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);

  }

  @Test
  public void test207() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test207"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup15);
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup18);
    java.lang.String str20 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array21 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard22 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard22, warningsGuard_array21);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard22);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array25 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard26 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard26, warningsGuard_array25);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard28 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard26);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array29 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard24, composeWarningsGuard28 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard30 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard30, warningsGuard_array29);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard32 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard30);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard33 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard30);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup34 = null;
    boolean b35 = composeWarningsGuard33.enables(diagnosticGroup34);
    com.google.javascript.jscomp.JSError jSError36 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel37 = composeWarningsGuard33.level(jSError36);
    com.google.javascript.jscomp.JSError jSError38 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel39 = composeWarningsGuard33.level(jSError38);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup40 = null;
    boolean b41 = composeWarningsGuard33.enables(diagnosticGroup40);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup42 = null;
    boolean b43 = composeWarningsGuard33.enables(diagnosticGroup42);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup44 = null;
    boolean b45 = composeWarningsGuard33.enables(diagnosticGroup44);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup46 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard48 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup46, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup49 = null;
    boolean b50 = diagnosticGroupPathSuppressingWarningsGuard48.disables(diagnosticGroup49);
    java.lang.String str51 = diagnosticGroupPathSuppressingWarningsGuard48.toString();
    java.lang.String str52 = diagnosticGroupPathSuppressingWarningsGuard48.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup53 = null;
    boolean b54 = diagnosticGroupPathSuppressingWarningsGuard48.enables(diagnosticGroup53);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup55 = null;
    boolean b56 = diagnosticGroupPathSuppressingWarningsGuard48.enables(diagnosticGroup55);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup57 = null;
    boolean b58 = diagnosticGroupPathSuppressingWarningsGuard48.disables(diagnosticGroup57);
    java.lang.String str59 = diagnosticGroupPathSuppressingWarningsGuard48.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup60 = null;
    boolean b61 = diagnosticGroupPathSuppressingWarningsGuard48.enables(diagnosticGroup60);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup62 = null;
    boolean b63 = diagnosticGroupPathSuppressingWarningsGuard48.enables(diagnosticGroup62);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup64 = null;
    boolean b65 = diagnosticGroupPathSuppressingWarningsGuard48.enables(diagnosticGroup64);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup66 = null;
    boolean b67 = diagnosticGroupPathSuppressingWarningsGuard48.enables(diagnosticGroup66);
    java.lang.String str68 = diagnosticGroupPathSuppressingWarningsGuard48.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array69 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, composeWarningsGuard33, diagnosticGroupPathSuppressingWarningsGuard48 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard70 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array69);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "null(OFF)(hi!)"+ "'", str20.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "null(OFF)(hi!)"+ "'", str51.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "null(OFF)(hi!)"+ "'", str52.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "null(OFF)(hi!)"+ "'", str59.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str68 + "' != '" + "null(OFF)(hi!)"+ "'", str68.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array69);

  }

  @Test
  public void test208() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test208"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup18);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array20 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array20);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array20);

  }

  @Test
  public void test209() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test209"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str19 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup22);
    java.lang.String str24 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str25 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup26);
    com.google.javascript.jscomp.JSError jSError28 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel29 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError28);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null(OFF)(hi!)"+ "'", str19.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "null(OFF)(hi!)"+ "'", str24.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null(OFF)(hi!)"+ "'", str25.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);

  }

  @Test
  public void test210() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test210"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard12.level(jSError13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel22 = composeWarningsGuard12.level(jSError21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = composeWarningsGuard12.enables(diagnosticGroup23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b26 = composeWarningsGuard12.disables(diagnosticGroup25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test211() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test211"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard11.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard11.enables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard11.level(jSError16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b19 = composeWarningsGuard11.disables(diagnosticGroup18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);

  }

  @Test
  public void test212() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test212"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard8 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup6, "null(OFF)(hi!)");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard8.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard8.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard8.disables(diagnosticGroup13);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array15 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard8 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array15);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array15);

  }

  @Test
  public void test213() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test213"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard13.enables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard13.level(jSError16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard13.level(jSError18);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str20 = composeWarningsGuard13.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);

  }

  @Test
  public void test214() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test214"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array25 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard26 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard26, warningsGuard_array25);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard28 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard26);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array29 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard30 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard30, warningsGuard_array29);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard32 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard30);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array33 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard28, composeWarningsGuard32 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard34 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard34, warningsGuard_array33);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard36 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard34);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard37 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard34);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup38 = null;
    boolean b39 = composeWarningsGuard37.enables(diagnosticGroup38);
    com.google.javascript.jscomp.JSError jSError40 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel41 = composeWarningsGuard37.level(jSError40);
    com.google.javascript.jscomp.JSError jSError42 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel43 = composeWarningsGuard37.level(jSError42);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup44 = null;
    boolean b45 = composeWarningsGuard37.enables(diagnosticGroup44);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup46 = null;
    boolean b47 = composeWarningsGuard37.enables(diagnosticGroup46);
    com.google.javascript.jscomp.JSError jSError48 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel49 = composeWarningsGuard37.level(jSError48);
    com.google.javascript.jscomp.JSError jSError50 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel51 = composeWarningsGuard37.level(jSError50);
    com.google.javascript.jscomp.JSError jSError52 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel53 = composeWarningsGuard37.level(jSError52);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup54 = null;
    boolean b55 = composeWarningsGuard37.enables(diagnosticGroup54);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array56 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard57 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard57, warningsGuard_array56);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard59 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard57);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard60 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard57);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard61 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard57);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard62 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard57);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup63 = null;
    boolean b64 = composeWarningsGuard62.enables(diagnosticGroup63);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array65 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard12, composeWarningsGuard37, composeWarningsGuard62 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard66 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array65);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array65);

  }

  @Test
  public void test215() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test215"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup6);
    java.lang.String str8 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.JSError jSError11 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel12 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)()"+ "'", str3.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null(OFF)()"+ "'", str8.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test216() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test216"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(0, (int)(byte)10, "");
    int i4 = simpleRegion3.getEndingLineNumber();
    java.lang.String str5 = simpleRegion3.getSourceExcerpt();
    int i6 = simpleRegion3.getEndingLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + ""+ "'", str5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 10);

  }

  @Test
  public void test217() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test217"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup4);
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel17 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)()"+ "'", str3.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)()"+ "'", str6.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)()"+ "'", str13.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test218() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test218"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = composeWarningsGuard3.enables(diagnosticGroup4);
    com.google.javascript.jscomp.JSError jSError6 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel7 = composeWarningsGuard3.level(jSError6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b9 = composeWarningsGuard3.disables(diagnosticGroup8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel7);

  }

  @Test
  public void test219() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test219"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard12 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup10, "hi!");
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard12.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard12.enables(diagnosticGroup14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array16 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard12 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard17 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array16);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array16);

  }

  @Test
  public void test220() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test220"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard27 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard28 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = composeWarningsGuard28.enables(diagnosticGroup29);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str31 = composeWarningsGuard28.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test221() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test221"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str19 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError20 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel21 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null(OFF)(hi!)"+ "'", str19.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test222() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test222"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    java.lang.String str16 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel23 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError22);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null(OFF)(hi!)"+ "'", str16.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);

  }

  @Test
  public void test223() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test223"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = composeWarningsGuard12.enables(diagnosticGroup23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b26 = composeWarningsGuard12.disables(diagnosticGroup25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test224() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test224"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = composeWarningsGuard12.enables(diagnosticGroup25);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array27 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard28 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28, warningsGuard_array27);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard30 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array31 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard32 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard32, warningsGuard_array31);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard34 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard32);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array35 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard30, composeWarningsGuard34 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard36 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard36, warningsGuard_array35);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard38 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard36);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard39 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard36);
    com.google.javascript.jscomp.JSError jSError40 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel41 = composeWarningsGuard39.level(jSError40);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup42 = null;
    boolean b43 = composeWarningsGuard39.enables(diagnosticGroup42);
    com.google.javascript.jscomp.JSError jSError44 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel45 = composeWarningsGuard39.level(jSError44);
    com.google.javascript.jscomp.JSError jSError46 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel47 = composeWarningsGuard39.level(jSError46);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup48 = null;
    boolean b49 = composeWarningsGuard39.enables(diagnosticGroup48);
    com.google.javascript.jscomp.JSError jSError50 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel51 = composeWarningsGuard39.level(jSError50);
    com.google.javascript.jscomp.JSError jSError52 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel53 = composeWarningsGuard39.level(jSError52);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup54 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard56 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup54, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup57 = null;
    boolean b58 = diagnosticGroupPathSuppressingWarningsGuard56.disables(diagnosticGroup57);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup59 = null;
    boolean b60 = diagnosticGroupPathSuppressingWarningsGuard56.disables(diagnosticGroup59);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup61 = null;
    boolean b62 = diagnosticGroupPathSuppressingWarningsGuard56.disables(diagnosticGroup61);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup63 = null;
    boolean b64 = diagnosticGroupPathSuppressingWarningsGuard56.disables(diagnosticGroup63);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup65 = null;
    boolean b66 = diagnosticGroupPathSuppressingWarningsGuard56.enables(diagnosticGroup65);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup67 = null;
    boolean b68 = diagnosticGroupPathSuppressingWarningsGuard56.enables(diagnosticGroup67);
    java.lang.String str69 = diagnosticGroupPathSuppressingWarningsGuard56.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array70 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard71 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b72 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard71, warningsGuard_array70);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard73 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard71);
    com.google.javascript.jscomp.JSError jSError74 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel75 = composeWarningsGuard73.level(jSError74);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup76 = null;
    boolean b77 = composeWarningsGuard73.enables(diagnosticGroup76);
    com.google.javascript.jscomp.JSError jSError78 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel79 = composeWarningsGuard73.level(jSError78);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup80 = null;
    boolean b81 = composeWarningsGuard73.enables(diagnosticGroup80);
    com.google.javascript.jscomp.JSError jSError82 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel83 = composeWarningsGuard73.level(jSError82);
    com.google.javascript.jscomp.JSError jSError84 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel85 = composeWarningsGuard73.level(jSError84);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup86 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard88 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup86, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup89 = null;
    boolean b90 = diagnosticGroupPathSuppressingWarningsGuard88.disables(diagnosticGroup89);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup91 = null;
    boolean b92 = diagnosticGroupPathSuppressingWarningsGuard88.enables(diagnosticGroup91);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup93 = null;
    boolean b94 = diagnosticGroupPathSuppressingWarningsGuard88.enables(diagnosticGroup93);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array95 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard12, composeWarningsGuard39, diagnosticGroupPathSuppressingWarningsGuard56, composeWarningsGuard73, diagnosticGroupPathSuppressingWarningsGuard88 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard96 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array95);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str69 + "' != '" + "null(OFF)(hi!)"+ "'", str69.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b90 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b92 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b94 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array95);

  }

  @Test
  public void test225() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test225"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel19 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test226() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test226"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard14 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard14.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard14.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard14.enables(diagnosticGroup19);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str21 = composeWarningsGuard14.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test227() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test227"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard8 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError9 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel10 = composeWarningsGuard8.level(jSError9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = composeWarningsGuard8.enables(diagnosticGroup11);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str13 = composeWarningsGuard8.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test228() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test228"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    java.lang.String str7 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel15 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null(OFF)(hi!)"+ "'", str7.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);

  }

  @Test
  public void test229() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test229"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard13.level(jSError14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard13.level(jSError16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard13.level(jSError18);
    com.google.javascript.jscomp.JSError jSError20 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel21 = composeWarningsGuard13.level(jSError20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = composeWarningsGuard13.enables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = composeWarningsGuard13.enables(diagnosticGroup24);
    com.google.javascript.jscomp.JSError jSError26 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel27 = composeWarningsGuard13.level(jSError26);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b29 = composeWarningsGuard13.disables(diagnosticGroup28);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel27);

  }

  @Test
  public void test230() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test230"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array26 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard25 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard27 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array26);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array26);

  }

  @Test
  public void test231() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test231"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)'a', 10, "null(OFF)(null(OFF)(hi!))");

  }

  @Test
  public void test232() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test232"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup24);
    com.google.javascript.jscomp.JSError jSError26 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel27 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError26);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);

  }

  @Test
  public void test233() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test233"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(100, (int)(byte)100, "");
    java.lang.String str4 = simpleRegion3.getSourceExcerpt();
    java.lang.String str5 = simpleRegion3.getSourceExcerpt();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + ""+ "'", str4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + ""+ "'", str5.equals(""));

  }

  @Test
  public void test234() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test234"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "null(OFF)(hi!)");
    com.google.javascript.jscomp.JSError jSError3 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel4 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError3);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test235() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test235"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str17 = composeWarningsGuard12.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);

  }

  @Test
  public void test236() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test236"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.JSError jSError11 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel12 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test237() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test237"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard8 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard9 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard9.enables(diagnosticGroup10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard9.level(jSError12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b15 = composeWarningsGuard9.disables(diagnosticGroup14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);

  }

  @Test
  public void test238() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test238"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard21 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup19, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard21.disables(diagnosticGroup22);
    java.lang.String str24 = diagnosticGroupPathSuppressingWarningsGuard21.toString();
    java.lang.String str25 = diagnosticGroupPathSuppressingWarningsGuard21.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard21.enables(diagnosticGroup26);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = diagnosticGroupPathSuppressingWarningsGuard21.enables(diagnosticGroup28);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = diagnosticGroupPathSuppressingWarningsGuard21.disables(diagnosticGroup30);
    java.lang.String str32 = diagnosticGroupPathSuppressingWarningsGuard21.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    boolean b34 = diagnosticGroupPathSuppressingWarningsGuard21.enables(diagnosticGroup33);
    java.lang.String str35 = diagnosticGroupPathSuppressingWarningsGuard21.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = diagnosticGroupPathSuppressingWarningsGuard21.disables(diagnosticGroup36);
    java.lang.String str38 = diagnosticGroupPathSuppressingWarningsGuard21.toString();
    java.lang.String str39 = diagnosticGroupPathSuppressingWarningsGuard21.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array40 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard41 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard41, warningsGuard_array40);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard43 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard41);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array44 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard45 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard45, warningsGuard_array44);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard47 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard45);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array48 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard43, composeWarningsGuard47 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard49 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard49, warningsGuard_array48);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard51 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard49);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup52 = null;
    boolean b53 = composeWarningsGuard51.enables(diagnosticGroup52);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup54 = null;
    boolean b55 = composeWarningsGuard51.enables(diagnosticGroup54);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array56 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard57 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard57, warningsGuard_array56);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard59 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard57);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard60 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard57);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard61 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard57);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard62 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard57);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard63 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard57);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard64 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard57);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup65 = null;
    boolean b66 = composeWarningsGuard64.enables(diagnosticGroup65);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup67 = null;
    boolean b68 = composeWarningsGuard64.enables(diagnosticGroup67);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array69 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard70 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard70, warningsGuard_array69);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard72 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard70);
    com.google.javascript.jscomp.JSError jSError73 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel74 = composeWarningsGuard72.level(jSError73);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup75 = null;
    boolean b76 = composeWarningsGuard72.enables(diagnosticGroup75);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup77 = null;
    boolean b78 = composeWarningsGuard72.enables(diagnosticGroup77);
    com.google.javascript.jscomp.JSError jSError79 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel80 = composeWarningsGuard72.level(jSError79);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array81 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard21, composeWarningsGuard51, composeWarningsGuard64, composeWarningsGuard72 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard82 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array81);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "null(OFF)(hi!)"+ "'", str24.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null(OFF)(hi!)"+ "'", str25.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null(OFF)(hi!)"+ "'", str32.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null(OFF)(hi!)"+ "'", str35.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "null(OFF)(hi!)"+ "'", str38.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "null(OFF)(hi!)"+ "'", str39.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array81);

  }

  @Test
  public void test239() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test239"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard11.level(jSError12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard11.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard18 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup16, "null(OFF)(null(OFF)(hi!))");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard18.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard18.disables(diagnosticGroup21);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array23 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard24 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard24, warningsGuard_array23);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard24);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard27 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard24);
    com.google.javascript.jscomp.JSError jSError28 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel29 = composeWarningsGuard27.level(jSError28);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = composeWarningsGuard27.enables(diagnosticGroup30);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array32 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard33 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard33, warningsGuard_array32);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard35 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard33);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array36 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard37 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard37, warningsGuard_array36);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard39 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard37);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array40 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard35, composeWarningsGuard39 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard41 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard41, warningsGuard_array40);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard43 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard41);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard44 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard41);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard45 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard41);
    com.google.javascript.jscomp.JSError jSError46 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel47 = composeWarningsGuard45.level(jSError46);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup48 = null;
    boolean b49 = composeWarningsGuard45.enables(diagnosticGroup48);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup50 = null;
    boolean b51 = composeWarningsGuard45.enables(diagnosticGroup50);
    com.google.javascript.jscomp.JSError jSError52 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel53 = composeWarningsGuard45.level(jSError52);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup54 = null;
    boolean b55 = composeWarningsGuard45.enables(diagnosticGroup54);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array56 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard11, diagnosticGroupPathSuppressingWarningsGuard18, composeWarningsGuard27, composeWarningsGuard45 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard57 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array56);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array56);

  }

  @Test
  public void test240() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test240"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel22 = composeWarningsGuard12.level(jSError21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard25 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup23, "null(OFF)(hi!)");
    java.lang.String str26 = diagnosticGroupPathSuppressingWarningsGuard25.toString();
    java.lang.String str27 = diagnosticGroupPathSuppressingWarningsGuard25.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array28 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard29 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard29, warningsGuard_array28);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard31 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard29);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array32 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard33 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard33, warningsGuard_array32);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard35 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard33);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array36 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard31, composeWarningsGuard35 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard37 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard37, warningsGuard_array36);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard39 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard37);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard40 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard37);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard41 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard37);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup42 = null;
    boolean b43 = composeWarningsGuard41.enables(diagnosticGroup42);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup44 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard46 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup44, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup47 = null;
    boolean b48 = diagnosticGroupPathSuppressingWarningsGuard46.disables(diagnosticGroup47);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup49 = null;
    boolean b50 = diagnosticGroupPathSuppressingWarningsGuard46.enables(diagnosticGroup49);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup51 = null;
    boolean b52 = diagnosticGroupPathSuppressingWarningsGuard46.enables(diagnosticGroup51);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup53 = null;
    boolean b54 = diagnosticGroupPathSuppressingWarningsGuard46.enables(diagnosticGroup53);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array55 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard12, diagnosticGroupPathSuppressingWarningsGuard25, composeWarningsGuard41, diagnosticGroupPathSuppressingWarningsGuard46 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard56 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array55);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null(OFF)(null(OFF)(hi!))"+ "'", str26.equals("null(OFF)(null(OFF)(hi!))"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null(OFF)(null(OFF)(hi!))"+ "'", str27.equals("null(OFF)(null(OFF)(hi!))"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array55);

  }

  @Test
  public void test241() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test241"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup5);
    java.lang.String str7 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str8 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard13 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup11, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard13.disables(diagnosticGroup14);
    java.lang.String str16 = diagnosticGroupPathSuppressingWarningsGuard13.toString();
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard13.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard13.disables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard13.disables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard13.enables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard13.disables(diagnosticGroup24);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array26 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard27 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard27, warningsGuard_array26);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard29 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard27);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard30 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard27);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard31 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard27);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard32 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard27);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard33 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard27);
    com.google.javascript.jscomp.JSError jSError34 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel35 = composeWarningsGuard33.level(jSError34);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = composeWarningsGuard33.enables(diagnosticGroup36);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup38 = null;
    boolean b39 = composeWarningsGuard33.enables(diagnosticGroup38);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array40 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard41 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard41, warningsGuard_array40);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard43 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard41);
    com.google.javascript.jscomp.JSError jSError44 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel45 = composeWarningsGuard43.level(jSError44);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup46 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard48 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup46, "");
    java.lang.String str49 = diagnosticGroupPathSuppressingWarningsGuard48.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup50 = null;
    boolean b51 = diagnosticGroupPathSuppressingWarningsGuard48.enables(diagnosticGroup50);
    java.lang.String str52 = diagnosticGroupPathSuppressingWarningsGuard48.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup53 = null;
    boolean b54 = diagnosticGroupPathSuppressingWarningsGuard48.enables(diagnosticGroup53);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup55 = null;
    boolean b56 = diagnosticGroupPathSuppressingWarningsGuard48.enables(diagnosticGroup55);
    java.lang.String str57 = diagnosticGroupPathSuppressingWarningsGuard48.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup58 = null;
    boolean b59 = diagnosticGroupPathSuppressingWarningsGuard48.enables(diagnosticGroup58);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup60 = null;
    boolean b61 = diagnosticGroupPathSuppressingWarningsGuard48.disables(diagnosticGroup60);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array62 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard63 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard63, warningsGuard_array62);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard65 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard63);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array66 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard67 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard67, warningsGuard_array66);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard69 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard67);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array70 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard65, composeWarningsGuard69 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard71 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b72 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard71, warningsGuard_array70);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard73 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard71);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard74 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard71);
    com.google.javascript.jscomp.JSError jSError75 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel76 = composeWarningsGuard74.level(jSError75);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup77 = null;
    boolean b78 = composeWarningsGuard74.enables(diagnosticGroup77);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array79 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard13, composeWarningsGuard33, composeWarningsGuard43, diagnosticGroupPathSuppressingWarningsGuard48, composeWarningsGuard74 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard80 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array79);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null(OFF)()"+ "'", str7.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null(OFF)()"+ "'", str8.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null(OFF)(hi!)"+ "'", str16.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null(OFF)()"+ "'", str49.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "null(OFF)()"+ "'", str52.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str57 + "' != '" + "null(OFF)()"+ "'", str57.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array79);

  }

  @Test
  public void test242() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test242"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)(short)0, (int)(byte)0, "null(OFF)(hi!)");
    int i4 = simpleRegion3.getEndingLineNumber();
    int i5 = simpleRegion3.getBeginningLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);

  }

  @Test
  public void test243() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test243"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup4);
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    java.lang.String str11 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array12 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array12);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)()"+ "'", str3.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)()"+ "'", str6.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null(OFF)()"+ "'", str11.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array12);

  }

  @Test
  public void test244() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test244"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard11.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b15 = composeWarningsGuard11.disables(diagnosticGroup14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);

  }

  @Test
  public void test245() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test245"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard12.level(jSError13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = composeWarningsGuard12.enables(diagnosticGroup23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b26 = composeWarningsGuard12.disables(diagnosticGroup25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test246() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test246"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(97, (int)(byte)1, "null(OFF)(hi!)");

  }

  @Test
  public void test247() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test247"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard3.enables(diagnosticGroup12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard3.level(jSError14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard3.level(jSError16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard3.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b21 = composeWarningsGuard3.disables(diagnosticGroup20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);

  }

  @Test
  public void test248() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test248"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str21 = composeWarningsGuard12.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);

  }

  @Test
  public void test249() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test249"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard18 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup16, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard18.disables(diagnosticGroup19);
    java.lang.String str21 = diagnosticGroupPathSuppressingWarningsGuard18.toString();
    java.lang.String str22 = diagnosticGroupPathSuppressingWarningsGuard18.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = diagnosticGroupPathSuppressingWarningsGuard18.enables(diagnosticGroup23);
    java.lang.String str25 = diagnosticGroupPathSuppressingWarningsGuard18.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard18.disables(diagnosticGroup26);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = diagnosticGroupPathSuppressingWarningsGuard18.enables(diagnosticGroup28);
    java.lang.String str30 = diagnosticGroupPathSuppressingWarningsGuard18.toString();
    java.lang.String str31 = diagnosticGroupPathSuppressingWarningsGuard18.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard34 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup32, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    boolean b36 = diagnosticGroupPathSuppressingWarningsGuard34.disables(diagnosticGroup35);
    java.lang.String str37 = diagnosticGroupPathSuppressingWarningsGuard34.toString();
    java.lang.String str38 = diagnosticGroupPathSuppressingWarningsGuard34.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup39 = null;
    boolean b40 = diagnosticGroupPathSuppressingWarningsGuard34.enables(diagnosticGroup39);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup41 = null;
    boolean b42 = diagnosticGroupPathSuppressingWarningsGuard34.enables(diagnosticGroup41);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup43 = null;
    boolean b44 = diagnosticGroupPathSuppressingWarningsGuard34.disables(diagnosticGroup43);
    java.lang.String str45 = diagnosticGroupPathSuppressingWarningsGuard34.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup46 = null;
    boolean b47 = diagnosticGroupPathSuppressingWarningsGuard34.disables(diagnosticGroup46);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup48 = null;
    boolean b49 = diagnosticGroupPathSuppressingWarningsGuard34.enables(diagnosticGroup48);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup50 = null;
    boolean b51 = diagnosticGroupPathSuppressingWarningsGuard34.disables(diagnosticGroup50);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup52 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard54 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup52, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup55 = null;
    boolean b56 = diagnosticGroupPathSuppressingWarningsGuard54.disables(diagnosticGroup55);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup57 = null;
    boolean b58 = diagnosticGroupPathSuppressingWarningsGuard54.disables(diagnosticGroup57);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup59 = null;
    boolean b60 = diagnosticGroupPathSuppressingWarningsGuard54.disables(diagnosticGroup59);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup61 = null;
    boolean b62 = diagnosticGroupPathSuppressingWarningsGuard54.disables(diagnosticGroup61);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup63 = null;
    boolean b64 = diagnosticGroupPathSuppressingWarningsGuard54.disables(diagnosticGroup63);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup65 = null;
    boolean b66 = diagnosticGroupPathSuppressingWarningsGuard54.enables(diagnosticGroup65);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array67 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard18, diagnosticGroupPathSuppressingWarningsGuard34, diagnosticGroupPathSuppressingWarningsGuard54 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard68 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array67);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "null(OFF)(hi!)"+ "'", str21.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null(OFF)(hi!)"+ "'", str22.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null(OFF)(hi!)"+ "'", str25.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null(OFF)(hi!)"+ "'", str30.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null(OFF)(hi!)"+ "'", str31.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "null(OFF)(hi!)"+ "'", str37.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "null(OFF)(hi!)"+ "'", str38.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "null(OFF)(hi!)"+ "'", str45.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array67);

  }

  @Test
  public void test250() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test250"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup16);
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel22 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError21);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test251() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test251"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str7 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel11 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null(OFF)(hi!)"+ "'", str7.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test252() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test252"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard9 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup7, "");
    java.lang.String str10 = diagnosticGroupPathSuppressingWarningsGuard9.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard9.enables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard9.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard9.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard9.enables(diagnosticGroup16);
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard9.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard9.enables(diagnosticGroup19);
    java.lang.String str21 = diagnosticGroupPathSuppressingWarningsGuard9.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard9.disables(diagnosticGroup22);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array24 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard25 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard25, warningsGuard_array24);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard27 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard25);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array28 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard29 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard29, warningsGuard_array28);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard31 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard29);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array32 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard27, composeWarningsGuard31 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard33 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard33, warningsGuard_array32);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard35 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard33);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard36 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard33);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup37 = null;
    boolean b38 = composeWarningsGuard36.enables(diagnosticGroup37);
    com.google.javascript.jscomp.JSError jSError39 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel40 = composeWarningsGuard36.level(jSError39);
    com.google.javascript.jscomp.JSError jSError41 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel42 = composeWarningsGuard36.level(jSError41);
    com.google.javascript.jscomp.JSError jSError43 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel44 = composeWarningsGuard36.level(jSError43);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array45 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard9, composeWarningsGuard36 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard46 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array45);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)()"+ "'", str5.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)()"+ "'", str6.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null(OFF)()"+ "'", str10.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)()"+ "'", str13.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)()"+ "'", str18.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "null(OFF)()"+ "'", str21.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array45);

  }

  @Test
  public void test253() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test253"); }

    com.google.javascript.jscomp.AbstractCompiler abstractCompiler0 = null;
    com.google.javascript.jscomp.FieldCleanupPass fieldCleanupPass1 = new com.google.javascript.jscomp.FieldCleanupPass(abstractCompiler0);
    com.google.javascript.rhino.Node node2 = null;
    com.google.javascript.rhino.Node node3 = null;
    fieldCleanupPass1.process(node2, node3);
    com.google.javascript.rhino.Node node5 = null;
    com.google.javascript.rhino.Node node6 = null;
    fieldCleanupPass1.process(node5, node6);
    com.google.javascript.rhino.Node node8 = null;
    com.google.javascript.rhino.Node node9 = null;
    fieldCleanupPass1.process(node8, node9);
    com.google.javascript.rhino.Node node11 = null;
    com.google.javascript.rhino.Node node12 = null;
    fieldCleanupPass1.process(node11, node12);
    com.google.javascript.rhino.Node node14 = null;
    com.google.javascript.rhino.Node node15 = null;
    fieldCleanupPass1.process(node14, node15);
    com.google.javascript.rhino.Node node17 = null;
    com.google.javascript.rhino.Node node18 = null;
    fieldCleanupPass1.process(node17, node18);
    com.google.javascript.rhino.Node node20 = null;
    com.google.javascript.rhino.Node node21 = null;
    fieldCleanupPass1.process(node20, node21);
    com.google.javascript.rhino.Node node23 = null;
    com.google.javascript.rhino.Node node24 = null;
    fieldCleanupPass1.process(node23, node24);
    com.google.javascript.rhino.Node node26 = null;
    com.google.javascript.rhino.Node node27 = null;
    fieldCleanupPass1.process(node26, node27);
    com.google.javascript.rhino.Node node29 = null;
    com.google.javascript.rhino.Node node30 = null;
    fieldCleanupPass1.process(node29, node30);
    com.google.javascript.rhino.Node node32 = null;
    com.google.javascript.rhino.Node node33 = null;
    fieldCleanupPass1.process(node32, node33);
    com.google.javascript.rhino.Node node35 = null;
    com.google.javascript.rhino.Node node36 = null;
    fieldCleanupPass1.process(node35, node36);
    com.google.javascript.rhino.Node node38 = null;
    com.google.javascript.rhino.Node node39 = null;
    fieldCleanupPass1.process(node38, node39);
    com.google.javascript.rhino.Node node41 = null;
    com.google.javascript.rhino.Node node42 = null;
    fieldCleanupPass1.process(node41, node42);
    com.google.javascript.rhino.Node node44 = null;
    com.google.javascript.rhino.Node node45 = null;
    fieldCleanupPass1.process(node44, node45);
    com.google.javascript.rhino.Node node47 = null;
    com.google.javascript.rhino.Node node48 = null;
    fieldCleanupPass1.process(node47, node48);
    com.google.javascript.rhino.Node node50 = null;
    com.google.javascript.rhino.Node node51 = null;
    fieldCleanupPass1.process(node50, node51);
    com.google.javascript.rhino.Node node53 = null;
    com.google.javascript.rhino.Node node54 = null;
    fieldCleanupPass1.process(node53, node54);
    com.google.javascript.rhino.Node node56 = null;
    com.google.javascript.rhino.Node node57 = null;
    fieldCleanupPass1.process(node56, node57);
    com.google.javascript.rhino.Node node59 = null;
    com.google.javascript.rhino.Node node60 = null;
    fieldCleanupPass1.process(node59, node60);
    com.google.javascript.rhino.Node node62 = null;
    com.google.javascript.rhino.Node node63 = null;
    fieldCleanupPass1.process(node62, node63);
    com.google.javascript.rhino.Node node65 = null;
    com.google.javascript.rhino.Node node66 = null;
    fieldCleanupPass1.process(node65, node66);
    com.google.javascript.rhino.Node node68 = null;
    com.google.javascript.rhino.Node node69 = null;
    // The following exception was thrown during execution in test generation
    try {
    fieldCleanupPass1.hotSwapScript(node68, node69);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test254() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test254"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)(short)100, (int)(short)1, "null(OFF)(null(OFF)(null(OFF)()))");

  }

  @Test
  public void test255() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test255"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = composeWarningsGuard12.enables(diagnosticGroup23);
    com.google.javascript.jscomp.JSError jSError25 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel26 = composeWarningsGuard12.level(jSError25);
    com.google.javascript.jscomp.JSError jSError27 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel28 = composeWarningsGuard12.level(jSError27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard31 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup29, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    boolean b33 = diagnosticGroupPathSuppressingWarningsGuard31.disables(diagnosticGroup32);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup34 = null;
    boolean b35 = diagnosticGroupPathSuppressingWarningsGuard31.disables(diagnosticGroup34);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = diagnosticGroupPathSuppressingWarningsGuard31.disables(diagnosticGroup36);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup38 = null;
    boolean b39 = diagnosticGroupPathSuppressingWarningsGuard31.disables(diagnosticGroup38);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup40 = null;
    boolean b41 = diagnosticGroupPathSuppressingWarningsGuard31.disables(diagnosticGroup40);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup42 = null;
    boolean b43 = diagnosticGroupPathSuppressingWarningsGuard31.enables(diagnosticGroup42);
    java.lang.String str44 = diagnosticGroupPathSuppressingWarningsGuard31.toString();
    java.lang.String str45 = diagnosticGroupPathSuppressingWarningsGuard31.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup46 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard48 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup46, "");
    java.lang.String str49 = diagnosticGroupPathSuppressingWarningsGuard48.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup50 = null;
    boolean b51 = diagnosticGroupPathSuppressingWarningsGuard48.enables(diagnosticGroup50);
    java.lang.String str52 = diagnosticGroupPathSuppressingWarningsGuard48.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup53 = null;
    boolean b54 = diagnosticGroupPathSuppressingWarningsGuard48.enables(diagnosticGroup53);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup55 = null;
    boolean b56 = diagnosticGroupPathSuppressingWarningsGuard48.disables(diagnosticGroup55);
    java.lang.String str57 = diagnosticGroupPathSuppressingWarningsGuard48.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup58 = null;
    boolean b59 = diagnosticGroupPathSuppressingWarningsGuard48.disables(diagnosticGroup58);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup60 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard62 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup60, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup63 = null;
    boolean b64 = diagnosticGroupPathSuppressingWarningsGuard62.disables(diagnosticGroup63);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup65 = null;
    boolean b66 = diagnosticGroupPathSuppressingWarningsGuard62.disables(diagnosticGroup65);
    java.lang.String str67 = diagnosticGroupPathSuppressingWarningsGuard62.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup68 = null;
    boolean b69 = diagnosticGroupPathSuppressingWarningsGuard62.disables(diagnosticGroup68);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup70 = null;
    boolean b71 = diagnosticGroupPathSuppressingWarningsGuard62.enables(diagnosticGroup70);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup72 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard74 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup72, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup75 = null;
    boolean b76 = diagnosticGroupPathSuppressingWarningsGuard74.disables(diagnosticGroup75);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup77 = null;
    boolean b78 = diagnosticGroupPathSuppressingWarningsGuard74.disables(diagnosticGroup77);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup79 = null;
    boolean b80 = diagnosticGroupPathSuppressingWarningsGuard74.disables(diagnosticGroup79);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup81 = null;
    boolean b82 = diagnosticGroupPathSuppressingWarningsGuard74.disables(diagnosticGroup81);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup83 = null;
    boolean b84 = diagnosticGroupPathSuppressingWarningsGuard74.disables(diagnosticGroup83);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup85 = null;
    boolean b86 = diagnosticGroupPathSuppressingWarningsGuard74.enables(diagnosticGroup85);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup87 = null;
    boolean b88 = diagnosticGroupPathSuppressingWarningsGuard74.enables(diagnosticGroup87);
    java.lang.String str89 = diagnosticGroupPathSuppressingWarningsGuard74.toString();
    java.lang.String str90 = diagnosticGroupPathSuppressingWarningsGuard74.toString();
    java.lang.String str91 = diagnosticGroupPathSuppressingWarningsGuard74.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array92 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard12, diagnosticGroupPathSuppressingWarningsGuard31, diagnosticGroupPathSuppressingWarningsGuard48, diagnosticGroupPathSuppressingWarningsGuard62, diagnosticGroupPathSuppressingWarningsGuard74 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard93 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array92);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "null(OFF)(hi!)"+ "'", str44.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "null(OFF)(hi!)"+ "'", str45.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null(OFF)()"+ "'", str49.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "null(OFF)()"+ "'", str52.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str57 + "' != '" + "null(OFF)()"+ "'", str57.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str67 + "' != '" + "null(OFF)(hi!)"+ "'", str67.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b82 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b84 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b86 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b88 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str89 + "' != '" + "null(OFF)(hi!)"+ "'", str89.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str90 + "' != '" + "null(OFF)(hi!)"+ "'", str90.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str91 + "' != '" + "null(OFF)(hi!)"+ "'", str91.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array92);

  }

  @Test
  public void test256() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test256"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel15 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);

  }

  @Test
  public void test257() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test257"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel17 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test258() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test258"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard11.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard11.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard11.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard11.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard22 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup20, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = diagnosticGroupPathSuppressingWarningsGuard22.disables(diagnosticGroup23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = diagnosticGroupPathSuppressingWarningsGuard22.disables(diagnosticGroup25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = diagnosticGroupPathSuppressingWarningsGuard22.disables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = diagnosticGroupPathSuppressingWarningsGuard22.enables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = diagnosticGroupPathSuppressingWarningsGuard22.disables(diagnosticGroup31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    boolean b34 = diagnosticGroupPathSuppressingWarningsGuard22.disables(diagnosticGroup33);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    boolean b36 = diagnosticGroupPathSuppressingWarningsGuard22.enables(diagnosticGroup35);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup37 = null;
    boolean b38 = diagnosticGroupPathSuppressingWarningsGuard22.enables(diagnosticGroup37);
    java.lang.String str39 = diagnosticGroupPathSuppressingWarningsGuard22.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup40 = null;
    boolean b41 = diagnosticGroupPathSuppressingWarningsGuard22.enables(diagnosticGroup40);
    java.lang.String str42 = diagnosticGroupPathSuppressingWarningsGuard22.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array43 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard44 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard44, warningsGuard_array43);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard46 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard44);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array47 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard48 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard48, warningsGuard_array47);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard50 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard48);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array51 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard46, composeWarningsGuard50 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard52 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard52, warningsGuard_array51);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard54 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard52);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard55 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard52);
    com.google.javascript.jscomp.JSError jSError56 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel57 = composeWarningsGuard55.level(jSError56);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup58 = null;
    boolean b59 = composeWarningsGuard55.enables(diagnosticGroup58);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup60 = null;
    boolean b61 = composeWarningsGuard55.enables(diagnosticGroup60);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup62 = null;
    boolean b63 = composeWarningsGuard55.enables(diagnosticGroup62);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup64 = null;
    boolean b65 = composeWarningsGuard55.enables(diagnosticGroup64);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array66 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, composeWarningsGuard11, diagnosticGroupPathSuppressingWarningsGuard22, composeWarningsGuard55 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard67 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array66);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "null(OFF)(hi!)"+ "'", str39.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "null(OFF)(hi!)"+ "'", str42.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array66);

  }

  @Test
  public void test259() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test259"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup17);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array19 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard20 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard20, warningsGuard_array19);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard20);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array23 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard24 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard24, warningsGuard_array23);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard24);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array27 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard22, composeWarningsGuard26 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard28 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28, warningsGuard_array27);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard30 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard31 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard32 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.JSError jSError33 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel34 = composeWarningsGuard32.level(jSError33);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    boolean b36 = composeWarningsGuard32.enables(diagnosticGroup35);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array37 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, composeWarningsGuard32 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard38 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array37);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array37);

  }

  @Test
  public void test260() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test260"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "null(OFF)(hi!)");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError10 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel11 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(null(OFF)(hi!))"+ "'", str9.equals("null(OFF)(null(OFF)(hi!))"));

  }

  @Test
  public void test261() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test261"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard14 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard14.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard14.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b20 = composeWarningsGuard14.disables(diagnosticGroup19);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test262() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test262"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup12);
    java.lang.String str14 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str15 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError16 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel17 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null(OFF)(hi!)"+ "'", str14.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "null(OFF)(hi!)"+ "'", str15.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test263() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test263"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard20.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard20.level(jSError23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test264() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test264"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup8);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array10 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array10);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)()"+ "'", str3.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array10);

  }

  @Test
  public void test265() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test265"); }

    com.google.javascript.jscomp.AbstractCompiler abstractCompiler0 = null;
    com.google.javascript.jscomp.FieldCleanupPass fieldCleanupPass1 = new com.google.javascript.jscomp.FieldCleanupPass(abstractCompiler0);
    com.google.javascript.rhino.Node node2 = null;
    com.google.javascript.rhino.Node node3 = null;
    fieldCleanupPass1.process(node2, node3);
    com.google.javascript.rhino.Node node5 = null;
    com.google.javascript.rhino.Node node6 = null;
    fieldCleanupPass1.process(node5, node6);
    com.google.javascript.rhino.Node node8 = null;
    com.google.javascript.rhino.Node node9 = null;
    fieldCleanupPass1.process(node8, node9);
    com.google.javascript.rhino.Node node11 = null;
    com.google.javascript.rhino.Node node12 = null;
    fieldCleanupPass1.process(node11, node12);
    com.google.javascript.rhino.Node node14 = null;
    com.google.javascript.rhino.Node node15 = null;
    fieldCleanupPass1.process(node14, node15);
    com.google.javascript.rhino.Node node17 = null;
    com.google.javascript.rhino.Node node18 = null;
    fieldCleanupPass1.process(node17, node18);
    com.google.javascript.rhino.Node node20 = null;
    com.google.javascript.rhino.Node node21 = null;
    fieldCleanupPass1.process(node20, node21);
    com.google.javascript.rhino.Node node23 = null;
    com.google.javascript.rhino.Node node24 = null;
    fieldCleanupPass1.process(node23, node24);
    com.google.javascript.rhino.Node node26 = null;
    com.google.javascript.rhino.Node node27 = null;
    fieldCleanupPass1.process(node26, node27);
    com.google.javascript.rhino.Node node29 = null;
    com.google.javascript.rhino.Node node30 = null;
    fieldCleanupPass1.process(node29, node30);
    com.google.javascript.rhino.Node node32 = null;
    com.google.javascript.rhino.Node node33 = null;
    fieldCleanupPass1.process(node32, node33);
    com.google.javascript.rhino.Node node35 = null;
    com.google.javascript.rhino.Node node36 = null;
    fieldCleanupPass1.process(node35, node36);
    com.google.javascript.rhino.Node node38 = null;
    com.google.javascript.rhino.Node node39 = null;
    fieldCleanupPass1.process(node38, node39);
    com.google.javascript.rhino.Node node41 = null;
    com.google.javascript.rhino.Node node42 = null;
    fieldCleanupPass1.process(node41, node42);
    com.google.javascript.rhino.Node node44 = null;
    com.google.javascript.rhino.Node node45 = null;
    fieldCleanupPass1.process(node44, node45);
    com.google.javascript.rhino.Node node47 = null;
    com.google.javascript.rhino.Node node48 = null;
    fieldCleanupPass1.process(node47, node48);
    com.google.javascript.rhino.Node node50 = null;
    com.google.javascript.rhino.Node node51 = null;
    fieldCleanupPass1.process(node50, node51);
    com.google.javascript.rhino.Node node53 = null;
    com.google.javascript.rhino.Node node54 = null;
    fieldCleanupPass1.process(node53, node54);
    com.google.javascript.rhino.Node node56 = null;
    com.google.javascript.rhino.Node node57 = null;
    fieldCleanupPass1.process(node56, node57);
    com.google.javascript.rhino.Node node59 = null;
    com.google.javascript.rhino.Node node60 = null;
    fieldCleanupPass1.process(node59, node60);
    com.google.javascript.rhino.Node node62 = null;
    com.google.javascript.rhino.Node node63 = null;
    fieldCleanupPass1.process(node62, node63);
    com.google.javascript.rhino.Node node65 = null;
    com.google.javascript.rhino.Node node66 = null;
    // The following exception was thrown during execution in test generation
    try {
    fieldCleanupPass1.hotSwapScript(node65, node66);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test266() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test266"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup24);
    com.google.javascript.jscomp.JSError jSError26 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel27 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError26);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);

  }

  @Test
  public void test267() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test267"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = composeWarningsGuard3.enables(diagnosticGroup4);
    com.google.javascript.jscomp.JSError jSError6 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel7 = composeWarningsGuard3.level(jSError6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array10 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard11 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard11, warningsGuard_array10);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array14 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard15 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard15, warningsGuard_array14);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard17 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard15);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array18 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard13, composeWarningsGuard17 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard19 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard19, warningsGuard_array18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard19);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = composeWarningsGuard22.enables(diagnosticGroup23);
    com.google.javascript.jscomp.JSError jSError25 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel26 = composeWarningsGuard22.level(jSError25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = composeWarningsGuard22.enables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = composeWarningsGuard22.enables(diagnosticGroup29);
    com.google.javascript.jscomp.JSError jSError31 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel32 = composeWarningsGuard22.level(jSError31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    boolean b34 = composeWarningsGuard22.enables(diagnosticGroup33);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard37 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup35, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup38 = null;
    boolean b39 = diagnosticGroupPathSuppressingWarningsGuard37.disables(diagnosticGroup38);
    java.lang.String str40 = diagnosticGroupPathSuppressingWarningsGuard37.toString();
    java.lang.String str41 = diagnosticGroupPathSuppressingWarningsGuard37.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup42 = null;
    boolean b43 = diagnosticGroupPathSuppressingWarningsGuard37.enables(diagnosticGroup42);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup44 = null;
    boolean b45 = diagnosticGroupPathSuppressingWarningsGuard37.disables(diagnosticGroup44);
    java.lang.String str46 = diagnosticGroupPathSuppressingWarningsGuard37.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup47 = null;
    boolean b48 = diagnosticGroupPathSuppressingWarningsGuard37.enables(diagnosticGroup47);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup49 = null;
    boolean b50 = diagnosticGroupPathSuppressingWarningsGuard37.enables(diagnosticGroup49);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array51 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard22, diagnosticGroupPathSuppressingWarningsGuard37 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard52 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array51);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "null(OFF)(hi!)"+ "'", str40.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "null(OFF)(hi!)"+ "'", str41.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "null(OFF)(hi!)"+ "'", str46.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array51);

  }

  @Test
  public void test268() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test268"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup10);
    java.lang.String str12 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel20 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError19);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "null(OFF)(hi!)"+ "'", str12.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test269() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test269"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.JSError jSError25 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel26 = composeWarningsGuard12.level(jSError25);
    com.google.javascript.jscomp.JSError jSError27 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel28 = composeWarningsGuard12.level(jSError27);
    com.google.javascript.jscomp.JSError jSError29 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel30 = composeWarningsGuard12.level(jSError29);
    com.google.javascript.jscomp.JSError jSError31 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel32 = composeWarningsGuard12.level(jSError31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b34 = composeWarningsGuard12.disables(diagnosticGroup33);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel32);

  }

  @Test
  public void test270() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test270"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(10, (int)(short)-1, "hi!");
    int i4 = simpleRegion3.getEndingLineNumber();
    int i5 = simpleRegion3.getEndingLineNumber();
    int i6 = simpleRegion3.getBeginningLineNumber();
    int i7 = simpleRegion3.getEndingLineNumber();
    int i8 = simpleRegion3.getBeginningLineNumber();
    int i9 = simpleRegion3.getEndingLineNumber();
    int i10 = simpleRegion3.getEndingLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == (-1));

  }

  @Test
  public void test271() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test271"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard17 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup15, "");
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard17.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard17.enables(diagnosticGroup19);
    java.lang.String str21 = diagnosticGroupPathSuppressingWarningsGuard17.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard17.enables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup24);
    java.lang.String str26 = diagnosticGroupPathSuppressingWarningsGuard17.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup29);
    java.lang.String str31 = diagnosticGroupPathSuppressingWarningsGuard17.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard34 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup32, "null(OFF)()");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    boolean b36 = diagnosticGroupPathSuppressingWarningsGuard34.disables(diagnosticGroup35);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup37 = null;
    boolean b38 = diagnosticGroupPathSuppressingWarningsGuard34.enables(diagnosticGroup37);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup39 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard41 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup39, "hi!");
    java.lang.String str42 = diagnosticGroupPathSuppressingWarningsGuard41.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup43 = null;
    boolean b44 = diagnosticGroupPathSuppressingWarningsGuard41.enables(diagnosticGroup43);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup45 = null;
    boolean b46 = diagnosticGroupPathSuppressingWarningsGuard41.enables(diagnosticGroup45);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup47 = null;
    boolean b48 = diagnosticGroupPathSuppressingWarningsGuard41.enables(diagnosticGroup47);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup49 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard51 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup49, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup52 = null;
    boolean b53 = diagnosticGroupPathSuppressingWarningsGuard51.disables(diagnosticGroup52);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup54 = null;
    boolean b55 = diagnosticGroupPathSuppressingWarningsGuard51.disables(diagnosticGroup54);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup56 = null;
    boolean b57 = diagnosticGroupPathSuppressingWarningsGuard51.disables(diagnosticGroup56);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup58 = null;
    boolean b59 = diagnosticGroupPathSuppressingWarningsGuard51.disables(diagnosticGroup58);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup60 = null;
    boolean b61 = diagnosticGroupPathSuppressingWarningsGuard51.disables(diagnosticGroup60);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup62 = null;
    boolean b63 = diagnosticGroupPathSuppressingWarningsGuard51.disables(diagnosticGroup62);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array64 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard65 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b66 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard65, warningsGuard_array64);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard67 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard65);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array68 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard69 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard69, warningsGuard_array68);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard71 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard69);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array72 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard67, composeWarningsGuard71 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard73 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b74 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard73, warningsGuard_array72);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard75 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard73);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard76 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard73);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup77 = null;
    boolean b78 = composeWarningsGuard76.enables(diagnosticGroup77);
    com.google.javascript.jscomp.JSError jSError79 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel80 = composeWarningsGuard76.level(jSError79);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup81 = null;
    boolean b82 = composeWarningsGuard76.enables(diagnosticGroup81);
    com.google.javascript.jscomp.JSError jSError83 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel84 = composeWarningsGuard76.level(jSError83);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array85 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard17, diagnosticGroupPathSuppressingWarningsGuard34, diagnosticGroupPathSuppressingWarningsGuard41, diagnosticGroupPathSuppressingWarningsGuard51, composeWarningsGuard76 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard86 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array85);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)()"+ "'", str18.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "null(OFF)()"+ "'", str21.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null(OFF)()"+ "'", str26.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null(OFF)()"+ "'", str31.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "null(OFF)(hi!)"+ "'", str42.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b82 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array85);

  }

  @Test
  public void test272() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test272"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard8 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard9 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str14 = composeWarningsGuard13.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);

  }

  @Test
  public void test273() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test273"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup16);
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard21 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup19, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard21.disables(diagnosticGroup22);
    java.lang.String str24 = diagnosticGroupPathSuppressingWarningsGuard21.toString();
    java.lang.String str25 = diagnosticGroupPathSuppressingWarningsGuard21.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard21.enables(diagnosticGroup26);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = diagnosticGroupPathSuppressingWarningsGuard21.enables(diagnosticGroup28);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = diagnosticGroupPathSuppressingWarningsGuard21.disables(diagnosticGroup30);
    java.lang.String str32 = diagnosticGroupPathSuppressingWarningsGuard21.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    boolean b34 = diagnosticGroupPathSuppressingWarningsGuard21.enables(diagnosticGroup33);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    boolean b36 = diagnosticGroupPathSuppressingWarningsGuard21.enables(diagnosticGroup35);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup37 = null;
    boolean b38 = diagnosticGroupPathSuppressingWarningsGuard21.disables(diagnosticGroup37);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup39 = null;
    boolean b40 = diagnosticGroupPathSuppressingWarningsGuard21.disables(diagnosticGroup39);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup41 = null;
    boolean b42 = diagnosticGroupPathSuppressingWarningsGuard21.enables(diagnosticGroup41);
    java.lang.String str43 = diagnosticGroupPathSuppressingWarningsGuard21.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array44 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard21 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard45 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array44);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "null(OFF)(hi!)"+ "'", str24.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null(OFF)(hi!)"+ "'", str25.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null(OFF)(hi!)"+ "'", str32.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "null(OFF)(hi!)"+ "'", str43.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array44);

  }

  @Test
  public void test274() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test274"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup16);
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str19 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel23 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError22);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null(OFF)(hi!)"+ "'", str19.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);

  }

  @Test
  public void test275() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test275"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup6);
    java.lang.String str8 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError10 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel11 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)(hi!)"+ "'", str3.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null(OFF)(hi!)"+ "'", str8.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test276() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test276"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)'4', (int)(byte)10, "hi!");
    int i4 = simpleRegion3.getBeginningLineNumber();
    java.lang.String str5 = simpleRegion3.getSourceExcerpt();
    int i6 = simpleRegion3.getBeginningLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!"+ "'", str5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 52);

  }

  @Test
  public void test277() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test277"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = composeWarningsGuard7.enables(diagnosticGroup8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard7.enables(diagnosticGroup10);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str12 = composeWarningsGuard7.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test278() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test278"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(52, (int)(byte)-1, "null(OFF)(null(OFF)(null(OFF)(hi!)))");

  }

  @Test
  public void test279() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test279"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(0, (int)(byte)10, "");
    int i4 = simpleRegion3.getEndingLineNumber();
    int i5 = simpleRegion3.getEndingLineNumber();
    int i6 = simpleRegion3.getBeginningLineNumber();
    int i7 = simpleRegion3.getBeginningLineNumber();
    int i8 = simpleRegion3.getBeginningLineNumber();
    java.lang.String str9 = simpleRegion3.getSourceExcerpt();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + ""+ "'", str9.equals(""));

  }

  @Test
  public void test280() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test280"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel18 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);

  }

  @Test
  public void test281() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test281"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard7.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard7.enables(diagnosticGroup10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard7.level(jSError12);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str14 = composeWarningsGuard7.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);

  }

  @Test
  public void test282() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test282"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)(short)100, 35, "null(OFF)()");
    java.lang.String str4 = simpleRegion3.getSourceExcerpt();
    int i5 = simpleRegion3.getBeginningLineNumber();
    int i6 = simpleRegion3.getBeginningLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null(OFF)()"+ "'", str4.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 100);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 100);

  }

  @Test
  public void test283() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test283"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(0, (int)'#', "");
    int i4 = simpleRegion3.getEndingLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 35);

  }

  @Test
  public void test284() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test284"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel24 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test285() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test285"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard12.level(jSError13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel22 = composeWarningsGuard12.level(jSError21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.JSError jSError25 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel26 = composeWarningsGuard12.level(jSError25);
    com.google.javascript.jscomp.JSError jSError27 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel28 = composeWarningsGuard12.level(jSError27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = composeWarningsGuard12.enables(diagnosticGroup29);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str31 = composeWarningsGuard12.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test286() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test286"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array15 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array15);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array15);

  }

  @Test
  public void test287() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test287"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard13.level(jSError14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard13.level(jSError16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard13.level(jSError18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = composeWarningsGuard13.enables(diagnosticGroup20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel23 = composeWarningsGuard13.level(jSError22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b25 = composeWarningsGuard13.disables(diagnosticGroup24);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel23);

  }

  @Test
  public void test288() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test288"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup17);
    java.lang.String str19 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup24);
    com.google.javascript.jscomp.JSError jSError26 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel27 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError26);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null(OFF)(hi!)"+ "'", str19.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);

  }

  @Test
  public void test289() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test289"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard14 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard15 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard16.enables(diagnosticGroup17);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str19 = composeWarningsGuard16.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test290() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test290"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup10);
    java.lang.String str12 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard14 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array13);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)(hi!)"+ "'", str3.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "null(OFF)(hi!)"+ "'", str12.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);

  }

  @Test
  public void test291() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test291"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    java.lang.String str16 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup17);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array19 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard20 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard20, warningsGuard_array19);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard20);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array23 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard24 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard24, warningsGuard_array23);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard24);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array27 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard22, composeWarningsGuard26 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard28 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28, warningsGuard_array27);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard30 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard31 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.JSError jSError32 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel33 = composeWarningsGuard31.level(jSError32);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup34 = null;
    boolean b35 = composeWarningsGuard31.enables(diagnosticGroup34);
    com.google.javascript.jscomp.JSError jSError36 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel37 = composeWarningsGuard31.level(jSError36);
    com.google.javascript.jscomp.JSError jSError38 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel39 = composeWarningsGuard31.level(jSError38);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup40 = null;
    boolean b41 = composeWarningsGuard31.enables(diagnosticGroup40);
    com.google.javascript.jscomp.JSError jSError42 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel43 = composeWarningsGuard31.level(jSError42);
    com.google.javascript.jscomp.JSError jSError44 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel45 = composeWarningsGuard31.level(jSError44);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array46 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, composeWarningsGuard31 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard47 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array46);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null(OFF)(hi!)"+ "'", str16.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array46);

  }

  @Test
  public void test292() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test292"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.JSError jSError6 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel7 = composeWarningsGuard3.level(jSError6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = composeWarningsGuard3.enables(diagnosticGroup8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard3.level(jSError10);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str12 = composeWarningsGuard3.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);

  }

  @Test
  public void test293() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test293"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(100, 100, "hi!");
    int i4 = simpleRegion3.getEndingLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 100);

  }

  @Test
  public void test294() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test294"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard27 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard28 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard29 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard30 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard31 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard32 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard33 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard34 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str35 = composeWarningsGuard34.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);

  }

  @Test
  public void test295() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test295"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard13.enables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard13.level(jSError16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard13.level(jSError18);
    com.google.javascript.jscomp.JSError jSError20 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel21 = composeWarningsGuard13.level(jSError20);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str22 = composeWarningsGuard13.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel21);

  }

  @Test
  public void test296() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test296"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.JSError jSError5 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel6 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);

  }

  @Test
  public void test297() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test297"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.JSError jSError6 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel7 = composeWarningsGuard3.level(jSError6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard3.level(jSError14);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str16 = composeWarningsGuard3.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);

  }

  @Test
  public void test298() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test298"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard14 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard15 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard15.level(jSError16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard15.level(jSError18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = composeWarningsGuard15.enables(diagnosticGroup20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel23 = composeWarningsGuard15.level(jSError22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b25 = composeWarningsGuard15.disables(diagnosticGroup24);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel23);

  }

  @Test
  public void test299() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test299"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str7 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel13 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null(OFF)(hi!)"+ "'", str7.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test300() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test300"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard12.level(jSError13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel22 = composeWarningsGuard12.level(jSError21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.JSError jSError25 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel26 = composeWarningsGuard12.level(jSError25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = composeWarningsGuard12.enables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = composeWarningsGuard12.enables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b32 = composeWarningsGuard12.disables(diagnosticGroup31);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test301() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test301"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "null(OFF)(hi!)");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard9 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup7, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard9.disables(diagnosticGroup10);
    java.lang.String str12 = diagnosticGroupPathSuppressingWarningsGuard9.toString();
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard9.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard9.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard9.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard9.disables(diagnosticGroup18);
    java.lang.String str20 = diagnosticGroupPathSuppressingWarningsGuard9.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard9.enables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = diagnosticGroupPathSuppressingWarningsGuard9.enables(diagnosticGroup23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = diagnosticGroupPathSuppressingWarningsGuard9.disables(diagnosticGroup25);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array27 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard28 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28, warningsGuard_array27);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard30 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard31 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard32 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard33 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard34 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard35 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard36 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup37 = null;
    boolean b38 = composeWarningsGuard36.enables(diagnosticGroup37);
    com.google.javascript.jscomp.JSError jSError39 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel40 = composeWarningsGuard36.level(jSError39);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array41 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard42 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard42, warningsGuard_array41);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard44 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard42);
    com.google.javascript.jscomp.JSError jSError45 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel46 = composeWarningsGuard44.level(jSError45);
    com.google.javascript.jscomp.JSError jSError47 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel48 = composeWarningsGuard44.level(jSError47);
    com.google.javascript.jscomp.JSError jSError49 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel50 = composeWarningsGuard44.level(jSError49);
    com.google.javascript.jscomp.JSError jSError51 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel52 = composeWarningsGuard44.level(jSError51);
    com.google.javascript.jscomp.JSError jSError53 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel54 = composeWarningsGuard44.level(jSError53);
    com.google.javascript.jscomp.JSError jSError55 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel56 = composeWarningsGuard44.level(jSError55);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array57 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard9, composeWarningsGuard36, composeWarningsGuard44 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard58 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array57);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "null(OFF)(hi!)"+ "'", str12.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "null(OFF)(hi!)"+ "'", str20.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array57);

  }

  @Test
  public void test302() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test302"); }

    com.google.javascript.jscomp.AbstractCompiler abstractCompiler0 = null;
    com.google.javascript.jscomp.FieldCleanupPass fieldCleanupPass1 = new com.google.javascript.jscomp.FieldCleanupPass(abstractCompiler0);
    com.google.javascript.rhino.Node node2 = null;
    com.google.javascript.rhino.Node node3 = null;
    fieldCleanupPass1.process(node2, node3);
    com.google.javascript.rhino.Node node5 = null;
    com.google.javascript.rhino.Node node6 = null;
    fieldCleanupPass1.process(node5, node6);
    com.google.javascript.rhino.Node node8 = null;
    com.google.javascript.rhino.Node node9 = null;
    fieldCleanupPass1.process(node8, node9);
    com.google.javascript.rhino.Node node11 = null;
    com.google.javascript.rhino.Node node12 = null;
    fieldCleanupPass1.process(node11, node12);
    com.google.javascript.rhino.Node node14 = null;
    com.google.javascript.rhino.Node node15 = null;
    fieldCleanupPass1.process(node14, node15);
    com.google.javascript.rhino.Node node17 = null;
    com.google.javascript.rhino.Node node18 = null;
    fieldCleanupPass1.process(node17, node18);
    com.google.javascript.rhino.Node node20 = null;
    com.google.javascript.rhino.Node node21 = null;
    fieldCleanupPass1.process(node20, node21);
    com.google.javascript.rhino.Node node23 = null;
    com.google.javascript.rhino.Node node24 = null;
    fieldCleanupPass1.process(node23, node24);
    com.google.javascript.rhino.Node node26 = null;
    com.google.javascript.rhino.Node node27 = null;
    fieldCleanupPass1.process(node26, node27);
    com.google.javascript.rhino.Node node29 = null;
    com.google.javascript.rhino.Node node30 = null;
    fieldCleanupPass1.process(node29, node30);
    com.google.javascript.rhino.Node node32 = null;
    com.google.javascript.rhino.Node node33 = null;
    fieldCleanupPass1.process(node32, node33);
    com.google.javascript.rhino.Node node35 = null;
    com.google.javascript.rhino.Node node36 = null;
    fieldCleanupPass1.process(node35, node36);
    com.google.javascript.rhino.Node node38 = null;
    com.google.javascript.rhino.Node node39 = null;
    fieldCleanupPass1.process(node38, node39);
    com.google.javascript.rhino.Node node41 = null;
    com.google.javascript.rhino.Node node42 = null;
    fieldCleanupPass1.process(node41, node42);
    com.google.javascript.rhino.Node node44 = null;
    com.google.javascript.rhino.Node node45 = null;
    fieldCleanupPass1.process(node44, node45);
    com.google.javascript.rhino.Node node47 = null;
    com.google.javascript.rhino.Node node48 = null;
    fieldCleanupPass1.process(node47, node48);
    com.google.javascript.rhino.Node node50 = null;
    com.google.javascript.rhino.Node node51 = null;
    fieldCleanupPass1.process(node50, node51);
    com.google.javascript.rhino.Node node53 = null;
    com.google.javascript.rhino.Node node54 = null;
    fieldCleanupPass1.process(node53, node54);
    com.google.javascript.rhino.Node node56 = null;
    com.google.javascript.rhino.Node node57 = null;
    fieldCleanupPass1.process(node56, node57);
    com.google.javascript.rhino.Node node59 = null;
    com.google.javascript.rhino.Node node60 = null;
    fieldCleanupPass1.process(node59, node60);
    com.google.javascript.rhino.Node node62 = null;
    com.google.javascript.rhino.Node node63 = null;
    fieldCleanupPass1.process(node62, node63);
    com.google.javascript.rhino.Node node65 = null;
    com.google.javascript.rhino.Node node66 = null;
    fieldCleanupPass1.process(node65, node66);
    com.google.javascript.rhino.Node node68 = null;
    com.google.javascript.rhino.Node node69 = null;
    fieldCleanupPass1.process(node68, node69);
    com.google.javascript.rhino.Node node71 = null;
    com.google.javascript.rhino.Node node72 = null;
    fieldCleanupPass1.process(node71, node72);
    com.google.javascript.rhino.Node node74 = null;
    com.google.javascript.rhino.Node node75 = null;
    // The following exception was thrown during execution in test generation
    try {
    fieldCleanupPass1.hotSwapScript(node74, node75);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test303() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test303"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup16);
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError19 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel20 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError19);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test304() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test304"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup5);
    java.lang.String str7 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard14 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup12, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard14.disables(diagnosticGroup15);
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard14.toString();
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard14.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard14.disables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard14.disables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = diagnosticGroupPathSuppressingWarningsGuard14.enables(diagnosticGroup23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = diagnosticGroupPathSuppressingWarningsGuard14.disables(diagnosticGroup25);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array27 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard28 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28, warningsGuard_array27);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard30 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array31 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard32 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard32, warningsGuard_array31);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard34 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard32);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array35 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard30, composeWarningsGuard34 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard36 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard36, warningsGuard_array35);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard38 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard36);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard39 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard36);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard40 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard36);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard41 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard36);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard42 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard36);
    com.google.javascript.jscomp.JSError jSError43 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel44 = composeWarningsGuard42.level(jSError43);
    com.google.javascript.jscomp.JSError jSError45 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel46 = composeWarningsGuard42.level(jSError45);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup47 = null;
    boolean b48 = composeWarningsGuard42.enables(diagnosticGroup47);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array49 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard14, composeWarningsGuard42 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard50 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array49);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null(OFF)()"+ "'", str7.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array49);

  }

  @Test
  public void test305() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test305"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.JSError jSError11 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel12 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test306() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test306"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = composeWarningsGuard12.enables(diagnosticGroup23);
    com.google.javascript.jscomp.JSError jSError25 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel26 = composeWarningsGuard12.level(jSError25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b28 = composeWarningsGuard12.disables(diagnosticGroup27);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel26);

  }

  @Test
  public void test307() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test307"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str14 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str15 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel19 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null(OFF)(hi!)"+ "'", str14.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "null(OFF)(hi!)"+ "'", str15.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test308() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test308"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup6);
    java.lang.String str8 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array10 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array10);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)(hi!)"+ "'", str3.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "null(OFF)(hi!)"+ "'", str8.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array10);

  }

  @Test
  public void test309() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test309"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard14 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard15 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard15.level(jSError16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard15.level(jSError18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = composeWarningsGuard15.enables(diagnosticGroup20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel23 = composeWarningsGuard15.level(jSError22);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str24 = composeWarningsGuard15.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel23);

  }

  @Test
  public void test310() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test310"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str19 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup22);
    java.lang.String str24 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str25 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str26 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError27 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel28 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError27);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null(OFF)(hi!)"+ "'", str19.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "null(OFF)(hi!)"+ "'", str24.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null(OFF)(hi!)"+ "'", str25.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null(OFF)(hi!)"+ "'", str26.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test311() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test311"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard14 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard15 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard15.level(jSError16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard15.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b21 = composeWarningsGuard15.disables(diagnosticGroup20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);

  }

  @Test
  public void test312() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test312"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard3.level(jSError10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str14 = composeWarningsGuard3.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);

  }

  @Test
  public void test313() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test313"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard27 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = composeWarningsGuard27.enables(diagnosticGroup28);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b31 = composeWarningsGuard27.disables(diagnosticGroup30);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);

  }

  @Test
  public void test314() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test314"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    java.lang.String str16 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array18 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard19 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard19, warningsGuard_array18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard24 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup22, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array25 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard26 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard26, warningsGuard_array25);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard28 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard26);
    com.google.javascript.jscomp.JSError jSError29 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel30 = composeWarningsGuard28.level(jSError29);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array31 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard32 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard32, warningsGuard_array31);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard34 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard32);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array35 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard21, diagnosticGroupPathSuppressingWarningsGuard24, composeWarningsGuard28, composeWarningsGuard34 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard36 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard36, warningsGuard_array35);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard38 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard36);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard39 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard36);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard40 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard36);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard41 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard36);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup42 = null;
    boolean b43 = composeWarningsGuard41.enables(diagnosticGroup42);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup44 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard46 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup44, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup47 = null;
    boolean b48 = diagnosticGroupPathSuppressingWarningsGuard46.disables(diagnosticGroup47);
    java.lang.String str49 = diagnosticGroupPathSuppressingWarningsGuard46.toString();
    java.lang.String str50 = diagnosticGroupPathSuppressingWarningsGuard46.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup51 = null;
    boolean b52 = diagnosticGroupPathSuppressingWarningsGuard46.enables(diagnosticGroup51);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup53 = null;
    boolean b54 = diagnosticGroupPathSuppressingWarningsGuard46.enables(diagnosticGroup53);
    java.lang.String str55 = diagnosticGroupPathSuppressingWarningsGuard46.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup56 = null;
    boolean b57 = diagnosticGroupPathSuppressingWarningsGuard46.enables(diagnosticGroup56);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup58 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard60 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup58, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup61 = null;
    boolean b62 = diagnosticGroupPathSuppressingWarningsGuard60.disables(diagnosticGroup61);
    java.lang.String str63 = diagnosticGroupPathSuppressingWarningsGuard60.toString();
    java.lang.String str64 = diagnosticGroupPathSuppressingWarningsGuard60.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup65 = null;
    boolean b66 = diagnosticGroupPathSuppressingWarningsGuard60.enables(diagnosticGroup65);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup67 = null;
    boolean b68 = diagnosticGroupPathSuppressingWarningsGuard60.enables(diagnosticGroup67);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup69 = null;
    boolean b70 = diagnosticGroupPathSuppressingWarningsGuard60.disables(diagnosticGroup69);
    java.lang.String str71 = diagnosticGroupPathSuppressingWarningsGuard60.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup72 = null;
    boolean b73 = diagnosticGroupPathSuppressingWarningsGuard60.disables(diagnosticGroup72);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup74 = null;
    boolean b75 = diagnosticGroupPathSuppressingWarningsGuard60.enables(diagnosticGroup74);
    java.lang.String str76 = diagnosticGroupPathSuppressingWarningsGuard60.toString();
    java.lang.String str77 = diagnosticGroupPathSuppressingWarningsGuard60.toString();
    java.lang.String str78 = diagnosticGroupPathSuppressingWarningsGuard60.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup79 = null;
    boolean b80 = diagnosticGroupPathSuppressingWarningsGuard60.enables(diagnosticGroup79);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array81 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, composeWarningsGuard41, diagnosticGroupPathSuppressingWarningsGuard46, diagnosticGroupPathSuppressingWarningsGuard60 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard82 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array81);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null(OFF)(hi!)"+ "'", str16.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "null(OFF)(hi!)"+ "'", str49.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "null(OFF)(hi!)"+ "'", str50.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "null(OFF)(hi!)"+ "'", str55.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str63 + "' != '" + "null(OFF)(hi!)"+ "'", str63.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "null(OFF)(hi!)"+ "'", str64.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str71 + "' != '" + "null(OFF)(hi!)"+ "'", str71.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str76 + "' != '" + "null(OFF)(hi!)"+ "'", str76.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str77 + "' != '" + "null(OFF)(hi!)"+ "'", str77.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str78 + "' != '" + "null(OFF)(hi!)"+ "'", str78.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array81);

  }

  @Test
  public void test315() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test315"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup12);
    java.lang.String str14 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError15 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel16 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null(OFF)(hi!)"+ "'", str14.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test316() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test316"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel19 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test317() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test317"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard12 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup10, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard12.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard12.disables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard12.disables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard12.enables(diagnosticGroup21);
    java.lang.String str23 = diagnosticGroupPathSuppressingWarningsGuard12.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard12.disables(diagnosticGroup24);
    java.lang.String str26 = diagnosticGroupPathSuppressingWarningsGuard12.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard29 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup27, "");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = diagnosticGroupPathSuppressingWarningsGuard29.enables(diagnosticGroup30);
    java.lang.String str32 = diagnosticGroupPathSuppressingWarningsGuard29.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    boolean b34 = diagnosticGroupPathSuppressingWarningsGuard29.disables(diagnosticGroup33);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array35 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard12, diagnosticGroupPathSuppressingWarningsGuard29 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard36 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array35);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "null(OFF)(hi!)"+ "'", str23.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null(OFF)(hi!)"+ "'", str26.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null(OFF)()"+ "'", str32.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array35);

  }

  @Test
  public void test318() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test318"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard27 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard28 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard29 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard30 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard31 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard32 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard33 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str34 = composeWarningsGuard33.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);

  }

  @Test
  public void test319() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test319"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard3.enables(diagnosticGroup12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard3.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard3.enables(diagnosticGroup16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard3.level(jSError18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b21 = composeWarningsGuard3.disables(diagnosticGroup20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);

  }

  @Test
  public void test320() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test320"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.JSError jSError25 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel26 = composeWarningsGuard12.level(jSError25);
    com.google.javascript.jscomp.JSError jSError27 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel28 = composeWarningsGuard12.level(jSError27);
    com.google.javascript.jscomp.JSError jSError29 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel30 = composeWarningsGuard12.level(jSError29);
    com.google.javascript.jscomp.JSError jSError31 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel32 = composeWarningsGuard12.level(jSError31);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str33 = composeWarningsGuard12.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel32);

  }

  @Test
  public void test321() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test321"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup4);
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.JSError jSError13 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel14 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)()"+ "'", str3.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)()"+ "'", str6.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test322() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test322"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard24 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup22, "");
    java.lang.String str25 = diagnosticGroupPathSuppressingWarningsGuard24.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard24.enables(diagnosticGroup26);
    java.lang.String str28 = diagnosticGroupPathSuppressingWarningsGuard24.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = diagnosticGroupPathSuppressingWarningsGuard24.enables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = diagnosticGroupPathSuppressingWarningsGuard24.disables(diagnosticGroup31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    boolean b34 = diagnosticGroupPathSuppressingWarningsGuard24.disables(diagnosticGroup33);
    java.lang.String str35 = diagnosticGroupPathSuppressingWarningsGuard24.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = diagnosticGroupPathSuppressingWarningsGuard24.disables(diagnosticGroup36);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup38 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard40 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup38, "null(OFF)()");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup41 = null;
    boolean b42 = diagnosticGroupPathSuppressingWarningsGuard40.disables(diagnosticGroup41);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup43 = null;
    boolean b44 = diagnosticGroupPathSuppressingWarningsGuard40.disables(diagnosticGroup43);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup45 = null;
    boolean b46 = diagnosticGroupPathSuppressingWarningsGuard40.enables(diagnosticGroup45);
    java.lang.String str47 = diagnosticGroupPathSuppressingWarningsGuard40.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array48 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard24, diagnosticGroupPathSuppressingWarningsGuard40 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard49 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array48);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null(OFF)()"+ "'", str25.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "null(OFF)()"+ "'", str28.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null(OFF)()"+ "'", str35.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "null(OFF)(null(OFF)())"+ "'", str47.equals("null(OFF)(null(OFF)())"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array48);

  }

  @Test
  public void test323() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test323"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "null(OFF)(null(OFF)())");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array3 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array3);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array3);

  }

  @Test
  public void test324() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test324"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = composeWarningsGuard3.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard3.level(jSError10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard3.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b17 = composeWarningsGuard3.disables(diagnosticGroup16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);

  }

  @Test
  public void test325() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test325"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup20);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array22 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array22);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array22);

  }

  @Test
  public void test326() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test326"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = composeWarningsGuard23.enables(diagnosticGroup24);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = composeWarningsGuard23.enables(diagnosticGroup26);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = composeWarningsGuard23.enables(diagnosticGroup28);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str30 = composeWarningsGuard23.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);

  }

  @Test
  public void test327() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test327"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(1, (int)(short)10, "");
    int i4 = simpleRegion3.getBeginningLineNumber();
    java.lang.String str5 = simpleRegion3.getSourceExcerpt();
    int i6 = simpleRegion3.getEndingLineNumber();
    int i7 = simpleRegion3.getEndingLineNumber();
    java.lang.String str8 = simpleRegion3.getSourceExcerpt();
    java.lang.String str9 = simpleRegion3.getSourceExcerpt();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + ""+ "'", str5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + ""+ "'", str8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + ""+ "'", str9.equals(""));

  }

  @Test
  public void test328() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test328"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard10 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup8, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard10.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard10.toString();
    java.lang.String str14 = diagnosticGroupPathSuppressingWarningsGuard10.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard10.disables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard10.enables(diagnosticGroup17);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array19 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard20 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard20, warningsGuard_array19);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard20);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array23 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard24 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard24, warningsGuard_array23);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard24);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array27 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard22, composeWarningsGuard26 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard28 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28, warningsGuard_array27);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard30 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard31 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    boolean b33 = composeWarningsGuard31.enables(diagnosticGroup32);
    com.google.javascript.jscomp.JSError jSError34 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel35 = composeWarningsGuard31.level(jSError34);
    com.google.javascript.jscomp.JSError jSError36 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel37 = composeWarningsGuard31.level(jSError36);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup38 = null;
    boolean b39 = composeWarningsGuard31.enables(diagnosticGroup38);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup40 = null;
    boolean b41 = composeWarningsGuard31.enables(diagnosticGroup40);
    com.google.javascript.jscomp.JSError jSError42 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel43 = composeWarningsGuard31.level(jSError42);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup44 = null;
    boolean b45 = composeWarningsGuard31.enables(diagnosticGroup44);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup46 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard48 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup46, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup49 = null;
    boolean b50 = diagnosticGroupPathSuppressingWarningsGuard48.disables(diagnosticGroup49);
    java.lang.String str51 = diagnosticGroupPathSuppressingWarningsGuard48.toString();
    java.lang.String str52 = diagnosticGroupPathSuppressingWarningsGuard48.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup53 = null;
    boolean b54 = diagnosticGroupPathSuppressingWarningsGuard48.enables(diagnosticGroup53);
    java.lang.String str55 = diagnosticGroupPathSuppressingWarningsGuard48.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup56 = null;
    boolean b57 = diagnosticGroupPathSuppressingWarningsGuard48.disables(diagnosticGroup56);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup58 = null;
    boolean b59 = diagnosticGroupPathSuppressingWarningsGuard48.disables(diagnosticGroup58);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup60 = null;
    boolean b61 = diagnosticGroupPathSuppressingWarningsGuard48.enables(diagnosticGroup60);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array62 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard10, composeWarningsGuard31, diagnosticGroupPathSuppressingWarningsGuard48 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard63 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array62);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null(OFF)(hi!)"+ "'", str14.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "null(OFF)(hi!)"+ "'", str51.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "null(OFF)(hi!)"+ "'", str52.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "null(OFF)(hi!)"+ "'", str55.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array62);

  }

  @Test
  public void test329() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test329"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard14 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard15 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard17 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str18 = composeWarningsGuard17.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);

  }

  @Test
  public void test330() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test330"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup16);
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard23 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup21, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard23.disables(diagnosticGroup24);
    java.lang.String str26 = diagnosticGroupPathSuppressingWarningsGuard23.toString();
    java.lang.String str27 = diagnosticGroupPathSuppressingWarningsGuard23.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = diagnosticGroupPathSuppressingWarningsGuard23.disables(diagnosticGroup28);
    java.lang.String str30 = diagnosticGroupPathSuppressingWarningsGuard23.toString();
    java.lang.String str31 = diagnosticGroupPathSuppressingWarningsGuard23.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    boolean b33 = diagnosticGroupPathSuppressingWarningsGuard23.disables(diagnosticGroup32);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array34 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard23 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard35 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array34);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null(OFF)(hi!)"+ "'", str26.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null(OFF)(hi!)"+ "'", str27.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null(OFF)(hi!)"+ "'", str30.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null(OFF)(hi!)"+ "'", str31.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array34);

  }

  @Test
  public void test331() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test331"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel17 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test332() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test332"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.JSError jSError6 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel7 = composeWarningsGuard3.level(jSError6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard3.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard3.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard3.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b21 = composeWarningsGuard3.disables(diagnosticGroup20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);

  }

  @Test
  public void test333() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test333"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str10 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel18 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null(OFF)(hi!)"+ "'", str10.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);

  }

  @Test
  public void test334() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test334"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str7 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError8 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel9 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "null(OFF)(hi!)"+ "'", str7.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test335() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test335"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup4);
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    java.lang.String str11 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str12 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError13 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel14 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)()"+ "'", str3.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)()"+ "'", str6.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null(OFF)()"+ "'", str11.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "null(OFF)()"+ "'", str12.equals("null(OFF)()"));

  }

  @Test
  public void test336() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test336"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard13.enables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard13.level(jSError16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard13.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b21 = composeWarningsGuard13.disables(diagnosticGroup20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);

  }

  @Test
  public void test337() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test337"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel22 = composeWarningsGuard12.level(jSError21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b26 = composeWarningsGuard12.disables(diagnosticGroup25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);

  }

  @Test
  public void test338() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test338"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard27 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.JSError jSError28 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel29 = composeWarningsGuard27.level(jSError28);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);

  }

  @Test
  public void test339() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test339"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = composeWarningsGuard12.enables(diagnosticGroup23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b26 = composeWarningsGuard12.disables(diagnosticGroup25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test340() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test340"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str19 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel23 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError22);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null(OFF)(hi!)"+ "'", str19.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);

  }

  @Test
  public void test341() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test341"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup17);
    java.lang.String str19 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup20);
    java.lang.String str22 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError23 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel24 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null(OFF)(hi!)"+ "'", str19.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null(OFF)(hi!)"+ "'", str22.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test342() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test342"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard13.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard13.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard13.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = composeWarningsGuard13.enables(diagnosticGroup20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel23 = composeWarningsGuard13.level(jSError22);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str24 = composeWarningsGuard13.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel23);

  }

  @Test
  public void test343() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test343"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str10 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel20 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError19);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null(OFF)(hi!)"+ "'", str10.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test344() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test344"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard3.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard3.enables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard3.level(jSError16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard3.level(jSError18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b21 = composeWarningsGuard3.disables(diagnosticGroup20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);

  }

  @Test
  public void test345() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test345"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = composeWarningsGuard12.enables(diagnosticGroup23);
    com.google.javascript.jscomp.JSError jSError25 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel26 = composeWarningsGuard12.level(jSError25);
    com.google.javascript.jscomp.JSError jSError27 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel28 = composeWarningsGuard12.level(jSError27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = composeWarningsGuard12.enables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b32 = composeWarningsGuard12.disables(diagnosticGroup31);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test346() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test346"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.JSError jSError6 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel7 = composeWarningsGuard3.level(jSError6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard3.level(jSError10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard3.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard3.enables(diagnosticGroup16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard3.level(jSError18);
    com.google.javascript.jscomp.JSError jSError20 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel21 = composeWarningsGuard3.level(jSError20);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str22 = composeWarningsGuard3.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel21);

  }

  @Test
  public void test347() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test347"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard6.disables(diagnosticGroup7);
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard6.toString();
    java.lang.String str10 = diagnosticGroupPathSuppressingWarningsGuard6.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard6.enables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard6.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard6.disables(diagnosticGroup15);
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard6.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard6.disables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard6.disables(diagnosticGroup20);
    java.lang.String str22 = diagnosticGroupPathSuppressingWarningsGuard6.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = diagnosticGroupPathSuppressingWarningsGuard6.disables(diagnosticGroup23);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array25 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array25);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null(OFF)(hi!)"+ "'", str10.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null(OFF)(hi!)"+ "'", str22.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array25);

  }

  @Test
  public void test348() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test348"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel11 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)()"+ "'", str3.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test349() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test349"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = composeWarningsGuard22.enables(diagnosticGroup23);
    com.google.javascript.jscomp.JSError jSError25 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel26 = composeWarningsGuard22.level(jSError25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test350() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test350"); }

    com.google.javascript.jscomp.AbstractCompiler abstractCompiler0 = null;
    com.google.javascript.jscomp.FieldCleanupPass fieldCleanupPass1 = new com.google.javascript.jscomp.FieldCleanupPass(abstractCompiler0);
    com.google.javascript.rhino.Node node2 = null;
    com.google.javascript.rhino.Node node3 = null;
    fieldCleanupPass1.process(node2, node3);
    com.google.javascript.rhino.Node node5 = null;
    com.google.javascript.rhino.Node node6 = null;
    fieldCleanupPass1.process(node5, node6);
    com.google.javascript.rhino.Node node8 = null;
    com.google.javascript.rhino.Node node9 = null;
    fieldCleanupPass1.process(node8, node9);
    com.google.javascript.rhino.Node node11 = null;
    com.google.javascript.rhino.Node node12 = null;
    fieldCleanupPass1.process(node11, node12);
    com.google.javascript.rhino.Node node14 = null;
    com.google.javascript.rhino.Node node15 = null;
    fieldCleanupPass1.process(node14, node15);
    com.google.javascript.rhino.Node node17 = null;
    com.google.javascript.rhino.Node node18 = null;
    fieldCleanupPass1.process(node17, node18);
    com.google.javascript.rhino.Node node20 = null;
    com.google.javascript.rhino.Node node21 = null;
    fieldCleanupPass1.process(node20, node21);
    com.google.javascript.rhino.Node node23 = null;
    com.google.javascript.rhino.Node node24 = null;
    fieldCleanupPass1.process(node23, node24);
    com.google.javascript.rhino.Node node26 = null;
    com.google.javascript.rhino.Node node27 = null;
    fieldCleanupPass1.process(node26, node27);
    com.google.javascript.rhino.Node node29 = null;
    com.google.javascript.rhino.Node node30 = null;
    fieldCleanupPass1.process(node29, node30);
    com.google.javascript.rhino.Node node32 = null;
    com.google.javascript.rhino.Node node33 = null;
    fieldCleanupPass1.process(node32, node33);
    com.google.javascript.rhino.Node node35 = null;
    com.google.javascript.rhino.Node node36 = null;
    fieldCleanupPass1.process(node35, node36);
    com.google.javascript.rhino.Node node38 = null;
    com.google.javascript.rhino.Node node39 = null;
    fieldCleanupPass1.process(node38, node39);
    com.google.javascript.rhino.Node node41 = null;
    com.google.javascript.rhino.Node node42 = null;
    fieldCleanupPass1.process(node41, node42);
    com.google.javascript.rhino.Node node44 = null;
    com.google.javascript.rhino.Node node45 = null;
    fieldCleanupPass1.process(node44, node45);
    com.google.javascript.rhino.Node node47 = null;
    com.google.javascript.rhino.Node node48 = null;
    fieldCleanupPass1.process(node47, node48);
    com.google.javascript.rhino.Node node50 = null;
    com.google.javascript.rhino.Node node51 = null;
    fieldCleanupPass1.process(node50, node51);
    com.google.javascript.rhino.Node node53 = null;
    com.google.javascript.rhino.Node node54 = null;
    fieldCleanupPass1.process(node53, node54);
    com.google.javascript.rhino.Node node56 = null;
    com.google.javascript.rhino.Node node57 = null;
    fieldCleanupPass1.process(node56, node57);
    com.google.javascript.rhino.Node node59 = null;
    com.google.javascript.rhino.Node node60 = null;
    fieldCleanupPass1.process(node59, node60);
    com.google.javascript.rhino.Node node62 = null;
    com.google.javascript.rhino.Node node63 = null;
    fieldCleanupPass1.process(node62, node63);
    com.google.javascript.rhino.Node node65 = null;
    com.google.javascript.rhino.Node node66 = null;
    fieldCleanupPass1.process(node65, node66);
    com.google.javascript.rhino.Node node68 = null;
    com.google.javascript.rhino.Node node69 = null;
    fieldCleanupPass1.process(node68, node69);
    com.google.javascript.rhino.Node node71 = null;
    com.google.javascript.rhino.Node node72 = null;
    fieldCleanupPass1.process(node71, node72);
    com.google.javascript.rhino.Node node74 = null;
    com.google.javascript.rhino.Node node75 = null;
    fieldCleanupPass1.process(node74, node75);
    com.google.javascript.rhino.Node node77 = null;
    com.google.javascript.rhino.Node node78 = null;
    // The following exception was thrown during execution in test generation
    try {
    fieldCleanupPass1.hotSwapScript(node77, node78);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test351() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test351"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)' ', (int)' ', "");

  }

  @Test
  public void test352() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test352"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard3.enables(diagnosticGroup12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard3.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard3.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b19 = composeWarningsGuard3.disables(diagnosticGroup18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test353() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test353"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)'4', (int)(short)100, "null(OFF)()");

  }

  @Test
  public void test354() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test354"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard25 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup23, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard25.disables(diagnosticGroup26);
    java.lang.String str28 = diagnosticGroupPathSuppressingWarningsGuard25.toString();
    java.lang.String str29 = diagnosticGroupPathSuppressingWarningsGuard25.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = diagnosticGroupPathSuppressingWarningsGuard25.enables(diagnosticGroup30);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    boolean b33 = diagnosticGroupPathSuppressingWarningsGuard25.enables(diagnosticGroup32);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup34 = null;
    boolean b35 = diagnosticGroupPathSuppressingWarningsGuard25.enables(diagnosticGroup34);
    java.lang.String str36 = diagnosticGroupPathSuppressingWarningsGuard25.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup37 = null;
    boolean b38 = diagnosticGroupPathSuppressingWarningsGuard25.disables(diagnosticGroup37);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup39 = null;
    boolean b40 = diagnosticGroupPathSuppressingWarningsGuard25.disables(diagnosticGroup39);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup41 = null;
    boolean b42 = diagnosticGroupPathSuppressingWarningsGuard25.enables(diagnosticGroup41);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup43 = null;
    boolean b44 = diagnosticGroupPathSuppressingWarningsGuard25.disables(diagnosticGroup43);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup45 = null;
    boolean b46 = diagnosticGroupPathSuppressingWarningsGuard25.disables(diagnosticGroup45);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup47 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard49 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup47, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup50 = null;
    boolean b51 = diagnosticGroupPathSuppressingWarningsGuard49.disables(diagnosticGroup50);
    java.lang.String str52 = diagnosticGroupPathSuppressingWarningsGuard49.toString();
    java.lang.String str53 = diagnosticGroupPathSuppressingWarningsGuard49.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup54 = null;
    boolean b55 = diagnosticGroupPathSuppressingWarningsGuard49.enables(diagnosticGroup54);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup56 = null;
    boolean b57 = diagnosticGroupPathSuppressingWarningsGuard49.enables(diagnosticGroup56);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup58 = null;
    boolean b59 = diagnosticGroupPathSuppressingWarningsGuard49.disables(diagnosticGroup58);
    java.lang.String str60 = diagnosticGroupPathSuppressingWarningsGuard49.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup61 = null;
    boolean b62 = diagnosticGroupPathSuppressingWarningsGuard49.disables(diagnosticGroup61);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup63 = null;
    boolean b64 = diagnosticGroupPathSuppressingWarningsGuard49.disables(diagnosticGroup63);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup65 = null;
    boolean b66 = diagnosticGroupPathSuppressingWarningsGuard49.disables(diagnosticGroup65);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup67 = null;
    boolean b68 = diagnosticGroupPathSuppressingWarningsGuard49.enables(diagnosticGroup67);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup69 = null;
    boolean b70 = diagnosticGroupPathSuppressingWarningsGuard49.enables(diagnosticGroup69);
    java.lang.String str71 = diagnosticGroupPathSuppressingWarningsGuard49.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup72 = null;
    boolean b73 = diagnosticGroupPathSuppressingWarningsGuard49.disables(diagnosticGroup72);
    java.lang.String str74 = diagnosticGroupPathSuppressingWarningsGuard49.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup75 = null;
    boolean b76 = diagnosticGroupPathSuppressingWarningsGuard49.enables(diagnosticGroup75);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup77 = null;
    boolean b78 = diagnosticGroupPathSuppressingWarningsGuard49.disables(diagnosticGroup77);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup79 = null;
    boolean b80 = diagnosticGroupPathSuppressingWarningsGuard49.enables(diagnosticGroup79);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array81 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard12, diagnosticGroupPathSuppressingWarningsGuard25, diagnosticGroupPathSuppressingWarningsGuard49 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard82 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array81);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "null(OFF)(hi!)"+ "'", str28.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null(OFF)(hi!)"+ "'", str29.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "null(OFF)(hi!)"+ "'", str36.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "null(OFF)(hi!)"+ "'", str52.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null(OFF)(hi!)"+ "'", str53.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str60 + "' != '" + "null(OFF)(hi!)"+ "'", str60.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str71 + "' != '" + "null(OFF)(hi!)"+ "'", str71.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str74 + "' != '" + "null(OFF)(hi!)"+ "'", str74.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array81);

  }

  @Test
  public void test355() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test355"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)'#', 0, "hi!");
    int i4 = simpleRegion3.getEndingLineNumber();
    int i5 = simpleRegion3.getEndingLineNumber();
    java.lang.String str6 = simpleRegion3.getSourceExcerpt();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!"+ "'", str6.equals("hi!"));

  }

  @Test
  public void test356() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test356"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(0, 32, "null(OFF)(hi!)");
    int i4 = simpleRegion3.getBeginningLineNumber();
    int i5 = simpleRegion3.getBeginningLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);

  }

  @Test
  public void test357() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test357"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard18 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup16, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard18.disables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard18.disables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = diagnosticGroupPathSuppressingWarningsGuard18.disables(diagnosticGroup23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = diagnosticGroupPathSuppressingWarningsGuard18.enables(diagnosticGroup25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = diagnosticGroupPathSuppressingWarningsGuard18.disables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = diagnosticGroupPathSuppressingWarningsGuard18.disables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = diagnosticGroupPathSuppressingWarningsGuard18.enables(diagnosticGroup31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    boolean b34 = diagnosticGroupPathSuppressingWarningsGuard18.disables(diagnosticGroup33);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    boolean b36 = diagnosticGroupPathSuppressingWarningsGuard18.disables(diagnosticGroup35);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup37 = null;
    boolean b38 = diagnosticGroupPathSuppressingWarningsGuard18.disables(diagnosticGroup37);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup39 = null;
    boolean b40 = diagnosticGroupPathSuppressingWarningsGuard18.enables(diagnosticGroup39);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array41 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard18 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard42 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array41);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array41);

  }

  @Test
  public void test358() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test358"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard12.level(jSError13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel22 = composeWarningsGuard12.level(jSError21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = composeWarningsGuard12.enables(diagnosticGroup25);
    com.google.javascript.jscomp.JSError jSError27 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel28 = composeWarningsGuard12.level(jSError27);
    com.google.javascript.jscomp.JSError jSError29 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel30 = composeWarningsGuard12.level(jSError29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b32 = composeWarningsGuard12.disables(diagnosticGroup31);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel30);

  }

  @Test
  public void test359() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test359"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    java.lang.String str16 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str19 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null(OFF)(hi!)"+ "'", str16.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null(OFF)(hi!)"+ "'", str19.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);

  }

  @Test
  public void test360() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test360"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard3.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard3.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard3.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard3.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = composeWarningsGuard3.enables(diagnosticGroup20);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str22 = composeWarningsGuard3.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);

  }

  @Test
  public void test361() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test361"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError18 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel19 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test362() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test362"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup10);
    java.lang.String str12 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard17 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup15, "hi!");
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard17.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard17.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard17.enables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = diagnosticGroupPathSuppressingWarningsGuard17.enables(diagnosticGroup25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard29 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup27, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = diagnosticGroupPathSuppressingWarningsGuard29.disables(diagnosticGroup30);
    java.lang.String str32 = diagnosticGroupPathSuppressingWarningsGuard29.toString();
    java.lang.String str33 = diagnosticGroupPathSuppressingWarningsGuard29.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup34 = null;
    boolean b35 = diagnosticGroupPathSuppressingWarningsGuard29.enables(diagnosticGroup34);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = diagnosticGroupPathSuppressingWarningsGuard29.enables(diagnosticGroup36);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup38 = null;
    boolean b39 = diagnosticGroupPathSuppressingWarningsGuard29.disables(diagnosticGroup38);
    java.lang.String str40 = diagnosticGroupPathSuppressingWarningsGuard29.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup41 = null;
    boolean b42 = diagnosticGroupPathSuppressingWarningsGuard29.disables(diagnosticGroup41);
    java.lang.String str43 = diagnosticGroupPathSuppressingWarningsGuard29.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup44 = null;
    boolean b45 = diagnosticGroupPathSuppressingWarningsGuard29.enables(diagnosticGroup44);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup46 = null;
    boolean b47 = diagnosticGroupPathSuppressingWarningsGuard29.disables(diagnosticGroup46);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup48 = null;
    boolean b49 = diagnosticGroupPathSuppressingWarningsGuard29.enables(diagnosticGroup48);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup50 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard52 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup50, "");
    java.lang.String str53 = diagnosticGroupPathSuppressingWarningsGuard52.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup54 = null;
    boolean b55 = diagnosticGroupPathSuppressingWarningsGuard52.enables(diagnosticGroup54);
    java.lang.String str56 = diagnosticGroupPathSuppressingWarningsGuard52.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup57 = null;
    boolean b58 = diagnosticGroupPathSuppressingWarningsGuard52.enables(diagnosticGroup57);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup59 = null;
    boolean b60 = diagnosticGroupPathSuppressingWarningsGuard52.disables(diagnosticGroup59);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup61 = null;
    boolean b62 = diagnosticGroupPathSuppressingWarningsGuard52.enables(diagnosticGroup61);
    java.lang.String str63 = diagnosticGroupPathSuppressingWarningsGuard52.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array64 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard17, diagnosticGroupPathSuppressingWarningsGuard29, diagnosticGroupPathSuppressingWarningsGuard52 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard65 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array64);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "null(OFF)(hi!)"+ "'", str12.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null(OFF)(hi!)"+ "'", str32.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null(OFF)(hi!)"+ "'", str33.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "null(OFF)(hi!)"+ "'", str40.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "null(OFF)(hi!)"+ "'", str43.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null(OFF)()"+ "'", str53.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str56 + "' != '" + "null(OFF)()"+ "'", str56.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str63 + "' != '" + "null(OFF)()"+ "'", str63.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array64);

  }

  @Test
  public void test363() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test363"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b20 = composeWarningsGuard12.disables(diagnosticGroup19);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test364() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test364"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard7.level(jSError8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard7.level(jSError10);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array12 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard7 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array12);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array12);

  }

  @Test
  public void test365() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test365"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard12.level(jSError13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel22 = composeWarningsGuard12.level(jSError21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = composeWarningsGuard12.enables(diagnosticGroup23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = composeWarningsGuard12.enables(diagnosticGroup25);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str27 = composeWarningsGuard12.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test366() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test366"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = composeWarningsGuard3.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard3.level(jSError10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard3.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard3.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b17 = composeWarningsGuard3.disables(diagnosticGroup16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test367() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test367"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup22);
    java.lang.String str24 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup25);
    java.lang.String str27 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup28);
    java.lang.String str30 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "null(OFF)(hi!)"+ "'", str24.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null(OFF)(hi!)"+ "'", str27.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "null(OFF)(hi!)"+ "'", str30.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test368() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test368"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(0, 10, "null(OFF)(null(OFF)())");

  }

  @Test
  public void test369() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test369"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard8 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard9 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard9.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard9.enables(diagnosticGroup12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard9.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b17 = composeWarningsGuard9.disables(diagnosticGroup16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);

  }

  @Test
  public void test370() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test370"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array16 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard17 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard17, warningsGuard_array16);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard19 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard17);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array20 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard21 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard21, warningsGuard_array20);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard21);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array24 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard19, composeWarningsGuard23 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard25 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard25, warningsGuard_array24);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard27 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = composeWarningsGuard27.enables(diagnosticGroup28);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = composeWarningsGuard27.enables(diagnosticGroup30);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    boolean b33 = composeWarningsGuard27.enables(diagnosticGroup32);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup34 = null;
    boolean b35 = composeWarningsGuard27.enables(diagnosticGroup34);
    com.google.javascript.jscomp.JSError jSError36 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel37 = composeWarningsGuard27.level(jSError36);
    com.google.javascript.jscomp.JSError jSError38 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel39 = composeWarningsGuard27.level(jSError38);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array40 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard41 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard41, warningsGuard_array40);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard43 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard41);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array44 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard45 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard45, warningsGuard_array44);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard47 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard45);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array48 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard43, composeWarningsGuard47 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard49 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard49, warningsGuard_array48);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard51 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard49);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard52 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard49);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard53 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard49);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard54 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard49);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard55 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard49);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard56 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard49);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard57 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard49);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array58 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, composeWarningsGuard27, composeWarningsGuard57 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard59 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array58);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array58);

  }

  @Test
  public void test371() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test371"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard13.enables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard13.level(jSError16);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array18 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard13 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard19 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array18);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array18);

  }

  @Test
  public void test372() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test372"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    java.lang.String str16 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel24 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null(OFF)(hi!)"+ "'", str16.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test373() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test373"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str19 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup22);
    java.lang.String str24 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup25);
    java.lang.String str27 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError28 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel29 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError28);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null(OFF)(hi!)"+ "'", str19.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "null(OFF)(hi!)"+ "'", str24.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null(OFF)(hi!)"+ "'", str27.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test374() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test374"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard13.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard13.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard13.enables(diagnosticGroup18);
    com.google.javascript.jscomp.JSError jSError20 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel21 = composeWarningsGuard13.level(jSError20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = composeWarningsGuard13.enables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b25 = composeWarningsGuard13.disables(diagnosticGroup24);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);

  }

  @Test
  public void test375() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test375"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel13 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)(hi!)"+ "'", str3.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test376() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test376"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)(short)100, 0, "");
    int i4 = simpleRegion3.getEndingLineNumber();
    int i5 = simpleRegion3.getEndingLineNumber();
    int i6 = simpleRegion3.getEndingLineNumber();
    int i7 = simpleRegion3.getBeginningLineNumber();
    int i8 = simpleRegion3.getBeginningLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 100);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 100);

  }

  @Test
  public void test377() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test377"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError18 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel19 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test378() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test378"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard3.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard3.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard3.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard20 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup18, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard20.enables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = diagnosticGroupPathSuppressingWarningsGuard20.disables(diagnosticGroup23);
    java.lang.String str25 = diagnosticGroupPathSuppressingWarningsGuard20.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard20.disables(diagnosticGroup26);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = diagnosticGroupPathSuppressingWarningsGuard20.enables(diagnosticGroup28);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array30 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard20 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard31 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array30);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null(OFF)(hi!)"+ "'", str25.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array30);

  }

  @Test
  public void test379() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test379"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)(byte)0, (int)(short)100, "");
    java.lang.String str4 = simpleRegion3.getSourceExcerpt();
    java.lang.String str5 = simpleRegion3.getSourceExcerpt();
    int i6 = simpleRegion3.getEndingLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + ""+ "'", str4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + ""+ "'", str5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 100);

  }

  @Test
  public void test380() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test380"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup21);
    java.lang.String str23 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError24 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel25 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError24);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "null(OFF)(hi!)"+ "'", str23.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test381() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test381"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard14 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard14.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard14.level(jSError17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard14.enables(diagnosticGroup19);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str21 = composeWarningsGuard14.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test382() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test382"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.JSError jSError6 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel7 = composeWarningsGuard3.level(jSError6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = composeWarningsGuard3.enables(diagnosticGroup8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard3.level(jSError10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b15 = composeWarningsGuard3.disables(diagnosticGroup14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);

  }

  @Test
  public void test383() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test383"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel16 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test384() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test384"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(10, (int)(byte)-1, "null(OFF)(hi!)");
    int i4 = simpleRegion3.getBeginningLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 10);

  }

  @Test
  public void test385() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test385"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.JSError jSError11 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel12 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test386() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test386"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.JSError jSError6 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel7 = composeWarningsGuard3.level(jSError6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard3.level(jSError10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard3.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b15 = composeWarningsGuard3.disables(diagnosticGroup14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);

  }

  @Test
  public void test387() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test387"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup4);
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str14 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError15 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel16 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)()"+ "'", str3.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)()"+ "'", str6.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)()"+ "'", str13.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null(OFF)()"+ "'", str14.equals("null(OFF)()"));

  }

  @Test
  public void test388() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test388"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = composeWarningsGuard3.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard3.level(jSError10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard3.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard3.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard3.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b19 = composeWarningsGuard3.disables(diagnosticGroup18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test389() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test389"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(100, (int)(short)-1, "");

  }

  @Test
  public void test390() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test390"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel9 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)()"+ "'", str5.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);

  }

  @Test
  public void test391() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test391"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError7 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel8 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError7);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)()"+ "'", str5.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)()"+ "'", str6.equals("null(OFF)()"));

  }

  @Test
  public void test392() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test392"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard12.level(jSError13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b20 = composeWarningsGuard12.disables(diagnosticGroup19);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);

  }

  @Test
  public void test393() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test393"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup16);
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str19 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str20 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str21 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard24 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup22, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = diagnosticGroupPathSuppressingWarningsGuard24.disables(diagnosticGroup25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = diagnosticGroupPathSuppressingWarningsGuard24.disables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = diagnosticGroupPathSuppressingWarningsGuard24.disables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = diagnosticGroupPathSuppressingWarningsGuard24.enables(diagnosticGroup31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    boolean b34 = diagnosticGroupPathSuppressingWarningsGuard24.disables(diagnosticGroup33);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    boolean b36 = diagnosticGroupPathSuppressingWarningsGuard24.disables(diagnosticGroup35);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup37 = null;
    boolean b38 = diagnosticGroupPathSuppressingWarningsGuard24.enables(diagnosticGroup37);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup39 = null;
    boolean b40 = diagnosticGroupPathSuppressingWarningsGuard24.enables(diagnosticGroup39);
    java.lang.String str41 = diagnosticGroupPathSuppressingWarningsGuard24.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup42 = null;
    boolean b43 = diagnosticGroupPathSuppressingWarningsGuard24.enables(diagnosticGroup42);
    java.lang.String str44 = diagnosticGroupPathSuppressingWarningsGuard24.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup45 = null;
    boolean b46 = diagnosticGroupPathSuppressingWarningsGuard24.disables(diagnosticGroup45);
    java.lang.String str47 = diagnosticGroupPathSuppressingWarningsGuard24.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup48 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard50 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup48, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup51 = null;
    boolean b52 = diagnosticGroupPathSuppressingWarningsGuard50.disables(diagnosticGroup51);
    java.lang.String str53 = diagnosticGroupPathSuppressingWarningsGuard50.toString();
    java.lang.String str54 = diagnosticGroupPathSuppressingWarningsGuard50.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup55 = null;
    boolean b56 = diagnosticGroupPathSuppressingWarningsGuard50.enables(diagnosticGroup55);
    java.lang.String str57 = diagnosticGroupPathSuppressingWarningsGuard50.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup58 = null;
    boolean b59 = diagnosticGroupPathSuppressingWarningsGuard50.disables(diagnosticGroup58);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup60 = null;
    boolean b61 = diagnosticGroupPathSuppressingWarningsGuard50.enables(diagnosticGroup60);
    java.lang.String str62 = diagnosticGroupPathSuppressingWarningsGuard50.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup63 = null;
    boolean b64 = diagnosticGroupPathSuppressingWarningsGuard50.enables(diagnosticGroup63);
    java.lang.String str65 = diagnosticGroupPathSuppressingWarningsGuard50.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup66 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard68 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup66, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup69 = null;
    boolean b70 = diagnosticGroupPathSuppressingWarningsGuard68.disables(diagnosticGroup69);
    java.lang.String str71 = diagnosticGroupPathSuppressingWarningsGuard68.toString();
    java.lang.String str72 = diagnosticGroupPathSuppressingWarningsGuard68.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup73 = null;
    boolean b74 = diagnosticGroupPathSuppressingWarningsGuard68.enables(diagnosticGroup73);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup75 = null;
    boolean b76 = diagnosticGroupPathSuppressingWarningsGuard68.enables(diagnosticGroup75);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup77 = null;
    boolean b78 = diagnosticGroupPathSuppressingWarningsGuard68.enables(diagnosticGroup77);
    java.lang.String str79 = diagnosticGroupPathSuppressingWarningsGuard68.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup80 = null;
    boolean b81 = diagnosticGroupPathSuppressingWarningsGuard68.disables(diagnosticGroup80);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup82 = null;
    boolean b83 = diagnosticGroupPathSuppressingWarningsGuard68.disables(diagnosticGroup82);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup84 = null;
    boolean b85 = diagnosticGroupPathSuppressingWarningsGuard68.enables(diagnosticGroup84);
    java.lang.String str86 = diagnosticGroupPathSuppressingWarningsGuard68.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup87 = null;
    boolean b88 = diagnosticGroupPathSuppressingWarningsGuard68.enables(diagnosticGroup87);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array89 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard24, diagnosticGroupPathSuppressingWarningsGuard50, diagnosticGroupPathSuppressingWarningsGuard68 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard90 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array89);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null(OFF)(hi!)"+ "'", str19.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "null(OFF)(hi!)"+ "'", str20.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "null(OFF)(hi!)"+ "'", str21.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "null(OFF)(hi!)"+ "'", str41.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "null(OFF)(hi!)"+ "'", str44.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "null(OFF)(hi!)"+ "'", str47.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null(OFF)(hi!)"+ "'", str53.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "null(OFF)(hi!)"+ "'", str54.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str57 + "' != '" + "null(OFF)(hi!)"+ "'", str57.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str62 + "' != '" + "null(OFF)(hi!)"+ "'", str62.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "null(OFF)(hi!)"+ "'", str65.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str71 + "' != '" + "null(OFF)(hi!)"+ "'", str71.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str72 + "' != '" + "null(OFF)(hi!)"+ "'", str72.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str79 + "' != '" + "null(OFF)(hi!)"+ "'", str79.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str86 + "' != '" + "null(OFF)(hi!)"+ "'", str86.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b88 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array89);

  }

  @Test
  public void test394() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test394"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = composeWarningsGuard4.enables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = composeWarningsGuard4.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = composeWarningsGuard4.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = composeWarningsGuard4.enables(diagnosticGroup11);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str13 = composeWarningsGuard4.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test395() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test395"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = composeWarningsGuard23.enables(diagnosticGroup24);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = composeWarningsGuard23.enables(diagnosticGroup26);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str28 = composeWarningsGuard23.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);

  }

  @Test
  public void test396() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test396"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    java.lang.String str16 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel22 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError21);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null(OFF)(hi!)"+ "'", str16.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test397() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test397"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard25 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup23, "hi!");
    java.lang.String str26 = diagnosticGroupPathSuppressingWarningsGuard25.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = diagnosticGroupPathSuppressingWarningsGuard25.enables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = diagnosticGroupPathSuppressingWarningsGuard25.enables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = diagnosticGroupPathSuppressingWarningsGuard25.disables(diagnosticGroup31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    boolean b34 = diagnosticGroupPathSuppressingWarningsGuard25.disables(diagnosticGroup33);
    java.lang.String str35 = diagnosticGroupPathSuppressingWarningsGuard25.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = diagnosticGroupPathSuppressingWarningsGuard25.disables(diagnosticGroup36);
    java.lang.String str38 = diagnosticGroupPathSuppressingWarningsGuard25.toString();
    java.lang.String str39 = diagnosticGroupPathSuppressingWarningsGuard25.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup40 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard42 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup40, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup43 = null;
    boolean b44 = diagnosticGroupPathSuppressingWarningsGuard42.disables(diagnosticGroup43);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup45 = null;
    boolean b46 = diagnosticGroupPathSuppressingWarningsGuard42.enables(diagnosticGroup45);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup47 = null;
    boolean b48 = diagnosticGroupPathSuppressingWarningsGuard42.disables(diagnosticGroup47);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup49 = null;
    boolean b50 = diagnosticGroupPathSuppressingWarningsGuard42.disables(diagnosticGroup49);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup51 = null;
    boolean b52 = diagnosticGroupPathSuppressingWarningsGuard42.enables(diagnosticGroup51);
    java.lang.String str53 = diagnosticGroupPathSuppressingWarningsGuard42.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup54 = null;
    boolean b55 = diagnosticGroupPathSuppressingWarningsGuard42.disables(diagnosticGroup54);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup56 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard58 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup56, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup59 = null;
    boolean b60 = diagnosticGroupPathSuppressingWarningsGuard58.disables(diagnosticGroup59);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup61 = null;
    boolean b62 = diagnosticGroupPathSuppressingWarningsGuard58.disables(diagnosticGroup61);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup63 = null;
    boolean b64 = diagnosticGroupPathSuppressingWarningsGuard58.disables(diagnosticGroup63);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup65 = null;
    boolean b66 = diagnosticGroupPathSuppressingWarningsGuard58.disables(diagnosticGroup65);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup67 = null;
    boolean b68 = diagnosticGroupPathSuppressingWarningsGuard58.disables(diagnosticGroup67);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup69 = null;
    boolean b70 = diagnosticGroupPathSuppressingWarningsGuard58.enables(diagnosticGroup69);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup71 = null;
    boolean b72 = diagnosticGroupPathSuppressingWarningsGuard58.enables(diagnosticGroup71);
    java.lang.String str73 = diagnosticGroupPathSuppressingWarningsGuard58.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup74 = null;
    boolean b75 = diagnosticGroupPathSuppressingWarningsGuard58.disables(diagnosticGroup74);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array76 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard22, diagnosticGroupPathSuppressingWarningsGuard25, diagnosticGroupPathSuppressingWarningsGuard42, diagnosticGroupPathSuppressingWarningsGuard58 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard77 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array76);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null(OFF)(hi!)"+ "'", str26.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null(OFF)(hi!)"+ "'", str35.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "null(OFF)(hi!)"+ "'", str38.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "null(OFF)(hi!)"+ "'", str39.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null(OFF)(hi!)"+ "'", str53.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str73 + "' != '" + "null(OFF)(hi!)"+ "'", str73.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array76);

  }

  @Test
  public void test398() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test398"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard13.enables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard13.level(jSError16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard13.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = composeWarningsGuard13.enables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = composeWarningsGuard13.enables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b25 = composeWarningsGuard13.disables(diagnosticGroup24);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);

  }

  @Test
  public void test399() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test399"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup20);
    java.lang.String str22 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError23 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel24 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "null(OFF)(hi!)"+ "'", str22.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test400() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test400"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "null(OFF)(null(OFF)())");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard7 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup5, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard7.disables(diagnosticGroup8);
    java.lang.String str10 = diagnosticGroupPathSuppressingWarningsGuard7.toString();
    java.lang.String str11 = diagnosticGroupPathSuppressingWarningsGuard7.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = diagnosticGroupPathSuppressingWarningsGuard7.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard7.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard7.disables(diagnosticGroup16);
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard7.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard7.disables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard7.disables(diagnosticGroup21);
    java.lang.String str23 = diagnosticGroupPathSuppressingWarningsGuard7.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard7.enables(diagnosticGroup24);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard7.disables(diagnosticGroup26);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard30 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup28, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = diagnosticGroupPathSuppressingWarningsGuard30.disables(diagnosticGroup31);
    java.lang.String str33 = diagnosticGroupPathSuppressingWarningsGuard30.toString();
    java.lang.String str34 = diagnosticGroupPathSuppressingWarningsGuard30.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    boolean b36 = diagnosticGroupPathSuppressingWarningsGuard30.enables(diagnosticGroup35);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup37 = null;
    boolean b38 = diagnosticGroupPathSuppressingWarningsGuard30.enables(diagnosticGroup37);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup39 = null;
    boolean b40 = diagnosticGroupPathSuppressingWarningsGuard30.disables(diagnosticGroup39);
    java.lang.String str41 = diagnosticGroupPathSuppressingWarningsGuard30.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup42 = null;
    boolean b43 = diagnosticGroupPathSuppressingWarningsGuard30.enables(diagnosticGroup42);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup44 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard46 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup44, "null(OFF)(null(OFF)(hi!))");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array47 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard48 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard48, warningsGuard_array47);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard50 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard48);
    com.google.javascript.jscomp.JSError jSError51 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel52 = composeWarningsGuard50.level(jSError51);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup53 = null;
    boolean b54 = composeWarningsGuard50.enables(diagnosticGroup53);
    com.google.javascript.jscomp.JSError jSError55 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel56 = composeWarningsGuard50.level(jSError55);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup57 = null;
    boolean b58 = composeWarningsGuard50.enables(diagnosticGroup57);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup59 = null;
    boolean b60 = composeWarningsGuard50.enables(diagnosticGroup59);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup61 = null;
    boolean b62 = composeWarningsGuard50.enables(diagnosticGroup61);
    com.google.javascript.jscomp.JSError jSError63 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel64 = composeWarningsGuard50.level(jSError63);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array65 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard7, diagnosticGroupPathSuppressingWarningsGuard30, diagnosticGroupPathSuppressingWarningsGuard46, composeWarningsGuard50 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard66 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array65);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null(OFF)(hi!)"+ "'", str10.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null(OFF)(hi!)"+ "'", str11.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "null(OFF)(hi!)"+ "'", str23.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null(OFF)(hi!)"+ "'", str33.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null(OFF)(hi!)"+ "'", str34.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "null(OFF)(hi!)"+ "'", str41.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array65);

  }

  @Test
  public void test401() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test401"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard12 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup10, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard12.disables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard19 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup17, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard19.disables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard19.disables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard19.disables(diagnosticGroup24);
    java.lang.String str26 = diagnosticGroupPathSuppressingWarningsGuard19.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = diagnosticGroupPathSuppressingWarningsGuard19.enables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = diagnosticGroupPathSuppressingWarningsGuard19.disables(diagnosticGroup29);
    java.lang.String str31 = diagnosticGroupPathSuppressingWarningsGuard19.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    boolean b33 = diagnosticGroupPathSuppressingWarningsGuard19.enables(diagnosticGroup32);
    java.lang.String str34 = diagnosticGroupPathSuppressingWarningsGuard19.toString();
    java.lang.String str35 = diagnosticGroupPathSuppressingWarningsGuard19.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard38 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup36, "hi!");
    java.lang.String str39 = diagnosticGroupPathSuppressingWarningsGuard38.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array40 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard41 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard41, warningsGuard_array40);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard43 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard41);
    com.google.javascript.jscomp.JSError jSError44 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel45 = composeWarningsGuard43.level(jSError44);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup46 = null;
    boolean b47 = composeWarningsGuard43.enables(diagnosticGroup46);
    com.google.javascript.jscomp.JSError jSError48 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel49 = composeWarningsGuard43.level(jSError48);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup50 = null;
    boolean b51 = composeWarningsGuard43.enables(diagnosticGroup50);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup52 = null;
    boolean b53 = composeWarningsGuard43.enables(diagnosticGroup52);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array54 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard55 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard55, warningsGuard_array54);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard57 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard55);
    com.google.javascript.jscomp.JSError jSError58 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel59 = composeWarningsGuard57.level(jSError58);
    com.google.javascript.jscomp.JSError jSError60 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel61 = composeWarningsGuard57.level(jSError60);
    com.google.javascript.jscomp.JSError jSError62 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel63 = composeWarningsGuard57.level(jSError62);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup64 = null;
    boolean b65 = composeWarningsGuard57.enables(diagnosticGroup64);
    com.google.javascript.jscomp.JSError jSError66 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel67 = composeWarningsGuard57.level(jSError66);
    com.google.javascript.jscomp.JSError jSError68 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel69 = composeWarningsGuard57.level(jSError68);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup70 = null;
    boolean b71 = composeWarningsGuard57.enables(diagnosticGroup70);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup72 = null;
    boolean b73 = composeWarningsGuard57.enables(diagnosticGroup72);
    com.google.javascript.jscomp.JSError jSError74 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel75 = composeWarningsGuard57.level(jSError74);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array76 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard12, diagnosticGroupPathSuppressingWarningsGuard19, diagnosticGroupPathSuppressingWarningsGuard38, composeWarningsGuard43, composeWarningsGuard57 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard77 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array76);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null(OFF)(hi!)"+ "'", str26.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null(OFF)(hi!)"+ "'", str31.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null(OFF)(hi!)"+ "'", str34.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "null(OFF)(hi!)"+ "'", str35.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "null(OFF)(hi!)"+ "'", str39.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array76);

  }

  @Test
  public void test402() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test402"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard3.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard3.enables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard3.level(jSError16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard3.level(jSError18);
    com.google.javascript.jscomp.JSError jSError20 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel21 = composeWarningsGuard3.level(jSError20);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str22 = composeWarningsGuard3.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel21);

  }

  @Test
  public void test403() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test403"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    java.lang.String str15 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError16 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel17 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "null(OFF)(hi!)"+ "'", str15.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test404() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test404"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = composeWarningsGuard3.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard3.level(jSError10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard3.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard3.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard3.enables(diagnosticGroup18);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str20 = composeWarningsGuard3.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);

  }

  @Test
  public void test405() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test405"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = composeWarningsGuard3.enables(diagnosticGroup8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard3.level(jSError10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b13 = composeWarningsGuard3.disables(diagnosticGroup12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);

  }

  @Test
  public void test406() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test406"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "null(OFF)(hi!)");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.JSError jSError11 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel12 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test407() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test407"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup4);
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError14 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel15 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)()"+ "'", str3.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)()"+ "'", str6.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)()"+ "'", str13.equals("null(OFF)()"));

  }

  @Test
  public void test408() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test408"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.JSError jSError6 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel7 = composeWarningsGuard3.level(jSError6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = composeWarningsGuard3.enables(diagnosticGroup8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b11 = composeWarningsGuard3.disables(diagnosticGroup10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test409() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test409"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel15 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)(hi!)"+ "'", str3.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);

  }

  @Test
  public void test410() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test410"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(35, 10, "hi!");
    int i4 = simpleRegion3.getEndingLineNumber();
    int i5 = simpleRegion3.getBeginningLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 35);

  }

  @Test
  public void test411() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test411"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = composeWarningsGuard24.enables(diagnosticGroup25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = composeWarningsGuard24.enables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b30 = composeWarningsGuard24.disables(diagnosticGroup29);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test412() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test412"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup16);
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str19 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str20 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError21 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel22 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError21);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null(OFF)(hi!)"+ "'", str19.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "null(OFF)(hi!)"+ "'", str20.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test413() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test413"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard27 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = composeWarningsGuard27.enables(diagnosticGroup28);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = composeWarningsGuard27.enables(diagnosticGroup30);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b33 = composeWarningsGuard27.disables(diagnosticGroup32);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);

  }

  @Test
  public void test414() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test414"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)'#', (int)(short)1, "");
    int i4 = simpleRegion3.getEndingLineNumber();
    int i5 = simpleRegion3.getBeginningLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 35);

  }

  @Test
  public void test415() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test415"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard3.level(jSError10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard3.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard3.enables(diagnosticGroup16);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str18 = composeWarningsGuard3.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test416() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test416"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard13.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard13.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard13.enables(diagnosticGroup18);
    com.google.javascript.jscomp.JSError jSError20 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel21 = composeWarningsGuard13.level(jSError20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel23 = composeWarningsGuard13.level(jSError22);
    com.google.javascript.jscomp.JSError jSError24 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel25 = composeWarningsGuard13.level(jSError24);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str26 = composeWarningsGuard13.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel25);

  }

  @Test
  public void test417() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test417"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    java.lang.String str16 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup17);
    java.lang.String str19 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard26 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup24, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = diagnosticGroupPathSuppressingWarningsGuard26.disables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = diagnosticGroupPathSuppressingWarningsGuard26.disables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = diagnosticGroupPathSuppressingWarningsGuard26.disables(diagnosticGroup31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    boolean b34 = diagnosticGroupPathSuppressingWarningsGuard26.disables(diagnosticGroup33);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    boolean b36 = diagnosticGroupPathSuppressingWarningsGuard26.disables(diagnosticGroup35);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup37 = null;
    boolean b38 = diagnosticGroupPathSuppressingWarningsGuard26.enables(diagnosticGroup37);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup39 = null;
    boolean b40 = diagnosticGroupPathSuppressingWarningsGuard26.enables(diagnosticGroup39);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array41 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard26 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard42 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array41);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null(OFF)(hi!)"+ "'", str16.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null(OFF)(hi!)"+ "'", str19.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array41);

  }

  @Test
  public void test418() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test418"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = composeWarningsGuard3.enables(diagnosticGroup4);
    com.google.javascript.jscomp.JSError jSError6 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel7 = composeWarningsGuard3.level(jSError6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard10 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup8, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard10.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard10.toString();
    java.lang.String str14 = diagnosticGroupPathSuppressingWarningsGuard10.toString();
    java.lang.String str15 = diagnosticGroupPathSuppressingWarningsGuard10.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard10.disables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard10.disables(diagnosticGroup18);
    java.lang.String str20 = diagnosticGroupPathSuppressingWarningsGuard10.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array21 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard10 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array21);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null(OFF)(hi!)"+ "'", str14.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "null(OFF)(hi!)"+ "'", str15.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "null(OFF)(hi!)"+ "'", str20.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array21);

  }

  @Test
  public void test419() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test419"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard3.enables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard3.level(jSError16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard3.level(jSError18);
    com.google.javascript.jscomp.JSError jSError20 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel21 = composeWarningsGuard3.level(jSError20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = composeWarningsGuard3.enables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = composeWarningsGuard3.enables(diagnosticGroup24);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str26 = composeWarningsGuard3.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);

  }

  @Test
  public void test420() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test420"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel22 = composeWarningsGuard12.level(jSError21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b24 = composeWarningsGuard12.disables(diagnosticGroup23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel22);

  }

  @Test
  public void test421() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test421"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str7 = composeWarningsGuard6.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);

  }

  @Test
  public void test422() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test422"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.JSError jSError11 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel12 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);

  }

  @Test
  public void test423() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test423"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard3.enables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard3.level(jSError16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard3.level(jSError18);
    com.google.javascript.jscomp.JSError jSError20 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel21 = composeWarningsGuard3.level(jSError20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = composeWarningsGuard3.enables(diagnosticGroup22);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str24 = composeWarningsGuard3.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);

  }

  @Test
  public void test424() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test424"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel16 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test425() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test425"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.JSError jSError9 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel10 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)()"+ "'", str5.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)()"+ "'", str6.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test426() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test426"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "null(OFF)()");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(null(OFF)())"+ "'", str5.equals("null(OFF)(null(OFF)())"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test427() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test427"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard8 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard9 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard13.level(jSError14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard13.level(jSError16);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str18 = composeWarningsGuard13.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);

  }

  @Test
  public void test428() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test428"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard11.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard11.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard11.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard11.enables(diagnosticGroup18);
    com.google.javascript.jscomp.JSError jSError20 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel21 = composeWarningsGuard11.level(jSError20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel23 = composeWarningsGuard11.level(jSError22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b25 = composeWarningsGuard11.disables(diagnosticGroup24);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel23);

  }

  @Test
  public void test429() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test429"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = composeWarningsGuard3.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = composeWarningsGuard3.enables(diagnosticGroup8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b11 = composeWarningsGuard3.disables(diagnosticGroup10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test430() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test430"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str10 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup17);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array19 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard20 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard20, warningsGuard_array19);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard20);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array23 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard24 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard24, warningsGuard_array23);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard24);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array27 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard22, composeWarningsGuard26 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard28 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28, warningsGuard_array27);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard30 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard31 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard32 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard33 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard34 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard35 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard28);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array36 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, composeWarningsGuard35 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard37 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array36);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null(OFF)(hi!)"+ "'", str10.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array36);

  }

  @Test
  public void test431() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test431"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard17 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup15, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard17.enables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup24);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard17.enables(diagnosticGroup26);
    java.lang.String str28 = diagnosticGroupPathSuppressingWarningsGuard17.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup29);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array31 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard17 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard32 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array31);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "null(OFF)(hi!)"+ "'", str28.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array31);

  }

  @Test
  public void test432() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test432"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str4 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError5 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel6 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)(hi!)"+ "'", str3.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null(OFF)(hi!)"+ "'", str4.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test433() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test433"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str27 = composeWarningsGuard26.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);

  }

  @Test
  public void test434() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test434"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup8);
    java.lang.String str10 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError14 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel15 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null(OFF)(hi!)"+ "'", str10.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test435() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test435"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array6 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array6);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array6);

  }

  @Test
  public void test436() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test436"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    java.lang.String str15 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "null(OFF)(hi!)"+ "'", str15.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);

  }

  @Test
  public void test437() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test437"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    java.lang.String str11 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel17 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null(OFF)(hi!)"+ "'", str11.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test438() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test438"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel22 = composeWarningsGuard12.level(jSError21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard25 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup23, "null(OFF)(null(OFF)())");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard25.disables(diagnosticGroup26);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard30 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup28, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = diagnosticGroupPathSuppressingWarningsGuard30.disables(diagnosticGroup31);
    java.lang.String str33 = diagnosticGroupPathSuppressingWarningsGuard30.toString();
    java.lang.String str34 = diagnosticGroupPathSuppressingWarningsGuard30.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    boolean b36 = diagnosticGroupPathSuppressingWarningsGuard30.enables(diagnosticGroup35);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup37 = null;
    boolean b38 = diagnosticGroupPathSuppressingWarningsGuard30.enables(diagnosticGroup37);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup39 = null;
    boolean b40 = diagnosticGroupPathSuppressingWarningsGuard30.disables(diagnosticGroup39);
    java.lang.String str41 = diagnosticGroupPathSuppressingWarningsGuard30.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup42 = null;
    boolean b43 = diagnosticGroupPathSuppressingWarningsGuard30.disables(diagnosticGroup42);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup44 = null;
    boolean b45 = diagnosticGroupPathSuppressingWarningsGuard30.disables(diagnosticGroup44);
    java.lang.String str46 = diagnosticGroupPathSuppressingWarningsGuard30.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup47 = null;
    boolean b48 = diagnosticGroupPathSuppressingWarningsGuard30.enables(diagnosticGroup47);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array49 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard12, diagnosticGroupPathSuppressingWarningsGuard25, diagnosticGroupPathSuppressingWarningsGuard30 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard50 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array49);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null(OFF)(hi!)"+ "'", str33.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null(OFF)(hi!)"+ "'", str34.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "null(OFF)(hi!)"+ "'", str41.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "null(OFF)(hi!)"+ "'", str46.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array49);

  }

  @Test
  public void test439() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test439"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup4);
    com.google.javascript.jscomp.JSError jSError6 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel7 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError6);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)()"+ "'", str3.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);

  }

  @Test
  public void test440() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test440"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)(byte)1, (int)(short)10, "null(OFF)(null(OFF)(hi!))");

  }

  @Test
  public void test441() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test441"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)'4', (int)(short)100, "");
    java.lang.String str4 = simpleRegion3.getSourceExcerpt();
    int i5 = simpleRegion3.getBeginningLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + ""+ "'", str4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 52);

  }

  @Test
  public void test442() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test442"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "null(OFF)(null(OFF)(null(OFF)(hi!)))");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.JSError jSError9 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel10 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test443() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test443"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard13.level(jSError14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard13.level(jSError16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard13.level(jSError18);
    com.google.javascript.jscomp.JSError jSError20 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel21 = composeWarningsGuard13.level(jSError20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b23 = composeWarningsGuard13.disables(diagnosticGroup22);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel21);

  }

  @Test
  public void test444() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test444"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)(short)0, (int)(byte)1, "null(OFF)(hi!)");
    int i4 = simpleRegion3.getEndingLineNumber();
    int i5 = simpleRegion3.getBeginningLineNumber();
    java.lang.String str6 = simpleRegion3.getSourceExcerpt();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test445() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test445"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard13 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup11, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard13.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard13.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard13.disables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard13.disables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard13.disables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard26 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup24, "hi!");
    java.lang.String str27 = diagnosticGroupPathSuppressingWarningsGuard26.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = diagnosticGroupPathSuppressingWarningsGuard26.enables(diagnosticGroup28);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = diagnosticGroupPathSuppressingWarningsGuard26.enables(diagnosticGroup30);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    boolean b33 = diagnosticGroupPathSuppressingWarningsGuard26.disables(diagnosticGroup32);
    java.lang.String str34 = diagnosticGroupPathSuppressingWarningsGuard26.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    boolean b36 = diagnosticGroupPathSuppressingWarningsGuard26.enables(diagnosticGroup35);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array37 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard13, diagnosticGroupPathSuppressingWarningsGuard26 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard38 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array37);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null(OFF)(hi!)"+ "'", str27.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null(OFF)(hi!)"+ "'", str34.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array37);

  }

  @Test
  public void test446() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test446"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    java.lang.String str15 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str16 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard18 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array17);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "null(OFF)(hi!)"+ "'", str15.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null(OFF)(hi!)"+ "'", str16.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);

  }

  @Test
  public void test447() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test447"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard12.level(jSError13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel22 = composeWarningsGuard12.level(jSError21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.JSError jSError25 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel26 = composeWarningsGuard12.level(jSError25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = composeWarningsGuard12.enables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = composeWarningsGuard12.enables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = composeWarningsGuard12.enables(diagnosticGroup31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b34 = composeWarningsGuard12.disables(diagnosticGroup33);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test448() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test448"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    java.lang.String str16 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel23 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError22);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null(OFF)(hi!)"+ "'", str16.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);

  }

  @Test
  public void test449() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test449"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup18);
    java.lang.String str20 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel24 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "null(OFF)(hi!)"+ "'", str20.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test450() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test450"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard7.level(jSError8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard7.level(jSError10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard7.enables(diagnosticGroup12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard7.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b17 = composeWarningsGuard7.disables(diagnosticGroup16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);

  }

  @Test
  public void test451() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test451"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)(short)100, 1, "null(OFF)(null(OFF)())");

  }

  @Test
  public void test452() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test452"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)(short)1, (int)(byte)100, "null(OFF)(null(OFF)(null(OFF)(hi!)))");
    java.lang.String str4 = simpleRegion3.getSourceExcerpt();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "null(OFF)(null(OFF)(null(OFF)(hi!)))"+ "'", str4.equals("null(OFF)(null(OFF)(null(OFF)(hi!)))"));

  }

  @Test
  public void test453() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test453"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard3.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard3.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard3.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard3.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = composeWarningsGuard3.enables(diagnosticGroup20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel23 = composeWarningsGuard3.level(jSError22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b25 = composeWarningsGuard3.disables(diagnosticGroup24);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel23);

  }

  @Test
  public void test454() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test454"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup4);
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    com.google.javascript.jscomp.JSError jSError13 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel14 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)()"+ "'", str3.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)()"+ "'", str6.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test455() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test455"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup16);
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup23);
    com.google.javascript.jscomp.JSError jSError25 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel26 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test456() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test456"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup8);
    java.lang.String str10 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str11 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard14 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup12, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard14.disables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard14.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard14.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard14.enables(diagnosticGroup21);
    java.lang.String str23 = diagnosticGroupPathSuppressingWarningsGuard14.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard14.enables(diagnosticGroup24);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard28 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup26, "hi!");
    java.lang.String str29 = diagnosticGroupPathSuppressingWarningsGuard28.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = diagnosticGroupPathSuppressingWarningsGuard28.enables(diagnosticGroup30);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    boolean b33 = diagnosticGroupPathSuppressingWarningsGuard28.enables(diagnosticGroup32);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup34 = null;
    boolean b35 = diagnosticGroupPathSuppressingWarningsGuard28.disables(diagnosticGroup34);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = diagnosticGroupPathSuppressingWarningsGuard28.enables(diagnosticGroup36);
    java.lang.String str38 = diagnosticGroupPathSuppressingWarningsGuard28.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array39 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard40 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard40, warningsGuard_array39);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard42 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard40);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array43 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard44 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard44, warningsGuard_array43);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard46 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard44);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array47 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard42, composeWarningsGuard46 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard48 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard48, warningsGuard_array47);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard50 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard48);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard51 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard48);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup52 = null;
    boolean b53 = composeWarningsGuard51.enables(diagnosticGroup52);
    com.google.javascript.jscomp.JSError jSError54 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel55 = composeWarningsGuard51.level(jSError54);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup56 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard58 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup56, "hi!");
    java.lang.String str59 = diagnosticGroupPathSuppressingWarningsGuard58.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup60 = null;
    boolean b61 = diagnosticGroupPathSuppressingWarningsGuard58.enables(diagnosticGroup60);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup62 = null;
    boolean b63 = diagnosticGroupPathSuppressingWarningsGuard58.enables(diagnosticGroup62);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup64 = null;
    boolean b65 = diagnosticGroupPathSuppressingWarningsGuard58.disables(diagnosticGroup64);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup66 = null;
    boolean b67 = diagnosticGroupPathSuppressingWarningsGuard58.disables(diagnosticGroup66);
    java.lang.String str68 = diagnosticGroupPathSuppressingWarningsGuard58.toString();
    java.lang.String str69 = diagnosticGroupPathSuppressingWarningsGuard58.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup70 = null;
    boolean b71 = diagnosticGroupPathSuppressingWarningsGuard58.disables(diagnosticGroup70);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup72 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard74 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup72, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup75 = null;
    boolean b76 = diagnosticGroupPathSuppressingWarningsGuard74.disables(diagnosticGroup75);
    java.lang.String str77 = diagnosticGroupPathSuppressingWarningsGuard74.toString();
    java.lang.String str78 = diagnosticGroupPathSuppressingWarningsGuard74.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup79 = null;
    boolean b80 = diagnosticGroupPathSuppressingWarningsGuard74.enables(diagnosticGroup79);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup81 = null;
    boolean b82 = diagnosticGroupPathSuppressingWarningsGuard74.enables(diagnosticGroup81);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup83 = null;
    boolean b84 = diagnosticGroupPathSuppressingWarningsGuard74.enables(diagnosticGroup83);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array85 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard14, diagnosticGroupPathSuppressingWarningsGuard28, composeWarningsGuard51, diagnosticGroupPathSuppressingWarningsGuard58, diagnosticGroupPathSuppressingWarningsGuard74 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard86 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array85);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)(hi!)"+ "'", str3.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null(OFF)(hi!)"+ "'", str10.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "null(OFF)(hi!)"+ "'", str11.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "null(OFF)(hi!)"+ "'", str23.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null(OFF)(hi!)"+ "'", str29.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "null(OFF)(hi!)"+ "'", str38.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "null(OFF)(hi!)"+ "'", str59.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str68 + "' != '" + "null(OFF)(hi!)"+ "'", str68.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str69 + "' != '" + "null(OFF)(hi!)"+ "'", str69.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str77 + "' != '" + "null(OFF)(hi!)"+ "'", str77.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str78 + "' != '" + "null(OFF)(hi!)"+ "'", str78.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b82 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b84 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array85);

  }

  @Test
  public void test457() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test457"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard3.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard3.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard3.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard3.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = composeWarningsGuard3.enables(diagnosticGroup20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel23 = composeWarningsGuard3.level(jSError22);
    com.google.javascript.jscomp.JSError jSError24 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel25 = composeWarningsGuard3.level(jSError24);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str26 = composeWarningsGuard3.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel25);

  }

  @Test
  public void test458() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test458"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError14 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel15 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test459() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test459"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard12.level(jSError13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b24 = composeWarningsGuard12.disables(diagnosticGroup23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test460() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test460"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup16);
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError19 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel20 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError19);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test461() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test461"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion(52, (int)(short)0, "hi!");
    int i4 = simpleRegion3.getBeginningLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 52);

  }

  @Test
  public void test462() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test462"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard11.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard11.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard11.enables(diagnosticGroup16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard11.level(jSError18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = composeWarningsGuard11.enables(diagnosticGroup20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel23 = composeWarningsGuard11.level(jSError22);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str24 = composeWarningsGuard11.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel23);

  }

  @Test
  public void test463() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test463"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = composeWarningsGuard12.enables(diagnosticGroup21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = composeWarningsGuard12.enables(diagnosticGroup25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = composeWarningsGuard12.enables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = composeWarningsGuard12.enables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b32 = composeWarningsGuard12.disables(diagnosticGroup31);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test464() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test464"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard12.level(jSError13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.JSError jSError19 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel20 = composeWarningsGuard12.level(jSError19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel22 = composeWarningsGuard12.level(jSError21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    boolean b24 = composeWarningsGuard12.enables(diagnosticGroup23);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup25 = null;
    boolean b26 = composeWarningsGuard12.enables(diagnosticGroup25);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard29 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup27, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = diagnosticGroupPathSuppressingWarningsGuard29.disables(diagnosticGroup30);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    boolean b33 = diagnosticGroupPathSuppressingWarningsGuard29.disables(diagnosticGroup32);
    java.lang.String str34 = diagnosticGroupPathSuppressingWarningsGuard29.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    boolean b36 = diagnosticGroupPathSuppressingWarningsGuard29.disables(diagnosticGroup35);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup37 = null;
    boolean b38 = diagnosticGroupPathSuppressingWarningsGuard29.enables(diagnosticGroup37);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array39 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard12, diagnosticGroupPathSuppressingWarningsGuard29 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard40 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array39);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null(OFF)(hi!)"+ "'", str34.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array39);

  }

  @Test
  public void test465() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test465"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError5 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel6 = composeWarningsGuard4.level(jSError5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = composeWarningsGuard4.enables(diagnosticGroup7);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array9 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard10 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard10, warningsGuard_array9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard10);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard12, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = composeWarningsGuard21.enables(diagnosticGroup22);
    com.google.javascript.jscomp.JSError jSError24 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel25 = composeWarningsGuard21.level(jSError24);
    com.google.javascript.jscomp.JSError jSError26 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel27 = composeWarningsGuard21.level(jSError26);
    com.google.javascript.jscomp.JSError jSError28 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel29 = composeWarningsGuard21.level(jSError28);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array30 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard31 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard31, warningsGuard_array30);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard33 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard31);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array34 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard35 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard35, warningsGuard_array34);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard37 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard35);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array38 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard33, composeWarningsGuard37 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard39 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard39, warningsGuard_array38);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard41 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard39);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard42 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard39);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard43 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard39);
    com.google.javascript.jscomp.JSError jSError44 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel45 = composeWarningsGuard43.level(jSError44);
    com.google.javascript.jscomp.JSError jSError46 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel47 = composeWarningsGuard43.level(jSError46);
    com.google.javascript.jscomp.JSError jSError48 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel49 = composeWarningsGuard43.level(jSError48);
    com.google.javascript.jscomp.JSError jSError50 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel51 = composeWarningsGuard43.level(jSError50);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup52 = null;
    boolean b53 = composeWarningsGuard43.enables(diagnosticGroup52);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array54 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard4, composeWarningsGuard21, composeWarningsGuard43 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard55 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array54);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array54);

  }

  @Test
  public void test466() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test466"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = composeWarningsGuard3.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = composeWarningsGuard3.enables(diagnosticGroup8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b13 = composeWarningsGuard3.disables(diagnosticGroup12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test467() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test467"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.JSError jSError6 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel7 = composeWarningsGuard3.level(jSError6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard3.level(jSError10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard3.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard3.enables(diagnosticGroup16);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str18 = composeWarningsGuard3.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test468() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test468"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard14 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard14.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b18 = composeWarningsGuard14.disables(diagnosticGroup17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);

  }

  @Test
  public void test469() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test469"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)(short)100, 0, "");
    int i4 = simpleRegion3.getEndingLineNumber();
    java.lang.String str5 = simpleRegion3.getSourceExcerpt();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + ""+ "'", str5.equals(""));

  }

  @Test
  public void test470() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test470"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard12.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard12.level(jSError15);
    com.google.javascript.jscomp.JSError jSError17 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel18 = composeWarningsGuard12.level(jSError17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.JSError jSError21 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel22 = composeWarningsGuard12.level(jSError21);
    com.google.javascript.jscomp.JSError jSError23 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel24 = composeWarningsGuard12.level(jSError23);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str25 = composeWarningsGuard12.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel24);

  }

  @Test
  public void test471() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test471"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)'4', (int)' ', "null(OFF)(hi!)");
    int i4 = simpleRegion3.getBeginningLineNumber();
    int i5 = simpleRegion3.getEndingLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 32);

  }

  @Test
  public void test472() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test472"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard11.enables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard11.enables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard11.enables(diagnosticGroup16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard11.level(jSError18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = composeWarningsGuard11.enables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = composeWarningsGuard11.enables(diagnosticGroup22);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str24 = composeWarningsGuard11.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);

  }

  @Test
  public void test473() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test473"); }

    com.google.javascript.jscomp.AbstractCompiler abstractCompiler0 = null;
    com.google.javascript.jscomp.FieldCleanupPass fieldCleanupPass1 = new com.google.javascript.jscomp.FieldCleanupPass(abstractCompiler0);
    com.google.javascript.rhino.Node node2 = null;
    com.google.javascript.rhino.Node node3 = null;
    fieldCleanupPass1.process(node2, node3);
    com.google.javascript.rhino.Node node5 = null;
    com.google.javascript.rhino.Node node6 = null;
    fieldCleanupPass1.process(node5, node6);
    com.google.javascript.rhino.Node node8 = null;
    com.google.javascript.rhino.Node node9 = null;
    fieldCleanupPass1.process(node8, node9);
    com.google.javascript.rhino.Node node11 = null;
    com.google.javascript.rhino.Node node12 = null;
    fieldCleanupPass1.process(node11, node12);
    com.google.javascript.rhino.Node node14 = null;
    com.google.javascript.rhino.Node node15 = null;
    fieldCleanupPass1.process(node14, node15);
    com.google.javascript.rhino.Node node17 = null;
    com.google.javascript.rhino.Node node18 = null;
    fieldCleanupPass1.process(node17, node18);
    com.google.javascript.rhino.Node node20 = null;
    com.google.javascript.rhino.Node node21 = null;
    fieldCleanupPass1.process(node20, node21);
    com.google.javascript.rhino.Node node23 = null;
    com.google.javascript.rhino.Node node24 = null;
    fieldCleanupPass1.process(node23, node24);
    com.google.javascript.rhino.Node node26 = null;
    com.google.javascript.rhino.Node node27 = null;
    fieldCleanupPass1.process(node26, node27);
    com.google.javascript.rhino.Node node29 = null;
    com.google.javascript.rhino.Node node30 = null;
    fieldCleanupPass1.process(node29, node30);
    com.google.javascript.rhino.Node node32 = null;
    com.google.javascript.rhino.Node node33 = null;
    fieldCleanupPass1.process(node32, node33);
    com.google.javascript.rhino.Node node35 = null;
    com.google.javascript.rhino.Node node36 = null;
    fieldCleanupPass1.process(node35, node36);
    com.google.javascript.rhino.Node node38 = null;
    com.google.javascript.rhino.Node node39 = null;
    fieldCleanupPass1.process(node38, node39);
    com.google.javascript.rhino.Node node41 = null;
    com.google.javascript.rhino.Node node42 = null;
    fieldCleanupPass1.process(node41, node42);
    com.google.javascript.rhino.Node node44 = null;
    com.google.javascript.rhino.Node node45 = null;
    fieldCleanupPass1.process(node44, node45);
    com.google.javascript.rhino.Node node47 = null;
    com.google.javascript.rhino.Node node48 = null;
    fieldCleanupPass1.process(node47, node48);
    com.google.javascript.rhino.Node node50 = null;
    com.google.javascript.rhino.Node node51 = null;
    fieldCleanupPass1.process(node50, node51);
    com.google.javascript.rhino.Node node53 = null;
    com.google.javascript.rhino.Node node54 = null;
    fieldCleanupPass1.process(node53, node54);
    com.google.javascript.rhino.Node node56 = null;
    com.google.javascript.rhino.Node node57 = null;
    fieldCleanupPass1.process(node56, node57);
    com.google.javascript.rhino.Node node59 = null;
    com.google.javascript.rhino.Node node60 = null;
    fieldCleanupPass1.process(node59, node60);
    com.google.javascript.rhino.Node node62 = null;
    com.google.javascript.rhino.Node node63 = null;
    fieldCleanupPass1.process(node62, node63);
    com.google.javascript.rhino.Node node65 = null;
    com.google.javascript.rhino.Node node66 = null;
    fieldCleanupPass1.process(node65, node66);
    com.google.javascript.rhino.Node node68 = null;
    com.google.javascript.rhino.Node node69 = null;
    fieldCleanupPass1.process(node68, node69);
    com.google.javascript.rhino.Node node71 = null;
    com.google.javascript.rhino.Node node72 = null;
    fieldCleanupPass1.process(node71, node72);
    com.google.javascript.rhino.Node node74 = null;
    com.google.javascript.rhino.Node node75 = null;
    fieldCleanupPass1.process(node74, node75);
    com.google.javascript.rhino.Node node77 = null;
    com.google.javascript.rhino.Node node78 = null;
    fieldCleanupPass1.process(node77, node78);
    com.google.javascript.rhino.Node node80 = null;
    com.google.javascript.rhino.Node node81 = null;
    fieldCleanupPass1.process(node80, node81);
    com.google.javascript.rhino.Node node83 = null;
    com.google.javascript.rhino.Node node84 = null;
    // The following exception was thrown during execution in test generation
    try {
    fieldCleanupPass1.hotSwapScript(node83, node84);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }

  }

  @Test
  public void test474() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test474"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard13.level(jSError14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard13.level(jSError16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard13.level(jSError18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = composeWarningsGuard13.enables(diagnosticGroup20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel23 = composeWarningsGuard13.level(jSError22);
    com.google.javascript.jscomp.JSError jSError24 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel25 = composeWarningsGuard13.level(jSError24);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b27 = composeWarningsGuard13.disables(diagnosticGroup26);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel25);

  }

  @Test
  public void test475() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test475"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "");
    java.lang.String str3 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup4);
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str14 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard17 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup15, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard17.enables(diagnosticGroup24);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup26);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup28);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = diagnosticGroupPathSuppressingWarningsGuard17.enables(diagnosticGroup30);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    boolean b33 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup32);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array34 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard35 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard35, warningsGuard_array34);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard37 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard35);
    com.google.javascript.jscomp.JSError jSError38 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel39 = composeWarningsGuard37.level(jSError38);
    com.google.javascript.jscomp.JSError jSError40 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel41 = composeWarningsGuard37.level(jSError40);
    com.google.javascript.jscomp.JSError jSError42 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel43 = composeWarningsGuard37.level(jSError42);
    com.google.javascript.jscomp.JSError jSError44 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel45 = composeWarningsGuard37.level(jSError44);
    com.google.javascript.jscomp.JSError jSError46 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel47 = composeWarningsGuard37.level(jSError46);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup48 = null;
    boolean b49 = composeWarningsGuard37.enables(diagnosticGroup48);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup50 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard52 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup50, "null(OFF)(null(OFF)(null(OFF)(hi!)))");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup53 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard55 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup53, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup56 = null;
    boolean b57 = diagnosticGroupPathSuppressingWarningsGuard55.disables(diagnosticGroup56);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup58 = null;
    boolean b59 = diagnosticGroupPathSuppressingWarningsGuard55.enables(diagnosticGroup58);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup60 = null;
    boolean b61 = diagnosticGroupPathSuppressingWarningsGuard55.enables(diagnosticGroup60);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup62 = null;
    boolean b63 = diagnosticGroupPathSuppressingWarningsGuard55.enables(diagnosticGroup62);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup64 = null;
    boolean b65 = diagnosticGroupPathSuppressingWarningsGuard55.disables(diagnosticGroup64);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup66 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard68 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup66, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup69 = null;
    boolean b70 = diagnosticGroupPathSuppressingWarningsGuard68.disables(diagnosticGroup69);
    java.lang.String str71 = diagnosticGroupPathSuppressingWarningsGuard68.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup72 = null;
    boolean b73 = diagnosticGroupPathSuppressingWarningsGuard68.enables(diagnosticGroup72);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup74 = null;
    boolean b75 = diagnosticGroupPathSuppressingWarningsGuard68.enables(diagnosticGroup74);
    java.lang.String str76 = diagnosticGroupPathSuppressingWarningsGuard68.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup77 = null;
    boolean b78 = diagnosticGroupPathSuppressingWarningsGuard68.disables(diagnosticGroup77);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array79 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard17, composeWarningsGuard37, diagnosticGroupPathSuppressingWarningsGuard52, diagnosticGroupPathSuppressingWarningsGuard55, diagnosticGroupPathSuppressingWarningsGuard68 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard80 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array79);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "null(OFF)()"+ "'", str3.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)()"+ "'", str6.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)()"+ "'", str13.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "null(OFF)()"+ "'", str14.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str71 + "' != '" + "null(OFF)(hi!)"+ "'", str71.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str76 + "' != '" + "null(OFF)(hi!)"+ "'", str76.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array79);

  }

  @Test
  public void test476() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test476"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = composeWarningsGuard26.enables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = composeWarningsGuard26.enables(diagnosticGroup29);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = composeWarningsGuard26.enables(diagnosticGroup31);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    boolean b34 = composeWarningsGuard26.enables(diagnosticGroup33);
    com.google.javascript.jscomp.JSError jSError35 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel36 = composeWarningsGuard26.level(jSError35);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test477() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test477"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    java.lang.String str17 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup20);
    com.google.javascript.jscomp.JSError jSError22 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel23 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError22);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "null(OFF)(hi!)"+ "'", str17.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);

  }

  @Test
  public void test478() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test478"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard7.level(jSError8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard7.level(jSError10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard7.enables(diagnosticGroup12);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str14 = composeWarningsGuard7.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);

  }

  @Test
  public void test479() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test479"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard8 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard9 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = composeWarningsGuard10.enables(diagnosticGroup11);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard10.level(jSError13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard17 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup15, "");
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard17.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard17.enables(diagnosticGroup19);
    java.lang.String str21 = diagnosticGroupPathSuppressingWarningsGuard17.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard17.enables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup24);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard17.enables(diagnosticGroup26);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup28);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = diagnosticGroupPathSuppressingWarningsGuard17.disables(diagnosticGroup30);
    java.lang.String str32 = diagnosticGroupPathSuppressingWarningsGuard17.toString();
    java.lang.String str33 = diagnosticGroupPathSuppressingWarningsGuard17.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup34 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard36 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup34, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup37 = null;
    boolean b38 = diagnosticGroupPathSuppressingWarningsGuard36.disables(diagnosticGroup37);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup39 = null;
    boolean b40 = diagnosticGroupPathSuppressingWarningsGuard36.enables(diagnosticGroup39);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup41 = null;
    boolean b42 = diagnosticGroupPathSuppressingWarningsGuard36.disables(diagnosticGroup41);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup43 = null;
    boolean b44 = diagnosticGroupPathSuppressingWarningsGuard36.disables(diagnosticGroup43);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup45 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard47 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup45, "");
    java.lang.String str48 = diagnosticGroupPathSuppressingWarningsGuard47.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup49 = null;
    boolean b50 = diagnosticGroupPathSuppressingWarningsGuard47.enables(diagnosticGroup49);
    java.lang.String str51 = diagnosticGroupPathSuppressingWarningsGuard47.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup52 = null;
    boolean b53 = diagnosticGroupPathSuppressingWarningsGuard47.enables(diagnosticGroup52);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup54 = null;
    boolean b55 = diagnosticGroupPathSuppressingWarningsGuard47.disables(diagnosticGroup54);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup56 = null;
    boolean b57 = diagnosticGroupPathSuppressingWarningsGuard47.enables(diagnosticGroup56);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup58 = null;
    boolean b59 = diagnosticGroupPathSuppressingWarningsGuard47.disables(diagnosticGroup58);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array60 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard10, diagnosticGroupPathSuppressingWarningsGuard17, diagnosticGroupPathSuppressingWarningsGuard36, diagnosticGroupPathSuppressingWarningsGuard47 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard61 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array60);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)()"+ "'", str18.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "null(OFF)()"+ "'", str21.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null(OFF)()"+ "'", str32.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null(OFF)()"+ "'", str33.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str48 + "' != '" + "null(OFF)()"+ "'", str48.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "null(OFF)()"+ "'", str51.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array60);

  }

  @Test
  public void test480() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test480"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard9 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup7, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard9.disables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = diagnosticGroupPathSuppressingWarningsGuard9.disables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard9.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard9.disables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard9.disables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard9.enables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard9.enables(diagnosticGroup22);
    java.lang.String str24 = diagnosticGroupPathSuppressingWarningsGuard9.toString();
    java.lang.String str25 = diagnosticGroupPathSuppressingWarningsGuard9.toString();
    java.lang.String str26 = diagnosticGroupPathSuppressingWarningsGuard9.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup27 = null;
    boolean b28 = diagnosticGroupPathSuppressingWarningsGuard9.disables(diagnosticGroup27);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup29 = null;
    boolean b30 = diagnosticGroupPathSuppressingWarningsGuard9.disables(diagnosticGroup29);
    java.lang.String str31 = diagnosticGroupPathSuppressingWarningsGuard9.toString();
    java.lang.String str32 = diagnosticGroupPathSuppressingWarningsGuard9.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = null;
    boolean b34 = diagnosticGroupPathSuppressingWarningsGuard9.enables(diagnosticGroup33);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard37 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup35, "null(OFF)()");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup38 = null;
    boolean b39 = diagnosticGroupPathSuppressingWarningsGuard37.disables(diagnosticGroup38);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup40 = null;
    boolean b41 = diagnosticGroupPathSuppressingWarningsGuard37.disables(diagnosticGroup40);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup42 = null;
    boolean b43 = diagnosticGroupPathSuppressingWarningsGuard37.disables(diagnosticGroup42);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup44 = null;
    boolean b45 = diagnosticGroupPathSuppressingWarningsGuard37.disables(diagnosticGroup44);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup46 = null;
    boolean b47 = diagnosticGroupPathSuppressingWarningsGuard37.disables(diagnosticGroup46);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup48 = null;
    boolean b49 = diagnosticGroupPathSuppressingWarningsGuard37.enables(diagnosticGroup48);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array50 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard9, diagnosticGroupPathSuppressingWarningsGuard37 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard51 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array50);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "null(OFF)(hi!)"+ "'", str24.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null(OFF)(hi!)"+ "'", str25.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "null(OFF)(hi!)"+ "'", str26.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "null(OFF)(hi!)"+ "'", str31.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "null(OFF)(hi!)"+ "'", str32.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array50);

  }

  @Test
  public void test481() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test481"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup22);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array24 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard25 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard25, warningsGuard_array24);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard27 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard25);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array28 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard29 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard29, warningsGuard_array28);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard31 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard29);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array32 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard27, composeWarningsGuard31 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard33 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard33, warningsGuard_array32);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard35 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard33);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard36 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard33);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard37 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard33);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard38 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard33);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard39 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard33);
    com.google.javascript.jscomp.JSError jSError40 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel41 = composeWarningsGuard39.level(jSError40);
    com.google.javascript.jscomp.JSError jSError42 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel43 = composeWarningsGuard39.level(jSError42);
    com.google.javascript.jscomp.JSError jSError44 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel45 = composeWarningsGuard39.level(jSError44);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup46 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard48 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup46, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup49 = null;
    boolean b50 = diagnosticGroupPathSuppressingWarningsGuard48.disables(diagnosticGroup49);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup51 = null;
    boolean b52 = diagnosticGroupPathSuppressingWarningsGuard48.disables(diagnosticGroup51);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup53 = null;
    boolean b54 = diagnosticGroupPathSuppressingWarningsGuard48.disables(diagnosticGroup53);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup55 = null;
    boolean b56 = diagnosticGroupPathSuppressingWarningsGuard48.disables(diagnosticGroup55);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup57 = null;
    boolean b58 = diagnosticGroupPathSuppressingWarningsGuard48.disables(diagnosticGroup57);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup59 = null;
    boolean b60 = diagnosticGroupPathSuppressingWarningsGuard48.enables(diagnosticGroup59);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup61 = null;
    boolean b62 = diagnosticGroupPathSuppressingWarningsGuard48.enables(diagnosticGroup61);
    java.lang.String str63 = diagnosticGroupPathSuppressingWarningsGuard48.toString();
    java.lang.String str64 = diagnosticGroupPathSuppressingWarningsGuard48.toString();
    java.lang.String str65 = diagnosticGroupPathSuppressingWarningsGuard48.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup66 = null;
    boolean b67 = diagnosticGroupPathSuppressingWarningsGuard48.disables(diagnosticGroup66);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup68 = null;
    boolean b69 = diagnosticGroupPathSuppressingWarningsGuard48.disables(diagnosticGroup68);
    java.lang.String str70 = diagnosticGroupPathSuppressingWarningsGuard48.toString();
    java.lang.String str71 = diagnosticGroupPathSuppressingWarningsGuard48.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup72 = null;
    boolean b73 = diagnosticGroupPathSuppressingWarningsGuard48.enables(diagnosticGroup72);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup74 = null;
    boolean b75 = diagnosticGroupPathSuppressingWarningsGuard48.enables(diagnosticGroup74);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array76 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard77 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b78 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard77, warningsGuard_array76);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard79 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard77);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard80 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard77);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard81 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard77);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard82 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard77);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard83 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard77);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard84 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard77);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard85 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard77);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard86 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard77);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup87 = null;
    boolean b88 = composeWarningsGuard86.enables(diagnosticGroup87);
    com.google.javascript.jscomp.JSError jSError89 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel90 = composeWarningsGuard86.level(jSError89);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array91 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, composeWarningsGuard39, diagnosticGroupPathSuppressingWarningsGuard48, composeWarningsGuard86 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard92 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array91);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str63 + "' != '" + "null(OFF)(hi!)"+ "'", str63.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "null(OFF)(hi!)"+ "'", str64.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "null(OFF)(hi!)"+ "'", str65.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str70 + "' != '" + "null(OFF)(hi!)"+ "'", str70.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str71 + "' != '" + "null(OFF)(hi!)"+ "'", str71.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b88 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel90);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array91);

  }

  @Test
  public void test482() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test482"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard13.level(jSError14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = composeWarningsGuard13.enables(diagnosticGroup16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard13.enables(diagnosticGroup18);
    com.google.javascript.jscomp.JSError jSError20 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel21 = composeWarningsGuard13.level(jSError20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b23 = composeWarningsGuard13.disables(diagnosticGroup22);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel21);

  }

  @Test
  public void test483() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test483"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard13.enables(diagnosticGroup14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard13.level(jSError16);
    com.google.javascript.jscomp.JSError jSError18 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel19 = composeWarningsGuard13.level(jSError18);
    com.google.javascript.jscomp.JSError jSError20 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel21 = composeWarningsGuard13.level(jSError20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard24 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup22, "hi!");
    java.lang.String str25 = diagnosticGroupPathSuppressingWarningsGuard24.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard24.enables(diagnosticGroup26);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard30 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup28, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    boolean b32 = diagnosticGroupPathSuppressingWarningsGuard30.disables(diagnosticGroup31);
    java.lang.String str33 = diagnosticGroupPathSuppressingWarningsGuard30.toString();
    java.lang.String str34 = diagnosticGroupPathSuppressingWarningsGuard30.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup35 = null;
    boolean b36 = diagnosticGroupPathSuppressingWarningsGuard30.disables(diagnosticGroup35);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup37 = null;
    boolean b38 = diagnosticGroupPathSuppressingWarningsGuard30.disables(diagnosticGroup37);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup39 = null;
    boolean b40 = diagnosticGroupPathSuppressingWarningsGuard30.enables(diagnosticGroup39);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup41 = null;
    boolean b42 = diagnosticGroupPathSuppressingWarningsGuard30.disables(diagnosticGroup41);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup43 = null;
    boolean b44 = diagnosticGroupPathSuppressingWarningsGuard30.disables(diagnosticGroup43);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup45 = null;
    boolean b46 = diagnosticGroupPathSuppressingWarningsGuard30.disables(diagnosticGroup45);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array47 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard13, diagnosticGroupPathSuppressingWarningsGuard24, diagnosticGroupPathSuppressingWarningsGuard30 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard48 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array47);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "null(OFF)(hi!)"+ "'", str25.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "null(OFF)(hi!)"+ "'", str33.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "null(OFF)(hi!)"+ "'", str34.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array47);

  }

  @Test
  public void test484() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test484"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "null(OFF)(null(OFF)())");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard7 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup5, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = null;
    boolean b9 = diagnosticGroupPathSuppressingWarningsGuard7.disables(diagnosticGroup8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = diagnosticGroupPathSuppressingWarningsGuard7.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = diagnosticGroupPathSuppressingWarningsGuard7.disables(diagnosticGroup12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard7.disables(diagnosticGroup14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array16 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard7 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard17 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array16);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array16);

  }

  @Test
  public void test485() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test485"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup16);
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str19 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup22);
    java.lang.String str24 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.JSError jSError25 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel26 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null(OFF)(hi!)"+ "'", str19.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "null(OFF)(hi!)"+ "'", str24.equals("null(OFF)(hi!)"));

  }

  @Test
  public void test486() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test486"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard19 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup17, "");
    java.lang.String str20 = diagnosticGroupPathSuppressingWarningsGuard19.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard19.enables(diagnosticGroup21);
    java.lang.String str23 = diagnosticGroupPathSuppressingWarningsGuard19.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    boolean b25 = diagnosticGroupPathSuppressingWarningsGuard19.enables(diagnosticGroup24);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array26 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard27 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard27, warningsGuard_array26);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard29 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard27);
    com.google.javascript.jscomp.JSError jSError30 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel31 = composeWarningsGuard29.level(jSError30);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    boolean b33 = composeWarningsGuard29.enables(diagnosticGroup32);
    com.google.javascript.jscomp.JSError jSError34 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel35 = composeWarningsGuard29.level(jSError34);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup36 = null;
    boolean b37 = composeWarningsGuard29.enables(diagnosticGroup36);
    com.google.javascript.jscomp.JSError jSError38 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel39 = composeWarningsGuard29.level(jSError38);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup40 = null;
    boolean b41 = composeWarningsGuard29.enables(diagnosticGroup40);
    com.google.javascript.jscomp.JSError jSError42 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel43 = composeWarningsGuard29.level(jSError42);
    com.google.javascript.jscomp.JSError jSError44 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel45 = composeWarningsGuard29.level(jSError44);
    com.google.javascript.jscomp.JSError jSError46 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel47 = composeWarningsGuard29.level(jSError46);
    com.google.javascript.jscomp.JSError jSError48 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel49 = composeWarningsGuard29.level(jSError48);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup50 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard52 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup50, "hi!");
    java.lang.String str53 = diagnosticGroupPathSuppressingWarningsGuard52.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup54 = null;
    boolean b55 = diagnosticGroupPathSuppressingWarningsGuard52.enables(diagnosticGroup54);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup56 = null;
    boolean b57 = diagnosticGroupPathSuppressingWarningsGuard52.enables(diagnosticGroup56);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup58 = null;
    boolean b59 = diagnosticGroupPathSuppressingWarningsGuard52.disables(diagnosticGroup58);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup60 = null;
    boolean b61 = diagnosticGroupPathSuppressingWarningsGuard52.disables(diagnosticGroup60);
    java.lang.String str62 = diagnosticGroupPathSuppressingWarningsGuard52.toString();
    java.lang.String str63 = diagnosticGroupPathSuppressingWarningsGuard52.toString();
    java.lang.String str64 = diagnosticGroupPathSuppressingWarningsGuard52.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup65 = null;
    boolean b66 = diagnosticGroupPathSuppressingWarningsGuard52.disables(diagnosticGroup65);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup67 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard69 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup67, "hi!");
    java.lang.String str70 = diagnosticGroupPathSuppressingWarningsGuard69.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup71 = null;
    boolean b72 = diagnosticGroupPathSuppressingWarningsGuard69.enables(diagnosticGroup71);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup73 = null;
    boolean b74 = diagnosticGroupPathSuppressingWarningsGuard69.enables(diagnosticGroup73);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup75 = null;
    boolean b76 = diagnosticGroupPathSuppressingWarningsGuard69.disables(diagnosticGroup75);
    java.lang.String str77 = diagnosticGroupPathSuppressingWarningsGuard69.toString();
    java.lang.String str78 = diagnosticGroupPathSuppressingWarningsGuard69.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array79 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard19, composeWarningsGuard29, diagnosticGroupPathSuppressingWarningsGuard52, diagnosticGroupPathSuppressingWarningsGuard69 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard80 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array79);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "null(OFF)()"+ "'", str20.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "null(OFF)()"+ "'", str23.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null(OFF)(hi!)"+ "'", str53.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str62 + "' != '" + "null(OFF)(hi!)"+ "'", str62.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str63 + "' != '" + "null(OFF)(hi!)"+ "'", str63.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "null(OFF)(hi!)"+ "'", str64.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str70 + "' != '" + "null(OFF)(hi!)"+ "'", str70.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str77 + "' != '" + "null(OFF)(hi!)"+ "'", str77.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str78 + "' != '" + "null(OFF)(hi!)"+ "'", str78.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array79);

  }

  @Test
  public void test487() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test487"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard7.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard7.enables(diagnosticGroup10);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str12 = composeWarningsGuard7.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test488() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test488"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError4 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel5 = composeWarningsGuard3.level(jSError4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = null;
    boolean b11 = composeWarningsGuard3.enables(diagnosticGroup10);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup12 = null;
    boolean b13 = composeWarningsGuard3.enables(diagnosticGroup12);
    com.google.javascript.jscomp.JSError jSError14 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel15 = composeWarningsGuard3.level(jSError14);
    com.google.javascript.jscomp.JSError jSError16 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel17 = composeWarningsGuard3.level(jSError16);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup18 = null;
    boolean b19 = composeWarningsGuard3.enables(diagnosticGroup18);
    com.google.javascript.jscomp.JSError jSError20 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel21 = composeWarningsGuard3.level(jSError20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b23 = composeWarningsGuard3.disables(diagnosticGroup22);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel21);

  }

  @Test
  public void test489() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test489"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    boolean b5 = composeWarningsGuard3.enables(diagnosticGroup4);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = null;
    boolean b7 = composeWarningsGuard3.enables(diagnosticGroup6);
    com.google.javascript.jscomp.JSError jSError8 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel9 = composeWarningsGuard3.level(jSError8);
    com.google.javascript.jscomp.JSError jSError10 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel11 = composeWarningsGuard3.level(jSError10);
    com.google.javascript.jscomp.JSError jSError12 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel13 = composeWarningsGuard3.level(jSError12);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = composeWarningsGuard3.enables(diagnosticGroup14);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str16 = composeWarningsGuard3.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test490() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test490"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)'4', (int)(byte)10, "hi!");
    java.lang.String str4 = simpleRegion3.getSourceExcerpt();
    int i5 = simpleRegion3.getBeginningLineNumber();
    int i6 = simpleRegion3.getEndingLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "hi!"+ "'", str4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 10);

  }

  @Test
  public void test491() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test491"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard8 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.JSError jSError9 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel10 = composeWarningsGuard8.level(jSError9);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard8.level(jSError11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = composeWarningsGuard8.enables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel16 = composeWarningsGuard8.level(jSError15);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str17 = composeWarningsGuard8.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel16);

  }

  @Test
  public void test492() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test492"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup14);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = null;
    boolean b17 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup16);
    java.lang.String str18 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str19 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = null;
    boolean b21 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup20);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup22 = null;
    boolean b23 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup22);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup24 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard26 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup24, "");
    java.lang.String str27 = diagnosticGroupPathSuppressingWarningsGuard26.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup28 = null;
    boolean b29 = diagnosticGroupPathSuppressingWarningsGuard26.enables(diagnosticGroup28);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = diagnosticGroupPathSuppressingWarningsGuard26.disables(diagnosticGroup30);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    boolean b33 = diagnosticGroupPathSuppressingWarningsGuard26.enables(diagnosticGroup32);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup34 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard36 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup34, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup37 = null;
    boolean b38 = diagnosticGroupPathSuppressingWarningsGuard36.disables(diagnosticGroup37);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup39 = null;
    boolean b40 = diagnosticGroupPathSuppressingWarningsGuard36.disables(diagnosticGroup39);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup41 = null;
    boolean b42 = diagnosticGroupPathSuppressingWarningsGuard36.disables(diagnosticGroup41);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup43 = null;
    boolean b44 = diagnosticGroupPathSuppressingWarningsGuard36.disables(diagnosticGroup43);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup45 = null;
    boolean b46 = diagnosticGroupPathSuppressingWarningsGuard36.disables(diagnosticGroup45);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup47 = null;
    boolean b48 = diagnosticGroupPathSuppressingWarningsGuard36.disables(diagnosticGroup47);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup49 = null;
    boolean b50 = diagnosticGroupPathSuppressingWarningsGuard36.disables(diagnosticGroup49);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup51 = null;
    boolean b52 = diagnosticGroupPathSuppressingWarningsGuard36.disables(diagnosticGroup51);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array53 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard54 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard54, warningsGuard_array53);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard56 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard54);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array57 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard58 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard58, warningsGuard_array57);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard60 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard58);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array61 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard56, composeWarningsGuard60 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard62 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard62, warningsGuard_array61);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard64 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard62);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard65 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard62);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup66 = null;
    boolean b67 = composeWarningsGuard65.enables(diagnosticGroup66);
    com.google.javascript.jscomp.JSError jSError68 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel69 = composeWarningsGuard65.level(jSError68);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup70 = null;
    boolean b71 = composeWarningsGuard65.enables(diagnosticGroup70);
    com.google.javascript.jscomp.JSError jSError72 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel73 = composeWarningsGuard65.level(jSError72);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup74 = null;
    boolean b75 = composeWarningsGuard65.enables(diagnosticGroup74);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array76 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard26, diagnosticGroupPathSuppressingWarningsGuard36, composeWarningsGuard65 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard77 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array76);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "null(OFF)(hi!)"+ "'", str18.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "null(OFF)(hi!)"+ "'", str19.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null(OFF)()"+ "'", str27.equals("null(OFF)()"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array76);

  }

  @Test
  public void test493() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test493"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.JSError jSError13 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel14 = composeWarningsGuard12.level(jSError13);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup15 = null;
    boolean b16 = composeWarningsGuard12.enables(diagnosticGroup15);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = composeWarningsGuard12.enables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = composeWarningsGuard12.enables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b22 = composeWarningsGuard12.disables(diagnosticGroup21);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test494() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test494"); }

    com.google.javascript.jscomp.SimpleRegion simpleRegion3 = new com.google.javascript.jscomp.SimpleRegion((int)(short)1, (int)(byte)-1, "null(OFF)(null(OFF)(null(OFF)(hi!)))");
    int i4 = simpleRegion3.getBeginningLineNumber();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 1);

  }

  @Test
  public void test495() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test495"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array4 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard5 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5, warningsGuard_array4);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard5);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array8 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, composeWarningsGuard7 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard9 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9, warningsGuard_array8);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard11 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard12 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard13 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard14 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard15 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard9);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str17 = composeWarningsGuard16.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);

  }

  @Test
  public void test496() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test496"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard4 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard5 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard6 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard7 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard8 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = composeWarningsGuard8.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = composeWarningsGuard8.enables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b14 = composeWarningsGuard8.disables(diagnosticGroup13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test497() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test497"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard27 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard28 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard29 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard30 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup31 = null;
    // The following exception was thrown during execution in test generation
    try {
    boolean b32 = composeWarningsGuard30.disables(diagnosticGroup31);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);

  }

  @Test
  public void test498() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test498"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = null;
    boolean b6 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup5);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup7);
    java.lang.String str9 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str10 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup13 = null;
    boolean b14 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup13);
    com.google.javascript.jscomp.JSError jSError15 = null;
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.CheckLevel checkLevel16 = diagnosticGroupPathSuppressingWarningsGuard2.level(jSError15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "null(OFF)(hi!)"+ "'", str9.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "null(OFF)(hi!)"+ "'", str10.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test499() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test499"); }

    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard2 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup0, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = null;
    boolean b4 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup3);
    java.lang.String str5 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    java.lang.String str6 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup7 = null;
    boolean b8 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup7);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup9 = null;
    boolean b10 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup9);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup11 = null;
    boolean b12 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup11);
    java.lang.String str13 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup14 = null;
    boolean b15 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup14);
    java.lang.String str16 = diagnosticGroupPathSuppressingWarningsGuard2.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup17 = null;
    boolean b18 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup17);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup19 = null;
    boolean b20 = diagnosticGroupPathSuppressingWarningsGuard2.disables(diagnosticGroup19);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup21 = null;
    boolean b22 = diagnosticGroupPathSuppressingWarningsGuard2.enables(diagnosticGroup21);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup23 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard25 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup23, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup26 = null;
    boolean b27 = diagnosticGroupPathSuppressingWarningsGuard25.disables(diagnosticGroup26);
    java.lang.String str28 = diagnosticGroupPathSuppressingWarningsGuard25.toString();
    java.lang.String str29 = diagnosticGroupPathSuppressingWarningsGuard25.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup30 = null;
    boolean b31 = diagnosticGroupPathSuppressingWarningsGuard25.enables(diagnosticGroup30);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    boolean b33 = diagnosticGroupPathSuppressingWarningsGuard25.enables(diagnosticGroup32);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup34 = null;
    boolean b35 = diagnosticGroupPathSuppressingWarningsGuard25.disables(diagnosticGroup34);
    java.lang.String str36 = diagnosticGroupPathSuppressingWarningsGuard25.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup37 = null;
    boolean b38 = diagnosticGroupPathSuppressingWarningsGuard25.disables(diagnosticGroup37);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup39 = null;
    boolean b40 = diagnosticGroupPathSuppressingWarningsGuard25.enables(diagnosticGroup39);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup41 = null;
    boolean b42 = diagnosticGroupPathSuppressingWarningsGuard25.disables(diagnosticGroup41);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup43 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard45 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup43, "hi!");
    java.lang.String str46 = diagnosticGroupPathSuppressingWarningsGuard45.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup47 = null;
    boolean b48 = diagnosticGroupPathSuppressingWarningsGuard45.enables(diagnosticGroup47);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup49 = null;
    boolean b50 = diagnosticGroupPathSuppressingWarningsGuard45.enables(diagnosticGroup49);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup51 = null;
    boolean b52 = diagnosticGroupPathSuppressingWarningsGuard45.disables(diagnosticGroup51);
    java.lang.String str53 = diagnosticGroupPathSuppressingWarningsGuard45.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup54 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard56 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup54, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup57 = null;
    boolean b58 = diagnosticGroupPathSuppressingWarningsGuard56.enables(diagnosticGroup57);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup59 = null;
    boolean b60 = diagnosticGroupPathSuppressingWarningsGuard56.disables(diagnosticGroup59);
    java.lang.String str61 = diagnosticGroupPathSuppressingWarningsGuard56.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup62 = null;
    boolean b63 = diagnosticGroupPathSuppressingWarningsGuard56.disables(diagnosticGroup62);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup64 = null;
    boolean b65 = diagnosticGroupPathSuppressingWarningsGuard56.disables(diagnosticGroup64);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup66 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard68 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup66, "hi!");
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup69 = null;
    boolean b70 = diagnosticGroupPathSuppressingWarningsGuard68.disables(diagnosticGroup69);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup71 = null;
    boolean b72 = diagnosticGroupPathSuppressingWarningsGuard68.disables(diagnosticGroup71);
    java.lang.String str73 = diagnosticGroupPathSuppressingWarningsGuard68.toString();
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup74 = null;
    boolean b75 = diagnosticGroupPathSuppressingWarningsGuard68.disables(diagnosticGroup74);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup76 = null;
    boolean b77 = diagnosticGroupPathSuppressingWarningsGuard68.enables(diagnosticGroup76);
    java.lang.String str78 = diagnosticGroupPathSuppressingWarningsGuard68.toString();
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array79 = new com.google.javascript.jscomp.WarningsGuard[] { diagnosticGroupPathSuppressingWarningsGuard2, diagnosticGroupPathSuppressingWarningsGuard25, diagnosticGroupPathSuppressingWarningsGuard45, diagnosticGroupPathSuppressingWarningsGuard56, diagnosticGroupPathSuppressingWarningsGuard68 };
    // The following exception was thrown during execution in test generation
    try {
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard80 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuard_array79);
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "null(OFF)(hi!)"+ "'", str5.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "null(OFF)(hi!)"+ "'", str6.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "null(OFF)(hi!)"+ "'", str13.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "null(OFF)(hi!)"+ "'", str16.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "null(OFF)(hi!)"+ "'", str28.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "null(OFF)(hi!)"+ "'", str29.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "null(OFF)(hi!)"+ "'", str36.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "null(OFF)(hi!)"+ "'", str46.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "null(OFF)(hi!)"+ "'", str53.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str61 + "' != '" + "null(OFF)(hi!)"+ "'", str61.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str73 + "' != '" + "null(OFF)(hi!)"+ "'", str73.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str78 + "' != '" + "null(OFF)(hi!)"+ "'", str78.equals("null(OFF)(hi!)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array79);

  }

  @Test
  public void test500() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest1.test500"); }

    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array0 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard1 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1, warningsGuard_array0);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard3 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard1);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = null;
    com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard diagnosticGroupPathSuppressingWarningsGuard6 = new com.google.javascript.jscomp.DiagnosticGroupPathSuppressingWarningsGuard(diagnosticGroup4, "hi!");
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array7 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard8 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8, warningsGuard_array7);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard10 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard8);
    com.google.javascript.jscomp.JSError jSError11 = null;
    com.google.javascript.jscomp.CheckLevel checkLevel12 = composeWarningsGuard10.level(jSError11);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array13 = new com.google.javascript.jscomp.WarningsGuard[] {  };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard14 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14, warningsGuard_array13);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard14);
    com.google.javascript.jscomp.WarningsGuard[] warningsGuard_array17 = new com.google.javascript.jscomp.WarningsGuard[] { composeWarningsGuard3, diagnosticGroupPathSuppressingWarningsGuard6, composeWarningsGuard10, composeWarningsGuard16 };
    java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard> arraylist_warningsGuard18 = new java.util.ArrayList<com.google.javascript.jscomp.WarningsGuard>();
    boolean b19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18, warningsGuard_array17);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard22 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard23 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard24 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard25 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard26 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard27 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard28 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard29 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard30 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard31 = new com.google.javascript.jscomp.ComposeWarningsGuard((java.util.List<com.google.javascript.jscomp.WarningsGuard>)arraylist_warningsGuard18);
    com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup32 = null;
    boolean b33 = composeWarningsGuard31.enables(diagnosticGroup32);
    // The following exception was thrown during execution in test generation
    try {
    java.lang.String str34 = composeWarningsGuard31.toString();
      org.junit.Assert.fail("Expected exception of type java.lang.NoClassDefFoundError");
    } catch (java.lang.NoClassDefFoundError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(checkLevel12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(warningsGuard_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);

  }

}
